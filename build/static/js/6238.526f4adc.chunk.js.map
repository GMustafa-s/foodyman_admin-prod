{"version":3,"file":"static/js/6238.526f4adc.chunk.js","mappings":"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","sources":["components/filter-column.js","helpers/formatSortType.js","views/bonus/index.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Space, Table, Tag } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport FilterColumns from '../../components/filter-column';\nimport { fetchBonusList } from '../../redux/slices/bonus-list';\nimport formatSortType from '../../helpers/formatSortType';\nimport moment from 'moment';\nimport useDidUpdate from '../../helpers/useDidUpdate';\n\nconst BonusList = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { bonus, meta, loading, params } = useSelector(\n    (state) => state.bonusList,\n    shallowEqual\n  );\n  const data = activeMenu?.data;\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    // {\n    //   title: t('bonusable'),\n    //   dataIndex: 'bonusable',\n    //   key: 'bonusable',\n    //   is_show: true,\n    //   render: (bonusable) => bonusable?.product?.translation?.title,\n    // },\n    {\n      title: t('bonus.stock'),\n      dataIndex: 'bonusStock',\n      key: 'bonusStock',\n      is_show: true,\n      render: (bonusStock, row) => bonusStock?.product?.translation?.title,\n    },\n    {\n      title: t('shop'),\n      dataIndex: 'shop',\n      key: 'shop',\n      is_show: true,\n      render: (_, row) => row.shop?.translation?.title,\n    },\n    {\n      title: t('expired.at'),\n      dataIndex: 'expired_at',\n      key: 'expired_at',\n      is_show: true,\n      render: (expired_at) => (\n        <div>\n          {moment(new Date()).isBefore(expired_at) ? (\n            <Tag color='blue'>{expired_at}</Tag>\n          ) : (\n            <Tag color='error'>{expired_at}</Tag>\n          )}\n        </div>\n      ),\n    },\n  ]);\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchBonusList(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchBonusList(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      })\n    );\n  }\n\n  return (\n    <Card\n      title={t('storeis')}\n      extra={\n        <Space>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={bonus}\n        pagination={{\n          pageSize: params.perPage,\n          page: activeMenu.data?.page || 1,\n          total: meta.total,\n          defaultCurrent: activeMenu.data?.page,\n          current: activeMenu.data?.page,\n        }}\n        rowKey={(record) => record.id}\n        loading={loading}\n        onChange={onChangePagination}\n      />\n    </Card>\n  );\n};\n\nexport default BonusList;\n","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["Text","Typography","_ref","columns","setColumns","style","size","iconOnly","t","useTranslation","open","setOpen","useState","menu","_jsx","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","onClick","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","Button","icon","TableOutlined","formatSortType","type","BonusList","_activeMenu$data","_activeMenu$data2","_activeMenu$data3","dispatch","useDispatch","activeMenu","useSelector","state","shallowEqual","bonus","meta","loading","params","bonusList","data","paramsData","sort","column","perPage","page","sorter","render","bonusStock","row","_bonusStock$product","_bonusStock$product$t","product","translation","_","_row$shop","_row$shop$translation","shop","expired_at","moment","Date","isBefore","Tag","color","useEffect","refetch","fetchBonusList","disableRefetch","useDidUpdate","Card","extra","FilterColumns","Table","scroll","x","filter","dataSource","pagination","pageSize","total","defaultCurrent","current","rowKey","record","id","field","order","setMenuData","props","ref","React","AntdIcon","_objectSpread","TableOutlinedSvg","displayName"],"sourceRoot":""}