{"version":3,"file":"static/js/6167.d1baedd2.chunk.js","mappings":"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","sources":["constants/index.js","views/seller-views/users/components/form/add/input-fields/input-fields.js","views/seller-views/users/components/form/add/add.js","views/seller-views/users/add.js"],"sourcesContent":["export const mockOrderList = {\n  new: [1, 2, 3, 4, 5],\n  accepted: [1, 2, 3, 4, 5],\n  ready: [1, 2, 3, 4, 5],\n  on_a_way: [1, 2, 3, 4, 5],\n  delivered: [1, 2, 3, 4, 5],\n  canceled: [1, 2, 3, 4, 5],\n  cooking: [1, 2, 3, 4, 5],\n};\n\nexport const transactionStatuses = [\n  'progress',\n  'paid',\n  'canceled',\n  'rejected',\n  'refund',\n];\n\nexport const orderPayments = ['before', 'after'];\n\nexport const LOCALE_COLORS = ['blue', 'red', 'gold', 'volcano', 'cyan', 'lime'];\n\nexport const ORDER_DETAILS_STATUSES = [\n  'new',\n  'accepted',\n  'cooking',\n  'ready',\n  'ended',\n];\n\nexport const SHOP_EMAIL_STATUSES = [\n  'new',\n  'accepted',\n  'cooking',\n  'ready',\n  'on_a_way',\n  'delivered',\n  'canceled',\n];\n\nexport const ORDER_TYPES = ['dine_in', 'delivery', 'pickup'];\n\nexport const userGenders = ['male', 'female'];\n","import { Col, DatePicker, Form, Input, InputNumber, Row, Select } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { userGenders } from 'constants/index';\nimport moment from 'moment/moment';\nimport React from 'react';\nimport MediaUpload from 'components/upload';\n\nconst InputFields = ({ avatar, setAvatar, form }) => {\n  const { t } = useTranslation();\n  return (\n    <Row gutter={12}>\n      <Col span={24}>\n        <Form.Item\n          name='images'\n          label={t('avatar')}\n          rules={[{ required: !avatar?.length, message: t('required') }]}\n        >\n          <MediaUpload\n            type='users'\n            imageList={avatar}\n            setImageList={setAvatar}\n            multiple={false}\n            form={form}\n          />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item\n          name='firstname'\n          label={t('firstname')}\n          rules={[\n            { required: true, message: t('required') },\n            { type: 'string', min: 2, message: t('min.2.letters') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item\n          name='lastname'\n          label={t('lastname')}\n          rules={[\n            { required: true, message: t('required') },\n            { type: 'string', min: 2, message: t('min.2.letters') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item\n          name='birthday'\n          label={t('birthday')}\n          rules={[\n            {\n              required: true,\n              message: t('required'),\n            },\n          ]}\n        >\n          <DatePicker\n            className='w-100'\n            disabledDate={(current) => moment().add(-18, 'years') <= current}\n            defaultPickerValue={moment().add(-18, 'years')}\n            placeholder=''\n          />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item\n          name='gender'\n          label={t('gender')}\n          rules={[{ required: true, message: t('required') }]}\n        >\n          <Select\n            labelInValue\n            options={userGenders.map((item) => ({\n              label: t(item),\n              value: item,\n              key: item,\n            }))}\n          />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item\n          name='phone'\n          label={t('phone')}\n          rules={[{ required: true, message: t('required') }]}\n        >\n          <InputNumber min={0} className='w-100' />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item\n          name='email'\n          label={t('email')}\n          rules={[\n            {\n              required: true,\n              message: t('required'),\n            },\n            {\n              type: 'email',\n              message: t('invalid.email'),\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item\n          label={t('password')}\n          name='password'\n          rules={[\n            { required: true, message: t('required') },\n            {\n              validator(_, value) {\n                if (value && value?.toString().length < 6) {\n                  return Promise.reject(new Error(t('min.6.letters')));\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n          normalize={(value) => (value?.trim() === '' ? value?.trim() : value)}\n        >\n          <Input.Password type='password' className='w-100' />\n        </Form.Item>\n      </Col>\n\n      <Col span={12}>\n        <Form.Item\n          label={t('password.confirmation')}\n          name='password_confirmation'\n          dependencies={['password']}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: t('required'),\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(t('two.passwords.dont.match'));\n              },\n            }),\n          ]}\n          normalize={(value) => (value?.trim() === '' ? value?.trim() : value)}\n        >\n          <Input.Password type='password' />\n        </Form.Item>\n      </Col>\n    </Row>\n  );\n};\n\nexport default InputFields;\n","import { Button, Card, Form } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport userService from 'services/seller/user';\nimport { removeFromMenu } from 'redux/slices/menu';\nimport { toast } from 'react-toastify';\nimport InputFields from './input-fields';\n\nconst ShopUsersAdd = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const params = useParams();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [form] = Form.useForm();\n  const [avatar, setAvatar] = useState([]);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const onFinish = (values) => {\n    const body = {\n      images: avatar?.length ? avatar?.map((item) => item?.name) : undefined,\n      firstname: values?.firstname,\n      lastname: values?.lastname,\n      birthday: moment(values?.birthday).format('YYYY-MM-DD'),\n      gender: values?.gender?.value,\n      phone: values?.phone,\n      email: values?.email,\n      password: values?.password,\n      password_confirmation: values?.password_confirmation,\n      role: params?.role,\n    };\n    setLoadingBtn(true);\n    userService\n      .create(body)\n      .then(() => {\n        toast.success(t('user.successfully.added'));\n        const nextUrl = 'seller/shop-users';\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        navigate(`/${nextUrl}?role=${params?.role}`);\n      })\n      .finally(() => {\n        setLoadingBtn(false);\n      });\n  };\n  return (\n    <Form form={form} layout='vertical' onFinish={onFinish}>\n      <Card>\n        <InputFields avatar={avatar} setAvatar={setAvatar} form={form} />\n      </Card>\n      <Card>\n        <Button type='primary' htmlType='submit' loading={loadingBtn}>\n          {t('save')}\n        </Button>\n      </Card>\n    </Form>\n  );\n};\n\nexport default ShopUsersAdd;\n","import ShopUsersAdd from './components/form/add';\n\nconst ShopUsersAddComponent = () => {\n  return <ShopUsersAdd />;\n};\nexport default ShopUsersAddComponent;\n"],"names":["mockOrderList","new","accepted","ready","on_a_way","delivered","canceled","cooking","transactionStatuses","orderPayments","LOCALE_COLORS","ORDER_DETAILS_STATUSES","SHOP_EMAIL_STATUSES","ORDER_TYPES","userGenders","_ref","avatar","setAvatar","form","t","useTranslation","_jsxs","Row","gutter","children","_jsx","Col","span","Form","name","label","rules","required","length","message","MediaUpload","type","imageList","setImageList","multiple","min","Input","DatePicker","className","disabledDate","current","moment","add","defaultPickerValue","placeholder","Select","labelInValue","options","item","value","key","InputNumber","validator","_","toString","Promise","reject","Error","resolve","normalize","trim","dependencies","hasFeedback","_ref2","getFieldValue","rule","ShopUsersAdd","navigate","useNavigate","dispatch","useDispatch","params","useParams","activeMenu","useSelector","state","menu","shallowEqual","useState","loadingBtn","setLoadingBtn","layout","onFinish","values","_values$gender","body","images","map","undefined","firstname","lastname","birthday","format","gender","phone","email","password","password_confirmation","role","userService","then","toast","nextUrl","removeFromMenu","finally","Card","InputFields","Button","htmlType","loading","ShopUsersAddComponent"],"sourceRoot":""}