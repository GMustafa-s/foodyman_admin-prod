{"version":3,"file":"static/js/6355.b281a5c9.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","components/result-modal.js","views/message-subscribers/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React from 'react';\nimport { Button, Modal, Result } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst ResultModal = ({\n  open,\n  handleCancel,\n  text,\n  click,\n  loading,\n  subTitle,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal closable={false} visible={open} footer={null} centered>\n      <Result status='warning' title={text} subTitle={subTitle} />\n      <div className='d-flex justify-content-end'>\n        <Button\n          type='primary'\n          className='mr-2'\n          onClick={click}\n          loading={loading}\n        >\n          {t('yes')}\n        </Button>\n        <Button onClick={() => handleCancel()}>{t('no')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ResultModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Card, Space, Table, Tag } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { addMenu, disableRefetch } from '../../redux/slices/menu';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport DeleteButton from '../../components/delete-button';\nimport { fetchMessageSubscriber } from '../../redux/slices/messegeSubscriber';\nimport messageSubscriberService from '../../services/messageSubscriber';\nimport moment from 'moment';\nimport FilterColumns from '../../components/filter-column';\nimport ResultModal from '../../components/result-modal';\n\nconst MessageSubciribed = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `message/subscriber/${row.id}`,\n        id: 'subciribed_edit',\n        name: t('edit.subscriber'),\n      })\n    );\n    navigate(`/message/subscriber/${row.id}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n    },\n    {\n      title: t('send.to'),\n      dataIndex: 'send_to',\n      key: 'send_to',\n      is_show: true,\n      render: (expired_at) => (\n        <div>\n          {moment(new Date()).isBefore(expired_at) ? (\n            <Tag color='blue'>{moment(expired_at).format('YYYY-MM-DD HH:mm')}</Tag>\n          ) : (\n            <Tag color='error'>{moment(expired_at).format('YYYY-MM-DD HH:mm')}</Tag>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (_, row) => moment(row?.created_at).format('YYYY-MM-DD HH:mm')\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => (\n        <Space>\n          <Button\n            type='primary'\n            icon={<EditOutlined />}\n            onClick={() => goToEdit(row)}\n          />\n          <DeleteButton\n            icon={<DeleteOutlined />}\n            onClick={() => {\n              setIsModalVisible(true);\n              setId([row.id]);\n              setType(false);\n              setText(true);\n            }}\n          />\n        </Space>\n      ),\n    },\n  ]);\n\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [type, setType] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [text, setText] = useState(null);\n  const [restore, setRestore] = useState(null);\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { subscribers, loading } = useSelector(\n    (state) => state.messageSubscriber,\n    shallowEqual\n  );\n\n  const subscriberDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    messageSubscriberService\n      .delete(params)\n      .then(() => {\n        dispatch(fetchMessageSubscriber());\n        toast.success(t('successfully.deleted'));\n      })\n      .finally(() => {\n        setIsModalVisible(false);\n        setLoadingBtn(false);\n        setText(null);\n      });\n  };\n\n  const subscriberDropAll = () => {\n    setLoadingBtn(true);\n    messageSubscriberService\n      .dropAll()\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchMessageSubscriber());\n        setRestore(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const subscriberRestoreAll = () => {\n    setLoadingBtn(true);\n    messageSubscriberService\n      .restoreAll()\n      .then(() => {\n        toast.success(t('successfully.restored'));\n        dispatch(fetchMessageSubscriber());\n        setRestore(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchMessageSubscriber());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  const onChangePagination = (pageNumber) => {\n    const { pageSize, current } = pageNumber;\n    dispatch(fetchMessageSubscriber({ perPage: pageSize, page: current }));\n  };\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  const goToAdd = () => {\n    dispatch(\n      addMenu({\n        id: 'message_subscriber_add',\n        url: `message/subscriber/add`,\n        name: t('add.subciribed'),\n      })\n    );\n    navigate(`/message/subscriber/add`);\n  };\n\n  return (\n    <Card\n      title={t('message.subscriber')}\n      extra={\n        <Space>\n          <Button\n            icon={<PlusCircleOutlined />}\n            type='primary'\n            onClick={goToAdd}\n          >\n            {t('add.subscriber')}\n          </Button>\n\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={subscribers}\n        rowKey={(record) => record.id}\n        loading={loading}\n        onChange={onChangePagination}\n      />\n      <CustomModal\n        click={subscriberDelete}\n        text={\n          type ? t('set.active.banner') : text ? t('delete') : t('all.delete')\n        }\n        loading={loadingBtn}\n        setText={setId}\n      />\n\n      {restore && (\n        <ResultModal\n          open={restore}\n          handleCancel={() => setRestore(null)}\n          click={restore.restore ? subscriberRestoreAll : subscriberDropAll}\n          text={restore.restore ? t('restore.modal.text') : t('read.carefully')}\n          subTitle={restore.restore ? '' : t('confirm.deletion')}\n          loading={loadingBtn}\n          setText={setId}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default MessageSubciribed;\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","handleCancel","text","click","loading","subTitle","Modal","closable","footer","centered","Result","status","MessageSubciribed","dispatch","useDispatch","navigate","useNavigate","render","expired_at","moment","Date","isBefore","Tag","color","format","_","row","created_at","EditOutlined","addMenu","url","id","name","goToEdit","setIsModalVisible","setId","setType","setText","useContext","Context","loadingBtn","setLoadingBtn","restore","setRestore","activeMenu","useSelector","state","shallowEqual","subscribers","messageSubscriber","useEffect","refetch","fetchMessageSubscriber","disableRefetch","rowSelection","selectedRowKeys","Card","extra","PlusCircleOutlined","goToAdd","allDelete","length","FilterColumns","Table","scroll","x","filter","dataSource","rowKey","record","pageNumber","pageSize","current","perPage","page","CustomModal","subscriberDelete","params","Object","assign","index","messageSubscriberService","then","finally","ResultModal","subscriberRestoreAll","subscriberDropAll","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}