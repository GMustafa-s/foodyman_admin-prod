{"version":3,"file":"static/js/7562.171942a4.chunk.js","mappings":"ySAYA,MAAM,KAAEA,GAASC,EAAAA,EAoGjB,EAlGkBC,KAAO,IAADC,EAAAC,EAAAC,EACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACR,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,IACpDC,GAAWC,EAAAA,EAAAA,OACVC,GAAQC,EAAAA,EAAAA,UACTC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAYC,EAAAA,EAAAA,UACT,QAAflB,EAAAK,EAAWc,YAAI,IAAAnB,GAAfA,EAAiBgB,MAAQ,CAAgB,QAAhBf,EAACI,EAAWc,YAAI,IAAAlB,OAAA,EAAfA,EAAiBe,OAAS,KAG/CI,EAASC,IAAcH,EAAAA,EAAAA,WAAwB,QAAfhB,EAAAG,EAAWc,YAAI,IAAAjB,OAAA,EAAfA,EAAiBoB,OAAQ,GAE1DC,EAAOA,KAEXF,EADaD,EAAU,IAInBI,EAAOA,KAEXH,EADaD,EAAU,KAGlBK,EAAYC,IAAiBR,EAAAA,EAAAA,WAAS,IAE7CS,EAAAA,EAAAA,YAAU,IACD,KACL,MAAMR,EAAOP,EAAKgB,gBAAe,GACjClB,GAASmB,EAAAA,EAAAA,IAAY,CAAExB,WAAAA,EAAYc,KAAAA,OAEpC,IAgCH,OACEW,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAO7B,EAAE,cAAe8B,OAAOH,EAAAA,EAAAA,KAACI,EAAAA,EAAY,IAAIC,UACpDC,EAAAA,EAAAA,MAACvB,EAAAA,EAAI,CACHwB,OAAO,WACPC,SAlCYC,IAAY,IAADC,EAAAC,EAC3B7B,EAAK8B,iBACL,MAAMC,EAAO,IACRJ,EACHK,WAAYL,EAAOK,WAAWC,WAC9BC,YAAaP,EAAOO,YAAYD,WAChCE,OAAa,OAAL/B,QAAK,IAALA,OAAK,EAALA,EAAOgC,KAAKC,GAAQA,EAAIC,OAChCC,YAAaZ,EAAOY,YAAYC,MAChCC,OAAqB,QAAfb,EAAED,EAAOc,cAAM,IAAAb,OAAA,EAAbA,EAAeQ,KAAKM,IAAK,CAC/BC,aAAcD,EAAMC,aACpBC,SAAUF,EAAME,SAASJ,UAE3BK,UAA2B,QAAlBhB,EAAEF,EAAOkB,iBAAS,IAAAhB,OAAA,EAAhBA,EAAkBO,KAAKS,IAAS,IACtCA,EACHC,WAAYD,EAAUC,WAAWb,WACjCc,OAAQF,EAAUE,OAAOd,gBAG7BnB,GAAc,GACd,MAAMkC,EAAU,gBAChBC,EAAAA,EAAAA,OACUlB,GACPmB,MAAK,KACJC,EAAAA,GAAAA,QAAc5D,EAAE,yBAChBW,EAAS,IAAI8C,KACblD,GAASsD,EAAAA,EAAAA,IAAe,IAAK3D,EAAYuD,QAAAA,QAE1CK,SAAQ,IAAMvC,GAAc,MAQ3Bd,KAAMA,EACNsD,cAAe,CAAEC,QAAQ,KAAS9D,EAAWc,MAAOgB,SAAA,EAEpDL,EAAAA,EAAAA,KAAChC,EAAAA,EAAK,CAACsB,QAASA,EAAQe,SACrBiC,EAAAA,EAAAA,KAAWC,IACVvC,EAAAA,EAAAA,KAACjC,EAAI,CAACmC,MAAO7B,EAAEkE,EAAKrC,QAAaqC,EAAKrC,WAGzCoC,EAAAA,EAAAA,KAAWC,IACV,MAAMC,EAAYD,EAAKE,QACvB,OACEzC,EAAAA,EAAAA,KAAA,OAEE0C,UAAW,iBACTH,EAAK/C,OAASF,EAAU,GAAK,WAC5Be,UAEHL,EAAAA,EAAAA,KAACwC,EAAS,CACR/C,KAAMA,EACNC,KAAMA,EACNiD,QAAShD,EACTT,MAAOA,EACPC,SAAUA,KAVPoD,EAAKrC","sources":["views/seller-views/recepts/recept-add.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form, Steps } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from '../../../redux/slices/menu';\n\nimport { useTranslation } from 'react-i18next';\nimport LanguageList from '../../../components/language-list';\nimport sellerReceptService from '../../../services/seller/reciept';\nimport { steps } from './steps';\n\nconst { Step } = Steps;\n\nconst ReceptAdd = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  const [image, setImage] = useState(\n    activeMenu.data?.image ? [activeMenu.data?.image] : []\n  );\n\n  const [current, setCurrent] = useState(activeMenu.data?.step || 0);\n\n  const next = () => {\n    const step = current + 1;\n    setCurrent(step);\n  };\n\n  const prev = () => {\n    const step = current - 1;\n    setCurrent(step);\n  };\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n  }, []);\n\n  const onFinish = (values) => {\n    form.validateFields();\n    const body = {\n      ...values,\n      total_time: values.total_time.toString(),\n      active_time: values.active_time.toString(),\n      images: image?.map((img) => img.name),\n      category_id: values.category_id.value,\n      stocks: values.stocks?.map((stock) => ({\n        min_quantity: stock.min_quantity,\n        stock_id: stock.stock_id.value,\n      })),\n      nutrition: values.nutrition?.map((nutrition) => ({\n        ...nutrition,\n        percentage: nutrition.percentage.toString(),\n        weight: nutrition.weight.toString(),\n      })),\n    };\n    setLoadingBtn(true);\n    const nextUrl = 'seller/recept';\n    sellerReceptService\n      .create(body)\n      .then(() => {\n        toast.success(t('successfully.created'));\n        navigate(`/${nextUrl}`);\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Card title={t('add.recepe')} extra={<LanguageList />}>\n      <Form\n        layout='vertical'\n        onFinish={onFinish}\n        form={form}\n        initialValues={{ active: true, ...activeMenu.data }}\n      >\n        <Steps current={current}>\n          {steps.map((item) => (\n            <Step title={t(item.title)} key={item.title} />\n          ))}\n        </Steps>\n        {steps.map((item) => {\n          const Component = item.content;\n          return (\n            <div\n              key={item.title}\n              className={`steps-content ${\n                item.step !== current + 1 && 'hidden'\n              }`}\n            >\n              <Component\n                next={next}\n                prev={prev}\n                loading={loadingBtn}\n                image={image}\n                setImage={setImage}\n              />\n            </div>\n          );\n        })}\n      </Form>\n    </Card>\n  );\n};\n\nexport default ReceptAdd;\n"],"names":["Step","Steps","ReceptAdd","_activeMenu$data","_activeMenu$data2","_activeMenu$data3","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","form","Form","navigate","useNavigate","image","setImage","useState","data","current","setCurrent","step","next","prev","loadingBtn","setLoadingBtn","useEffect","getFieldsValue","setMenuData","_jsx","Card","title","extra","LanguageList","children","_jsxs","layout","onFinish","values","_values$stocks","_values$nutrition","validateFields","body","total_time","toString","active_time","images","map","img","name","category_id","value","stocks","stock","min_quantity","stock_id","nutrition","percentage","weight","nextUrl","sellerReceptService","then","toast","removeFromMenu","finally","initialValues","active","steps","item","Component","content","className","loading"],"sourceRoot":""}