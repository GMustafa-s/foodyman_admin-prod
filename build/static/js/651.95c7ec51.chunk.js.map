{"version":3,"file":"static/js/651.95c7ec51.chunk.js","mappings":"mKAGA,MAgBA,EAhB2B,CACzBA,OAASC,GACPC,EAAAA,EAAAA,IAAY,wCAAyC,CAAED,OAAAA,IACzDE,OAASC,GAAOF,EAAAA,EAAAA,OAAe,gCAAgCE,KAC/DC,QAASA,CAACD,EAAIH,IACZC,EAAAA,EAAAA,IAAY,gCAAgCE,IAAM,CAAEH,OAAAA,IACtDK,OAASL,GACPC,EAAAA,EAAAA,KAAa,+BAAgC,GAAI,CAAED,OAAAA,IACrDM,OAAQA,CAACC,EAAKP,IACZC,EAAAA,EAAAA,IAAY,gCAAgCM,IAAO,GAAI,CAAEP,OAAAA,IAC3DQ,OAASR,GACPC,EAAAA,EAAAA,IAAY,sCAAuC,CAAED,OAAAA,IACvDS,OAASC,GACPC,EAAAA,EAAAA,KAA2B,sCAAuCD,K,8JCNvD,SAASE,IACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,IAEpDC,EAAcC,IACX,CACLC,IAAKD,EAAKE,KACVA,KAAMF,EAAKE,KACXC,OAAQ,OACRC,IAAKJ,EAAKE,KACVG,SAAS,IAmBb,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAOlB,EAAE,UAAUmB,UACvBC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CACNT,KAAK,OACLU,UAAU,EACVC,SAAU,EACVC,cArBeC,IAAmC,IAAlC,KAAEf,EAAI,UAAEgB,EAAS,QAAEC,GAASF,EAChD,MAAMG,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQpB,GACxBqB,EAAAA,EAAAA,OACUH,GACPI,MAAK,KACJC,EAAAA,GAAAA,QAAcjC,EAAE,wBAChBE,GAASgC,EAAAA,EAAAA,IAAY,CAAE9B,WAAAA,EAAYP,KAAMY,EAAWC,MACpDgB,EAAU,SAEXS,OAAOC,IACNT,EAAQS,EAAIC,aAWZC,gBAA2B,OAAVlC,QAAU,IAAVA,GAAAA,EAAYP,KAAO,CAAW,OAAVO,QAAU,IAAVA,OAAU,EAAVA,EAAYP,MAAQ,KACzD0C,OAAO,oGAAmGpB,SAAA,EAE1GH,EAAAA,EAAAA,KAAA,KAAGwB,UAAU,uBAAsBrB,UACjCH,EAAAA,EAAAA,KAACyB,EAAAA,EAAa,OAEhBzB,EAAAA,EAAAA,KAAA,KAAGwB,UAAU,kBAAiBrB,SAAEnB,EAAE,kBAClCgB,EAAAA,EAAAA,KAAA,KAAGwB,UAAU,kBAAiBrB,SAAEnB,EAAE","sources":["services/translation.js","views/translations/import.js"],"sourcesContent":["import request from './request';\nimport requestWithoutTimeout from './requestWithoutTimeout';\n\nconst translationService = {\n  getAll: (params) =>\n    request.get('dashboard/admin/translations/paginate', { params }),\n  delete: (id) => request.delete(`dashboard/admin/translations/${id}`),\n  getById: (id, params) =>\n    request.get(`dashboard/admin/translations/${id}`, { params }),\n  create: (params) =>\n    request.post(`dashboard/admin/translations`, {}, { params }),\n  update: (key, params) =>\n    request.put(`dashboard/admin/translations/${key}`, {}, { params }),\n  export: (params) =>\n    request.get(`dashboard/admin/translations/export`, { params }),\n  import: (data) =>\n    requestWithoutTimeout.post('dashboard/admin/translations/import', data),\n};\n\nexport default translationService;\n","import React from 'react';\nimport { Card } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport Dragger from 'antd/lib/upload/Dragger';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { setMenuData } from 'redux/slices/menu';\nimport translationServices from 'services/translation';\n\nexport default function TranslationsImport() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const createFile = (file) => {\n    return {\n      uid: file.name,\n      name: file.name,\n      status: 'done',\n      url: file.name,\n      created: true,\n    };\n  };\n\n  const handleUpload = ({ file, onSuccess, onError }) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    translationServices\n      .import(formData)\n      .then(() => {\n        toast.success(t('successfully.import'));\n        dispatch(setMenuData({ activeMenu, data: createFile(file) }));\n        onSuccess('ok');\n      })\n      .catch((err) => {\n        onError(err.message);\n      });\n  };\n\n  return (\n    <Card title={t('import')}>\n      <Dragger\n        name='file'\n        multiple={false}\n        maxCount={1}\n        customRequest={handleUpload}\n        defaultFileList={activeMenu?.data ? [activeMenu?.data] : null}\n        accept='.csv, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      >\n        <p className='ant-upload-drag-icon'>\n          <InboxOutlined />\n        </p>\n        <p className='ant-upload-text'>{t('upload-drag')}</p>\n        <p className='ant-upload-hint'>{t('upload-text')}</p>\n      </Dragger>\n    </Card>\n  );\n}\n"],"names":["getAll","params","request","delete","id","getById","create","update","key","export","import","data","requestWithoutTimeout","TranslationsImport","t","useTranslation","dispatch","useDispatch","activeMenu","useSelector","state","menu","shallowEqual","createFile","file","uid","name","status","url","created","_jsx","Card","title","children","_jsxs","Dragger","multiple","maxCount","customRequest","_ref","onSuccess","onError","formData","FormData","append","translationServices","then","toast","setMenuData","catch","err","message","defaultFileList","accept","className","InboxOutlined"],"sourceRoot":""}