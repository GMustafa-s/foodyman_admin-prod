{"version":3,"file":"static/js/4277.95e2ebe5.chunk.js","mappings":"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","sources":["views/user/user-clone.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Form, Tabs } from 'antd';\nimport { useParams } from 'react-router-dom';\nimport * as moment from 'moment';\nimport userService from '../../services/user';\nimport Loading from '../../components/loading';\nimport UserEditForm from './userEditForm';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport UserOrders from './userOrders';\nimport WalletHistory from './walletHistory';\nimport createImage from '../../helpers/createImage';\nimport UserPassword from './userPassword';\nimport DelivertSettingCreate from './add-deliveryman-settings';\nconst { TabPane } = Tabs;\n\nconst UserClone = () => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const { uuid } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useState('edit');\n  const [image, setImage] = useState([]);\n  const [id, setId] = useState(null);\n  const role = activeMenu?.data?.role;\n\n  const showUserData = (uuid) => {\n    setLoading(true);\n    userService\n      .getById(uuid)\n      .then((res) => {\n        const data = res.data;\n        const payload = {\n          ...data,\n          image: createImage(data.img),\n        };\n        dispatch(setMenuData({ activeMenu, data: payload }));\n        form.setFieldsValue({\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email,\n          phone: data.phone,\n          birthday: moment(data.birthday),\n          gender: data.gender,\n          password_confirmation: data.password_confirmation,\n          password: data.password,\n          image: [createImage(data.img)],\n          shop_id:\n            data.invitations.length !== 0\n              ? data.invitations.map((i) => ({\n                  label: i.shop?.translation?.title,\n                  value: i.shop?.id,\n                }))\n              : undefined,\n        });\n        setId(res.data?.delivery_man_setting?.id);\n        setImage([createImage(data.img)]);\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  useEffect(() => {\n    if (activeMenu?.refetch) {\n      showUserData(uuid);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu?.refetch]);\n\n  const onChange = (key) => {\n    setTab(key);\n  };\n\n  return (\n    <Card title={t('user.settings')}>\n      {!loading ? (\n        <Tabs\n          activeKey={tab}\n          onChange={onChange}\n          tabPosition='left'\n          size='small'\n        >\n          <TabPane key='edit' tab={t('edit.user')}>\n            <UserEditForm\n              data={activeMenu?.data}\n              form={form}\n              image={image}\n              setImage={setImage}\n            />\n          </TabPane>\n\n          <TabPane key='order' tab={t('orders')}>\n            <UserOrders data={activeMenu?.data} />\n          </TabPane>\n          {role === 'deliveryman' && (\n            <TabPane key='delivery' tab={t('deliveryman')}>\n              <DelivertSettingCreate id={id} data={activeMenu.data} />\n            </TabPane>\n          )}\n          <TabPane key='wallet' tab={t('wallet')}>\n            <WalletHistory data={activeMenu?.data} />\n          </TabPane>\n          <TabPane key='password' tab={t('password')}>\n            <UserPassword data={activeMenu?.data} />\n          </TabPane>\n        </Tabs>\n      ) : (\n        <Loading />\n      )}\n    </Card>\n  );\n};\n\nexport default UserClone;\n"],"names":["TabPane","Tabs","UserClone","_activeMenu$data","t","useTranslation","form","Form","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","uuid","useParams","loading","setLoading","useState","tab","setTab","image","setImage","id","setId","role","data","useEffect","refetch","userService","then","res","_res$data","_res$data$delivery_ma","payload","createImage","img","setMenuData","setFieldsValue","firstname","lastname","email","phone","birthday","moment","gender","password_confirmation","password","shop_id","invitations","length","map","i","_i$shop","_i$shop$translation","_i$shop2","label","shop","translation","title","value","undefined","delivery_man_setting","finally","disableRefetch","showUserData","_jsx","Card","children","Loading","_jsxs","activeKey","onChange","key","tabPosition","size","UserEditForm","UserOrders","DelivertSettingCreate","WalletHistory","UserPassword"],"sourceRoot":""}