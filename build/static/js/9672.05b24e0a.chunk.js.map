{"version":3,"file":"static/js/9672.05b24e0a.chunk.js","mappings":"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","sources":["helpers/formatSortType.js","views/deliveryman-request/details-modal.js","views/deliveryman-request/status-change-modal.js","views/deliveryman-request/index.js"],"sourcesContent":["export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React from 'react';\nimport { Button, Modal, Descriptions } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nexport default function DeliverymanRequestModal({ data, handleClose }) {\n  const { t } = useTranslation();\n\n  return (\n    <Modal\n      title={t('request.details')}\n      visible={!!data}\n      onCancel={handleClose}\n      footer={\n        <Button type='default' onClick={handleClose}>\n          {t('cancel')}\n        </Button>\n      }\n    >\n      <Descriptions bordered>\n        <Descriptions.Item span={3} label={t('id')}>\n          {data?.id}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('firstname')}>\n          {t(data?.model?.firstname)}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('lastname')}>\n          {t(data?.model?.lastname)}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('car')}>\n          {t(data?.data?.brand)} {t(data?.data?.model)}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('car.number')}>\n          {t(data?.data?.number)}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('color')}>\n          {t(data?.data?.color)}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('height')}>\n          {t(data?.data?.height)}\n          {'  '}\n          {t('m')}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('width')}>\n          {t(data?.data?.width)}\n          {'  '}\n          {t('m')}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('status')}>\n          {data?.data?.online ? t('online') : t('offline')}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} label={t('fuel')}>\n          {t(data?.data?.type_of_technique)}\n        </Descriptions.Item>\n      </Descriptions>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form, Modal, Row, Col, Select, Input } from 'antd';\n\nconst statuses = ['pending', 'approved', 'canceled'];\n\nexport default function StatusChangeModal({ data, handleClose, handleChange }) {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(data?.status);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    handleChange(data?.id, values).final(() => setLoading(false));\n  };\n\n  return (\n    <>\n      <Modal\n        title={t('status.change')}\n        visible={!!data}\n        onCancel={handleClose}\n        footer={\n          <>\n            <Button type='default' onClick={handleClose}>\n              {t('cancel')}\n            </Button>\n            <Button\n              type='primary'\n              onClick={() => form.submit()}\n              loading={loading}\n            >\n              {t('save')}\n            </Button>\n          </>\n        }\n      >\n        <Form\n          form={form}\n          layout={'vertical'}\n          onFinish={onFinish}\n          initialValues={{ status: data?.status }}\n        >\n          <Row gutter={12}>\n            <Col span={24}>\n              <Form.Item\n                label={t('status')}\n                name={'status'}\n                rules={[\n                  {\n                    required: true,\n                    message: t('required'),\n                  },\n                ]}\n              >\n                <Select onChange={(status) => setStatus(status)}>\n                  {statuses.map((item, idx) => (\n                    <Select.Option key={item + idx} value={item}>\n                      {t(item)}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n              {status === 'canceled' ? (\n                <Form.Item\n                  name='status_note'\n                  label={t('note')}\n                  rules={[\n                    {\n                      validator(_, value) {\n                        if (!value) {\n                          return Promise.reject(new Error(t('required')));\n                        } else if (value && value?.trim() === '') {\n                          return Promise.reject(new Error(t('no.empty.space')));\n                        } else if (value && value?.trim().length < 2) {\n                          return Promise.reject(\n                            new Error(t('must.be.at.least.2')),\n                          );\n                        }\n                        return Promise.resolve();\n                      },\n                    },\n                  ]}\n                >\n                  <Input.TextArea maxLength={250} showCount />\n                </Form.Item>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Table, Image, Space, Button, Tag } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from 'redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport { fetchDeliverymanRequest } from 'redux/slices/deliveryman-request';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport formatSortType from 'helpers/formatSortType';\nimport { EditOutlined, EyeOutlined } from '@ant-design/icons';\nimport DeliverymanRequestModal from './details-modal';\nimport StatusChangeModal from './status-change-modal';\nimport requestAdminModelsService from 'services/request-models';\nimport { toast } from 'react-toastify';\n\nexport default function DeliverymanRequest() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { deliverymanRequestData, meta, loading } = useSelector(\n    (state) => state.deliverymanRequest,\n    shallowEqual,\n  );\n\n  const [id, setId] = useState(null);\n  const [details, setDetails] = useState(null);\n  const [changeStatus, setChangeStatus] = useState(null);\n\n  const data = activeMenu.data;\n\n  const paramsData = {\n    perPage: data?.perPage,\n    page: data?.page,\n    search: data?.search,\n    columns: data?.columns,\n  };\n\n  useDidUpdate(() => {\n    dispatch(fetchDeliverymanRequest(paramsData));\n  }, [activeMenu?.data]);\n\n  useEffect(() => {\n    if (activeMenu?.refetch) {\n      dispatch(fetchDeliverymanRequest(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu?.refetch]);\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu?.data, perPage, page, column, sort },\n      }),\n    );\n  }\n\n  const handleChangeStatus = (id, data) => {\n    const params = {\n      status_note: data?.status_note,\n      status: data?.status,\n    };\n    return requestAdminModelsService.changeStatus(id, params).then(() => {\n      setChangeStatus(null);\n      toast.success(t('successfully.updated'));\n      dispatch(fetchDeliverymanRequest(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    });\n  };\n\n  const columns = [\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n    },\n    {\n      title: t('name'),\n      dataIndex: 'name',\n      key: 'name',\n      is_show: true,\n      render: (_, row) => row?.model?.firstname + ' ' + row?.model?.lastname,\n    },\n    {\n      title: t('delivery.man.setting'),\n      dataIndex: 'setting',\n      key: 'setting',\n      is_show: true,\n      render: (_, data) => (\n        <Space>\n          <span>\n            {t('brand')}: {data?.data?.brand}\n            <br />\n            {t('model')}: {data?.data?.model}\n            <br />\n            {t('number')}: {data?.data?.number}\n            <br />\n            {t('color')}: {data?.data?.color}\n          </span>\n        </Space>\n      ),\n    },\n    {\n      title: t('image'),\n      dataIndex: 'image',\n      key: 'image',\n      is_show: true,\n      render: (_, row) => (\n        <Image\n          src={row?.data?.['images[0]'] || 'https://via.placeholder.com/100'}\n          alt={'img'}\n          width={100}\n          className={'rounded'}\n          preview\n          placeholder\n        />\n      ),\n    },\n    {\n      title: t('status'),\n      dataIndex: 'status',\n      key: 'status',\n      is_show: true,\n      render: (status, row) => (\n        <div>\n          {status === 'pending' ? (\n            <Tag color='blue'>{t(status)}</Tag>\n          ) : status === 'canceled' ? (\n            <Tag color='error'>{t(status)}</Tag>\n          ) : (\n            <Tag color='cyan'>{t(status)}</Tag>\n          )}\n          {!row.deleted_at ? (\n            <EditOutlined onClick={() => setChangeStatus(row)} />\n          ) : (\n            ''\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              icon={<EyeOutlined />}\n              onClick={(e) => {\n                e.stopPropagation();\n                setDetails(row);\n              }}\n            />\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Card title={t('deliveryman.request')}>\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item?.is_show)}\n        dataSource={deliverymanRequestData}\n        pagination={{\n          pageSize: meta?.perPage,\n          total: meta?.total,\n          current: data?.page,\n          page: data?.page || 1,\n          defaultCurrent: data?.page,\n        }}\n        onChange={onChangePagination}\n        rowKey={(record) => record?.id}\n        loading={loading}\n      />\n      {details ? (\n        <DeliverymanRequestModal\n          data={details}\n          handleClose={() => setDetails(null)}\n        />\n      ) : null}\n      {changeStatus ? (\n        <StatusChangeModal\n          data={changeStatus}\n          handleChange={handleChangeStatus}\n          handleClose={() => setChangeStatus(null)}\n        />\n      ) : null}\n    </Card>\n  );\n}\n"],"names":["formatSortType","type","DeliverymanRequestModal","_ref","_data$model","_data$model2","_data$data","_data$data2","_data$data3","_data$data4","_data$data5","_data$data6","_data$data7","_data$data8","data","handleClose","t","useTranslation","_jsx","Modal","title","visible","onCancel","footer","Button","onClick","children","_jsxs","Descriptions","bordered","span","label","id","model","firstname","lastname","brand","number","color","height","width","online","type_of_technique","statuses","StatusChangeModal","handleChange","form","Form","loading","setLoading","useState","status","setStatus","_Fragment","submit","layout","onFinish","values","final","initialValues","Row","gutter","Col","name","rules","required","message","Select","onChange","map","item","idx","value","validator","_","trim","Promise","reject","Error","length","resolve","Input","maxLength","showCount","DeliverymanRequest","dispatch","useDispatch","activeMenu","useSelector","state","menu","shallowEqual","deliverymanRequestData","meta","deliverymanRequest","setId","details","setDetails","changeStatus","setChangeStatus","paramsData","perPage","page","search","columns","useDidUpdate","fetchDeliverymanRequest","useEffect","refetch","disableRefetch","rowSelection","selectedRowKeys","key","dataIndex","is_show","render","row","_row$model","_row$model2","Space","_row$data","Image","src","alt","className","preview","placeholder","Tag","deleted_at","EditOutlined","icon","EyeOutlined","e","stopPropagation","Card","Table","scroll","x","filter","dataSource","pagination","pageSize","total","current","defaultCurrent","sorter","field","column","order","sort","setMenuData","rowKey","record","handleChangeStatus","params","status_note","requestAdminModelsService","then","toast"],"sourceRoot":""}