{"version":3,"file":"static/js/5606.f6c85394.chunk.js","mappings":"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","sources":["components/chart-widget.js","constants/ChartConstant.js","helpers/numberToPrice.js","views/report-overview/index.js","../node_modules/@ant-design/icons-svg/es/asn/LineChartOutlined.js","../node_modules/@ant-design/icons/es/icons/LineChartOutlined.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\nimport ApexChart from 'react-apexcharts';\nimport ReactResizeDetector from 'react-resize-detector';\nimport {\n  apexAreaChartDefaultOption,\n  apexBarChartDefaultOption,\n  apexLineChartDefaultOption,\n  apexPieChartDefaultOption,\n} from '../constants/ChartConstant';\n\nconst DIR_RTL = 'rtl';\n\nconst titleStyle = {\n  position: 'absolute',\n  zIndex: '1',\n};\n\nconst extraStyle = {\n  position: 'absolute',\n  zIndex: '1',\n  right: '0',\n  top: '-2px',\n};\n\nconst getChartTypeDefaultOption = (type) => {\n  switch (type) {\n    case 'line':\n      return apexLineChartDefaultOption;\n    case 'bar':\n      return apexBarChartDefaultOption;\n    case 'area':\n      return apexAreaChartDefaultOption;\n    case 'pie':\n      return apexPieChartDefaultOption;\n    default:\n      return apexLineChartDefaultOption;\n  }\n};\n\nconst ChartWidget = ({\n  title,\n  series,\n  width,\n  height,\n  xAxis,\n  customOptions,\n  card,\n  type,\n  extra,\n  direction,\n  bodyClass,\n}) => {\n  let options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)));\n\n  const isMobile = window.innerWidth < 768;\n  const setLegendOffset = () => {\n    if (chartRef.current) {\n      const lengend = chartRef.current.querySelectorAll(\n        'div.apexcharts-legend'\n      )[0];\n      lengend.style.marginRight = `${\n        isMobile ? 0 : extraRef.current?.offsetWidth\n      }px`;\n      if (direction === DIR_RTL) {\n        lengend.style.right = 'auto';\n        lengend.style.left = '0';\n      }\n      if (isMobile) {\n        lengend.style.position = 'relative';\n        lengend.style.top = 0;\n        lengend.style.justifyContent = 'start';\n        lengend.style.padding = 0;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setLegendOffset();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const extraRef = useRef(null);\n  const chartRef = useRef();\n\n  options.xaxis = {\n    categories: xAxis,\n  };\n  if (customOptions) {\n    options = { ...options, ...customOptions };\n  }\n\n  const onResize = () => {\n    setTimeout(() => {\n      setLegendOffset();\n    }, 600);\n  };\n\n  const renderChart = () => (\n    <ReactResizeDetector onResize={onResize()}>\n      <div\n        style={direction === DIR_RTL ? { direction: 'ltr' } : {}}\n        className='chartRef'\n        ref={chartRef}\n      >\n        <ApexChart\n          options={options}\n          type={type}\n          series={series}\n          width={width}\n          height={height}\n        />\n      </div>\n    </ReactResizeDetector>\n  );\n\n  return (\n    <>\n      {card ? (\n        <Card>\n          <div className={`position-relative ${bodyClass}`}>\n            {<div style={!isMobile ? titleStyle : {}}>{title}</div> && (\n              <h4\n                className='font-weight-bold'\n                style={!isMobile ? titleStyle : {}}\n              >\n                {title}\n              </h4>\n            )}\n            {extra && (\n              <div ref={extraRef} style={!isMobile ? extraStyle : {}}>\n                {extra}\n              </div>\n            )}\n            {renderChart()}\n          </div>\n        </Card>\n      ) : (\n        renderChart()\n      )}\n    </>\n  );\n};\n\nChartWidget.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  series: PropTypes.array.isRequired,\n  xAxis: PropTypes.array,\n  customOptions: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  card: PropTypes.bool,\n  type: PropTypes.string,\n  extra: PropTypes.element,\n  bodyClass: PropTypes.string,\n};\n\nChartWidget.defaultProps = {\n  series: [],\n  height: 300,\n  width: '100%',\n  card: true,\n  type: 'line',\n};\n\nexport default ChartWidget;\n","export const COLOR_1 = '#3e82f7'; // blue\r\nexport const COLOR_2 = '#04d182'; // cyan\r\nexport const COLOR_3 = '#ff6b72'; // volcano\r\nexport const COLOR_4 = '#ffc107'; // gold\r\nexport const COLOR_5 = '#a461d8'; // purple\r\nexport const COLOR_6 = '#fa8c16'; // orange\r\nexport const COLOR_7 = '#17bcff'; // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n  COLOR_1,\r\n  COLOR_2,\r\n  COLOR_3,\r\n  COLOR_4,\r\n  COLOR_5,\r\n  COLOR_6,\r\n  COLOR_7,\r\n];\r\n\r\nexport const COLORS_LIGHT = [\r\n  COLOR_1_LIGHT,\r\n  COLOR_2_LIGHT,\r\n  COLOR_3_LIGHT,\r\n  COLOR_4_LIGHT,\r\n  COLOR_5_LIGHT,\r\n  COLOR_6_LIGHT,\r\n  COLOR_7_LIGHT,\r\n];\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    width: 3,\r\n    curve: 'smooth',\r\n    lineCap: 'round',\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return (\r\n        val +\r\n        ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\r\n        ''\r\n      );\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  grid: {\r\n    xaxis: {\r\n      lines: {\r\n        show: true,\r\n      },\r\n    },\r\n    yaxis: {\r\n      lines: {\r\n        show: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexAreaChartDefaultOption = { ...apexLineChartDefaultOption };\r\n\r\nexport const apexBarChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  plotOptions: {\r\n    bar: {\r\n      horizontal: false,\r\n      columnWidth: '25px',\r\n      startingShapre: 'rounded',\r\n      endingShape: 'rounded',\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    show: true,\r\n    width: 6,\r\n    curve: 'smooth',\r\n    colors: ['transparent'],\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    inverseOrder: true,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return (\r\n        val +\r\n        ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\r\n        ''\r\n      );\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  fill: {\r\n    opacity: 1,\r\n  },\r\n  tooltip: {\r\n    y: {\r\n      formatter: (val) => `${val}`,\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexPieChartDefaultOption = {\r\n  colors: [...COLORS],\r\n  plotOptions: {\r\n    pie: {\r\n      size: 200,\r\n      donut: {\r\n        labels: {\r\n          show: true,\r\n          total: {\r\n            show: false,\r\n            showAlways: true,\r\n            label: '',\r\n            fontSize: '18px',\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 'bold',\r\n            color: '#1a3353',\r\n            formatter: function (w) {\r\n              return w.globals.seriesTotals.reduce((a, b) => {\r\n                return a + b;\r\n              }, 0) + 'Orders count';\r\n            },\r\n          },\r\n        },\r\n        size: '100%',\r\n      },\r\n    },\r\n  },\r\n  labels: [],\r\n  dataLabels: {\r\n    enabled: true,\r\n  },\r\n  legend: {\r\n    show: true,\r\n  }\r\n};\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n  chart: {\r\n    type: 'line',\r\n    sparkline: {\r\n      enabled: true,\r\n    },\r\n  },\r\n  stroke: {\r\n    width: 2,\r\n    curve: 'smooth',\r\n  },\r\n  tooltip: {\r\n    fixed: {\r\n      enabled: false,\r\n    },\r\n    x: {\r\n      show: false,\r\n    },\r\n    y: {\r\n      title: {\r\n        formatter: function (seriesName) {\r\n          return '';\r\n        },\r\n      },\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n  },\r\n};\r\n","import { store } from 'redux/store';\n\nexport default function numberToPrice(number = 0, symbol, position) {\n  const defaultCurrency = store.getState()?.currency?.defaultCurrency;\n  const price = Number(number)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  const currencySymbol = symbol || defaultCurrency?.symbol || '$';\n  const currencyPosition = position || defaultCurrency?.position || 'before';\n\n  return currencyPosition === 'after'\n    ? `${price} ${currencySymbol}`\n    : `${currencySymbol} ${price}`;\n}\n","import {\n  Card,\n  Col,\n  Row,\n  Space,\n  Typography,\n  Table,\n  Tag,\n  Divider,\n  DatePicker,\n  Select,\n  Spin,\n} from 'antd';\nimport React, { useContext } from 'react';\nimport ChartWidget from '../../components/chart-widget';\nimport { BarChartOutlined, LineChartOutlined } from '@ant-design/icons';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport QueryString from 'qs';\nimport { ReportContext } from '../../context/report';\nimport { useEffect } from 'react';\nimport {\n  fetchReportOverviewCart,\n  fetchReportOverviewCategories,\n  fetchReportOverviewProducts,\n} from '../../redux/slices/report/overview';\nimport { disableRefetch } from '../../redux/slices/menu';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport moment from 'moment';\nimport numberToPrice from '../../helpers/numberToPrice';\nimport { useTranslation } from 'react-i18next';\nconst { Text, Title } = Typography;\nconst { RangePicker } = DatePicker;\nconst ReportOverview = () => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const category_id = QueryString.parse(location.search, [])['?category_id'];\n  const product_id = QueryString.parse(location.search, [])['?product_id'];\n  const {\n    date_from,\n    date_to,\n    by_time,\n    chart,\n    handleDateRange,\n    options,\n    handleByTime,\n    chart_type,\n    setChartType,\n  } = useContext(ReportContext);\n  const { loading, carts, products, categories } = useSelector(\n    (state) => state.overviewReport,\n    shallowEqual,\n  );\n  const { defaultCurrency } = useSelector(\n    (state) => state.currency,\n    shallowEqual,\n  );\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const columns = [\n    {\n      title: t('title'),\n      dataIndex: 'title',\n      key: 'title',\n      // render: (text) => <a>{text}</a>,\n    },\n    {\n      title: t('item.sold'),\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: t('net.sales'),\n      dataIndex: 'total_price',\n      key: 'total_price',\n      render: (price) =>\n        numberToPrice(\n          price,\n          defaultCurrency?.symbol,\n          defaultCurrency?.position,\n        ),\n    },\n    {\n      title: t('orders'),\n      dataIndex: 'count',\n      key: 'count',\n    },\n  ];\n  const performance = [\n    {\n      title: 'Total sales',\n      qty: 'delivered_sum',\n      percent: '5',\n      price: true,\n    },\n    {\n      title: 'Orders',\n      qty: 'count',\n      percent: '5',\n      price: false,\n    },\n    {\n      title: 'Canceled orders price',\n      qty: 'canceled_sum',\n      percent: '5',\n      price: true,\n    },\n    {\n      title: 'Total tax',\n      qty: 'tax',\n      percent: '5',\n      price: true,\n    },\n    {\n      title: 'Delivered avg',\n      qty: 'delivered_avg',\n      percent: '5',\n      price: true,\n    },\n    {\n      title: 'Delivery fee',\n      qty: 'delivery_fee',\n      percent: '5',\n      price: true,\n    },\n  ];\n\n  const fetchProducts = (page, perPage) => {\n    const params = {\n      date_from,\n      date_to,\n      type: by_time,\n      page,\n      perPage,\n    };\n    dispatch(fetchReportOverviewProducts(params));\n  };\n\n  const fetchCategories = (page, perPage) => {\n    const params = {\n      date_from,\n      date_to,\n      type: by_time,\n      page,\n      perPage,\n    };\n    dispatch(fetchReportOverviewCategories(params));\n  };\n\n  const fetchOverview = (page, perPage) => {\n    const params = {\n      date_from,\n      date_to,\n      type: by_time,\n      page,\n      perPage,\n    };\n    if (category_id) params.categories = [category_id];\n    if (product_id) params.products = [product_id];\n    dispatch(fetchReportOverviewCart(params));\n  };\n\n  const onProductPaginationChange = (pagination) => {\n    const { pageSize: perPage, current: page } = pagination;\n    fetchProducts(page, perPage);\n  };\n\n  const onCategoryPaginationChange = (pagination) => {\n    const { pageSize: perPage, current: page } = pagination;\n    fetchProducts(page, perPage);\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      fetchOverview();\n      fetchProducts();\n      fetchCategories();\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    fetchOverview();\n  }, [date_to, by_time, chart, category_id, product_id, date_from]);\n\n  useDidUpdate(() => {\n    fetchProducts();\n  }, [date_to, by_time, date_from]);\n\n  useDidUpdate(() => {\n    fetchCategories();\n  }, [date_to, by_time, date_from]);\n\n  return (\n    <Spin size='large' spinning={loading}>\n      <Row gutter={24} className='mb-4'>\n        <Col span={12}>\n          <Space size='large'>\n            <RangePicker\n              defaultValue={[moment(date_from), moment(date_to)]}\n              onChange={handleDateRange}\n            />\n          </Space>\n        </Col>\n      </Row>\n      <Divider orientation='left'>Performance</Divider>\n      <Row gutter={24}>\n        {performance?.map((item, key) => {\n          return (\n            <Col span={6}>\n              <Link key={item.title} to='/report/revenue'>\n                <Card>\n                  <Row className='mb-5'>\n                    <Col>\n                      <Text>{item.title}</Text>\n                    </Col>\n                  </Row>\n                  <Row gutter={24}>\n                    <Col span={12}>\n                      <Title level={2}>\n                        {item.price\n                          ? numberToPrice(\n                              carts[item.qty],\n                              defaultCurrency?.symbol,\n                              defaultCurrency?.position,\n                            )\n                          : carts[item.qty]}\n                      </Title>\n                    </Col>\n                  </Row>\n                </Card>\n              </Link>\n            </Col>\n          );\n        })}\n      </Row>\n      <Row gutter={24} className='mb-2'>\n        <Col span={20}>\n          <Divider orientation='left'>Charts</Divider>\n        </Col>\n        <Col span={4}>\n          <div className='d-flex'>\n            <Select\n              style={{ width: 100 }}\n              onChange={handleByTime}\n              options={options}\n              defaultValue={by_time}\n            />\n\n            <Divider type='vertical' style={{ height: '100%' }} />\n            <Space>\n              <LineChartOutlined\n                style={{\n                  fontSize: '22px',\n                  cursor: 'pointer',\n                  color: chart_type === 'line' ? 'green' : '',\n                }}\n                onClick={() => setChartType('line')}\n              />\n              <BarChartOutlined\n                style={{\n                  fontSize: '22px',\n                  cursor: 'pointer',\n                  color: chart_type === 'bar' ? 'green' : '',\n                }}\n                onClick={() => setChartType('bar')}\n              />\n            </Space>\n          </div>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={12}>\n          <Card title='Net Sales'>\n            <ChartWidget\n              type={chart_type}\n              series={[\n                {\n                  name: 'Orders',\n                  data: carts?.chart_price?.map((item) => item.delivered_sum),\n                },\n              ]}\n              xAxis={carts?.chart_price?.map((item) => item.time)}\n            />\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title='Orders'>\n            <ChartWidget\n              type={chart_type}\n              series={[\n                {\n                  name: 'Orders',\n                  data: carts?.chart_count?.map((item) => item.count),\n                },\n              ]}\n              xAxis={carts?.chart_price?.map((item) => item.time)}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Divider orientation='left'>Leaderboards</Divider>\n      <Row gutter={24}>\n        <Col span={12}>\n          <Card title='Top categories'>\n            <Table\n              scroll={{ x: true }}\n              onChange={onCategoryPaginationChange}\n              pagination={{\n                pageSize: categories?.per_page,\n                page: categories?.current_page || 1,\n                total: categories?.total,\n                defaultCurrent: 1,\n              }}\n              columns={columns}\n              dataSource={categories?.data}\n            />\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title='Top products'>\n            <Table\n              scroll={{ x: true }}\n              onChange={onProductPaginationChange}\n              pagination={{\n                pageSize: products?.per_page,\n                page: products?.current_page || 1,\n                total: products?.total,\n                defaultCurrent: 1,\n              }}\n              columns={columns}\n              dataSource={products?.data}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </Spin>\n  );\n};\n\nexport default ReportOverview;\n","// This icon file is generated automatically.\nvar LineChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM305.8 637.7c3.1 3.1 8.1 3.1 11.3 0l138.3-137.6L583 628.5c3.1 3.1 8.2 3.1 11.3 0l275.4-275.3c3.1-3.1 3.1-8.2 0-11.3l-39.6-39.6a8.03 8.03 0 00-11.3 0l-230 229.9L461.4 404a8.03 8.03 0 00-11.3 0L266.3 586.7a8.03 8.03 0 000 11.3l39.5 39.7z\" } }] }, \"name\": \"line-chart\", \"theme\": \"outlined\" };\nexport default LineChartOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LineChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/LineChartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LineChartOutlined = function LineChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LineChartOutlinedSvg\n  }));\n};\n\nLineChartOutlined.displayName = 'LineChartOutlined';\nexport default /*#__PURE__*/React.forwardRef(LineChartOutlined);"],"names":["titleStyle","position","zIndex","extraStyle","right","top","ChartWidget","_ref","title","series","width","height","xAxis","customOptions","card","type","extra","direction","bodyClass","options","JSON","parse","stringify","apexLineChartDefaultOption","apexBarChartDefaultOption","apexAreaChartDefaultOption","apexPieChartDefaultOption","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","_extraRef$current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","left","justifyContent","padding","useEffect","useRef","xaxis","categories","renderChart","_jsx","ReactResizeDetector","onResize","setTimeout","children","className","ref","ApexChart","_Fragment","Card","_jsxs","defaultProps","COLORS","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","curve","lineCap","legend","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","seriesIndex","dataPointIndex","grid","lines","yaxis","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","pie","size","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","numberToPrice","_store$getState","_store$getState$curre","number","arguments","length","undefined","symbol","defaultCurrency","store","currency","price","Number","toFixed","replace","currencySymbol","currencyPosition","Text","Title","Typography","RangePicker","DatePicker","ReportOverview","_carts$chart_price","_carts$chart_price2","_carts$chart_count","_carts$chart_price3","t","useTranslation","location","useLocation","category_id","QueryString","search","product_id","date_from","date_to","by_time","handleDateRange","handleByTime","chart_type","setChartType","useContext","ReportContext","loading","carts","products","useSelector","state","overviewReport","shallowEqual","activeMenu","menu","dispatch","useDispatch","columns","dataIndex","key","render","performance","qty","percent","fetchProducts","page","perPage","params","fetchReportOverviewProducts","fetchCategories","fetchReportOverviewCategories","fetchOverview","fetchReportOverviewCart","refetch","disableRefetch","useDidUpdate","Spin","spinning","Row","gutter","Col","span","Space","defaultValue","moment","onChange","Divider","orientation","map","item","Link","to","level","Select","LineChartOutlined","cursor","onClick","BarChartOutlined","name","data","chart_price","delivered_sum","time","chart_count","count","Table","scroll","x","pagination","pageSize","per_page","current_page","defaultCurrent","dataSource","props","React","AntdIcon","_objectSpread","icon","LineChartOutlinedSvg","displayName"],"sourceRoot":""}