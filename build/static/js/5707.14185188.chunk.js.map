{"version":3,"file":"static/js/5707.14185188.chunk.js","mappings":"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","sources":["views/career/career-clone.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Form, Spin } from 'antd';\nimport { toast } from 'react-toastify';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport LanguageList from '../../components/language-list';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  disableRefetch,\n  removeFromMenu,\n  setMenuData,\n} from '../../redux/slices/menu';\nimport careerService from '../../services/career';\nimport { useTranslation } from 'react-i18next';\nimport { fetchCareer } from '../../redux/slices/career';\nimport getTranslationFields from 'helpers/getTranslationFields';\nimport CareerForm from './career-form';\n\nconst CareerClone = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const { id } = useParams();\n  const { params } = useSelector((state) => state.career, shallowEqual);\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.description,\n      [`address[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.address,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  const getCategory = (alias) => {\n    setLoading(true);\n    careerService\n      .getById(alias)\n      .then((res) => {\n        let career = res.data;\n        const body = {\n          ...career,\n          ...getLanguageFields(career),\n          category_id: {\n            label: career?.category?.translation?.title,\n            value: career?.category?.id,\n          },\n        };\n        form.setFieldsValue(body);\n        dispatch(setMenuData({ activeMenu, data: body }));\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const handleSubmit = (values) => {\n    const body = {\n      ...values,\n      title: getTranslationFields(languages, values, 'title'),\n      description: getTranslationFields(languages, values, 'description'),\n      address: getTranslationFields(languages, values, 'address'),\n      active: values.active ? 1 : 0,\n      category_id: values.category_id.value,\n    };\n    const nextUrl = 'catalog/career';\n    return careerService\n      .create(body)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        batch(() => {\n          dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n          dispatch(fetchCareer(params));\n        });\n        navigate(`/${nextUrl}`);\n      })\n      .catch((err) => console.error(err.response.data.params));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) getCategory(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('clone.career')} extra={<LanguageList />}>\n      {!loading ? (\n        <CareerForm form={form} handleSubmit={handleSubmit} />\n      ) : (\n        <div className='d-flex justify-content-center align-items-center py-5'>\n          <Spin size='large' className='mt-5 pt-5' />\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default CareerClone;\n"],"names":["CareerClone","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","activeMenu","useSelector","state","menu","shallowEqual","loading","setLoading","useState","form","Form","id","useParams","params","career","languages","formLang","getLanguageFields","data","translations","result","map","item","_translations$find","_translations$find2","_translations$find3","locale","find","el","title","description","address","Object","assign","useEffect","getFieldsValue","setMenuData","alias","refetch","careerService","then","res","_career$category","_career$category$tran","_career$category2","body","category_id","label","category","translation","value","setFieldsValue","finally","disableRefetch","_jsx","Card","extra","LanguageList","children","className","Spin","size","CareerForm","handleSubmit","values","getTranslationFields","active","nextUrl","toast","batch","removeFromMenu","fetchCareer","catch","err","console","error","response"],"sourceRoot":""}