{"version":3,"file":"static/js/4380.7b10f969.chunk.js","mappings":"wSAYe,SAASA,IACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACPC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAEhCC,GAAQC,EAAAA,EAAAA,UACTC,GAAWC,EAAAA,EAAAA,OACX,GAAEC,IAAOC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAC7CC,EAAWC,IAAgBd,EAAAA,EAAAA,WAAS,IAE3Ce,EAAAA,EAAAA,YAAU,IACD,KACL,MAAMC,EAAOf,EAAKgB,gBAAe,GACjCV,GAASW,EAAAA,EAAAA,IAAY,CAAET,WAAAA,EAAYO,KAAAA,OAGpC,IA2CH,OAPAD,EAAAA,EAAAA,YAAU,KACJN,EAAWU,SAnCMd,CAAAA,IACrBN,GAAW,GACXqB,EAAAA,EAAAA,QACWf,GACRgB,MAAKC,IAAe,IAAd,KAAEN,GAAMM,EACbR,EAAiB,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMO,SACnBtB,EAAKuB,eAAeR,MAErBS,SAAQ,KACP1B,GAAW,GACXQ,GAASmB,EAAAA,EAAAA,IAAejB,QA0B1BkB,CAActB,KAGf,CAACI,EAAWU,WAGbS,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAOlC,EAAE,iBAAiBmC,SAC7BjC,GACC8B,EAAAA,EAAAA,KAACI,EAAAA,EAAO,KAERJ,EAAAA,EAAAA,KAACK,EAAAA,EAAY,CACXhC,KAAMA,EACNY,UAAWA,EACXqB,aAnCcC,IACpB,MAAMC,EAAO,CACXN,MAAOK,EAAOL,MACdO,OAAQF,EAAOE,OACfC,KAAMH,EAAOG,KACbC,OAAQC,OAAOL,EAAOI,QACtBE,SAAUN,EAAOM,UAEbC,EAAU,aAEhB,OAAOtB,EAAAA,EAAAA,OAAuBf,EAAI+B,GAAMf,MAAK,KAC3CsB,EAAAA,GAAAA,QAAc/C,EAAE,0BAChBgD,EAAAA,EAAAA,KAAM,KACJrC,GAASsC,EAAAA,EAAAA,IAAe,IAAKpC,EAAYiC,QAAAA,KACzCnC,GAASuC,EAAAA,EAAAA,IAAgB,QAE3B3C,EAAS","sources":["views/currencies/currency-edit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form, Card } from 'antd';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport currencyService from 'services/currency';\nimport { useDispatch, useSelector, batch } from 'react-redux';\nimport { disableRefetch, removeFromMenu, setMenuData } from 'redux/slices/menu';\nimport { fetchCurrencies } from 'redux/slices/currency';\nimport { useTranslation } from 'react-i18next';\nimport Loading from 'components/loading';\nimport CurrencyForm from './currency-form';\n\nexport default function CurrencyEdit() {\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu);\n  const [isDefault, setIsDefault] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchCurrency = (id) => {\n    setLoading(true);\n    currencyService\n      .getById(id)\n      .then(({ data }) => {\n        setIsDefault(data?.default);\n        form.setFieldsValue(data);\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const handleSubmit = (values) => {\n    const body = {\n      title: values.title,\n      symbol: values.symbol,\n      rate: values.rate,\n      active: Number(values.active),\n      position: values.position,\n    };\n    const nextUrl = 'currencies';\n\n    return currencyService.update(id, body).then(() => {\n      toast.success(t('successfully.updated'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchCurrencies({}));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      fetchCurrency(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('edit.currency')}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <CurrencyForm\n          form={form}\n          isDefault={isDefault}\n          handleSubmit={handleSubmit}\n        />\n      )}\n    </Card>\n  );\n}\n"],"names":["CurrencyEdit","t","useTranslation","loading","setLoading","useState","form","Form","navigate","useNavigate","id","useParams","dispatch","useDispatch","activeMenu","useSelector","state","menu","isDefault","setIsDefault","useEffect","data","getFieldsValue","setMenuData","refetch","currencyService","then","_ref","default","setFieldsValue","finally","disableRefetch","fetchCurrency","_jsx","Card","title","children","Loading","CurrencyForm","handleSubmit","values","body","symbol","rate","active","Number","position","nextUrl","toast","batch","removeFromMenu","fetchCurrencies"],"sourceRoot":""}