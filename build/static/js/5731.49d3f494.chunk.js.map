{"version":3,"file":"static/js/5731.49d3f494.chunk.js","mappings":"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","sources":["views/sms-payload/sms-edit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Space,\n  Switch,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport smsService from '../../services/smsPayloads';\nimport { fetchSms } from '../../redux/slices/sms-geteways';\nimport { batch, shallowEqual, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { disableRefetch, removeFromMenu } from '../../redux/slices/menu';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Loading from '../../components/loading';\nconst options = [\n  { title: 'firebase', value: 'firebase' },\n  { title: 'twilio', value: 'twilio' },\n];\n\nexport default function SmsPayloadEdit() {\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { type } = useParams();\n  const [typeList, setTypeList] = useState(null);\n  const { smsGatewaysList } = useSelector((state) => state.sms, shallowEqual);\n\n  const fetchSmsPayload = (type) => {\n    setLoading(true);\n    smsService\n      .getById(type)\n      .then((res) => {\n        const data = res.data;\n        form.setFieldsValue({\n          default: Boolean(data.default),\n          ...data.payload,\n        });\n        setTypeList(data.type);\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    const data = {\n      type: typeList,\n      default: Number(values.default),\n      payload: {\n        type: undefined,\n        default: undefined,\n        ...values,\n      },\n    };\n    const nextUrl = 'settings/sms-payload';\n\n    smsService\n      .update(type, data)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        batch(() => {\n          dispatch(fetchSms());\n          dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        });\n        navigate(`/${nextUrl}`);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      fetchSmsPayload(type);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  const handleChange = (value) => setTypeList(value);\n\n  return (\n    <Card title={t('edit.sms.payload')} className='h-100'>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Form form={form} layout='vertical' onFinish={onFinish}>\n          <Card title={t('add.sms.payload')}>\n            <Row gutter={12}>\n              <Col span={12}>\n                <Form.Item\n                  label={t('select.type')}\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Select\n                    disabled\n                    className='w-100'\n                    onChange={handleChange}\n                    value={typeList}\n                    options={options.filter(\n                      (i) => !smsGatewaysList.some((e) => e.type === i.value),\n                    )}\n                  />\n                </Form.Item>\n              </Col>\n\n              {type === 'firebase' && (\n                <>\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('android_api_key')}\n                      name='android_api_key'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('api_key')}\n                      name='api_key'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('app_id')}\n                      name='app_id'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('auth_domain')}\n                      name='auth_domain'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('ios_api_key')}\n                      name='ios_api_key'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('measurement_id')}\n                      name='measurement_id'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('message_sender_id')}\n                      name='message_sender_id'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('project_id')}\n                      name='project_id'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('server_key')}\n                      name='server_key'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('storage_bucket')}\n                      name='storage_bucket'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('vapid_key')}\n                      name='vapid_key'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('default')}\n                      name='default'\n                      valuePropName='checked'\n                    >\n                      <Switch />\n                    </Form.Item>\n                  </Col>\n                </>\n              )}\n\n              {type === 'twilio' && (\n                <>\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('twilio_auth_token')}\n                      name='twilio_auth_token'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input min={0} className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('twilio_account_id')}\n                      name='twilio_account_id'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('twilio_number')}\n                      name='twilio_number'\n                      rules={[\n                        {\n                          required: true,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <Input className='w-100' />\n                    </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                    <Form.Item\n                      label={t('default')}\n                      name='default'\n                      valuePropName='checked'\n                    >\n                      <Switch />\n                    </Form.Item>\n                  </Col>\n                </>\n              )}\n            </Row>\n\n            <Space>\n              <Button type='primary' htmlType='submit' loading={loadingBtn}>\n                {t('submit')}\n              </Button>\n            </Space>\n          </Card>\n        </Form>\n      )}\n    </Card>\n  );\n}\n"],"names":["options","title","value","SmsPayloadEdit","form","Form","t","useTranslation","loadingBtn","setLoadingBtn","useState","loading","setLoading","dispatch","useDispatch","navigate","useNavigate","activeMenu","useSelector","state","menu","shallowEqual","type","useParams","typeList","setTypeList","smsGatewaysList","sms","useEffect","refetch","smsService","then","res","data","setFieldsValue","default","Boolean","payload","finally","disableRefetch","fetchSmsPayload","_jsx","Card","className","children","Loading","layout","onFinish","values","Number","undefined","nextUrl","toast","batch","fetchSms","removeFromMenu","_jsxs","Row","gutter","Col","span","label","rules","required","message","Select","disabled","onChange","filter","i","some","e","_Fragment","name","Input","valuePropName","Switch","min","Space","Button","htmlType"],"sourceRoot":""}