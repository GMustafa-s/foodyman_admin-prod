{"version":3,"file":"static/js/7941.b27b1974.chunk.js","mappings":"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","sources":["helpers/useQueryParams.js","views/shops/shop-clone.js","views/shops/steps.js","components/forms/shop-user-form.js","views/shops/user.js"],"sourcesContent":["import { useNavigate, useLocation } from 'react-router-dom';\nimport qs from 'qs';\n\nexport const useQueryParams = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = qs.parse(location.search, { ignoreQueryPrefix: true });\n\n  const get = (name) => queryParams[name];\n  const set = (name, value) =>\n    navigate({ search: qs.stringify({ ...queryParams, [name]: value }) });\n  const clear = () => navigate({ search: qs.stringify({}) });\n  const merge = (values) =>\n    navigate({ search: qs.stringify({ ...queryParams, ...values }) });\n  const reset = (name) => {\n    const newParams = { ...queryParams };\n    if (newParams[name]) {\n      delete newParams[name];\n    }\n\n    navigate({ search: qs.stringify({ ...newParams }) });\n  };\n\n  const setMultiple = (params) => {\n    const newParams = { ...queryParams, ...params };\n    navigate({ search: qs.stringify(newParams) });\n  };\n\n  const resetMultiple = (params) => {\n    const newParams = { ...queryParams };\n    params.forEach((param) => {\n      if (newParams[param]) {\n        delete newParams[param];\n      }\n    });\n    navigate({ search: qs.stringify(newParams) });\n  };\n\n  return {\n    values: queryParams,\n    set,\n    reset,\n    clear,\n    merge,\n    get,\n    setMultiple,\n    resetMultiple,\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport LanguageList from '../../components/language-list';\nimport { useTranslation } from 'react-i18next';\nimport { steps } from './steps';\nimport { Card, Steps } from 'antd';\nimport ShopMain from './main';\nimport UserEdit from './user';\nimport { useQueryParams } from '../../helpers/useQueryParams';\nimport { disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport shopService from '../../services/shop';\nimport { useParams } from 'react-router-dom';\nimport ShopDelivery from './shopDelivery';\nimport Loading from '../../components/loading';\nimport Map from '../../components/shop/map';\nconst { Step } = Steps;\n\nconst ShopClone = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const queryParams = useQueryParams();\n  const current = Number(queryParams.values?.step || 0);\n  const [loading, setLoading] = useState(activeMenu.refetch);\n  const dispatch = useDispatch();\n  const { uuid } = useParams();\n\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  const next = () => {\n    const step = current + 1;\n    queryParams.set('step', step);\n  };\n  const prev = () => {\n    const step = current - 1;\n    queryParams.set('step', step);\n  };\n\n  const onChange = (step) => {\n    dispatch(setMenuData({ activeMenu, data: { ...activeMenu.data, step } }));\n    queryParams.set('step', step);\n  };\n\n  const fetchShop = (uuid) => {\n    setLoading(true);\n    shopService\n      .getById(uuid)\n      .then((res) => {\n        const data = {\n          ...res.data,\n          ...getLanguageFields(res.data),\n          logo_img: createImages(res.data.logo_img),\n          background_img: createImages(res.data.background_img),\n          user: '',\n          delivery_time_from: res.data?.delivery_time.from,\n          delivery_time_to: res.data?.delivery_time.to,\n          delivery_time_type: res.data?.delivery_time.type,\n          recommended: res.data.mark === 'recommended',\n          categories: res.data?.categories.map((item) => ({\n            label: item?.translation?.title,\n            value: item.id,\n            key: item.id,\n          })),\n          tags: res.data?.tags.map((item) => ({\n            label: item?.translation?.title,\n            value: item.id,\n            key: item.id,\n          })),\n          price: res.data?.price || 0,\n          price_per_km: res.data?.price_per_km || 0,\n          min_amount: res.data?.min_amount || 0,\n          tax: res.data?.tax || 0,\n          percentage: res.data?.percentage || 0,\n          emailStatuses: res?.data?.email_statuses?.map((item) => ({\n            label: t(item),\n            value: item,\n            key: item,\n          })),\n        };\n        dispatch(setMenuData({ activeMenu, data }));\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const createImages = (items) => {\n    return {\n      items,\n      uid: items,\n      url: items,\n      name: items,\n    };\n  };\n\n  function getLanguageFields(data) {\n    if (!data?.translations) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.description,\n      [`address[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.address,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  useEffect(() => {\n    if (activeMenu.refetch && uuid) {\n      fetchShop(uuid);\n    }\n  }, [activeMenu.refetch, current]);\n\n  return (\n    <Card title={t('shop.clone')} extra={<LanguageList />}>\n      <Steps current={current} onChange={onChange}>\n        {steps.map((item) => (\n          <Step title={t(item.title)} key={item.title} />\n        ))}\n      </Steps>\n      {!loading ? (\n        <div className='steps-content'>\n          {steps[current].content === 'First-content' && (\n            <ShopMain next={next} loading={loading} user={true} />\n          )}\n\n          {steps[current].content === 'Second-content' && (\n            <Map next={next} prev={prev} />\n          )}\n\n          {steps[current].content === 'Third-content' && (\n            <ShopDelivery next={next} prev={prev} />\n          )}\n\n          {steps[current].content === 'Four-content' && (\n            <UserEdit next={next} prev={prev} />\n          )}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </Card>\n  );\n};\nexport default ShopClone;\n","export const steps = [\n  {\n    title: 'shop',\n    content: 'First-content',\n  },\n  {\n    title: 'map',\n    content: 'Second-content',\n  },\n  {\n    title: 'delivery',\n    content: 'Third-content',\n  },\n  {\n    title: 'user',\n    content: 'Four-content',\n  },\n];\n","import React from 'react';\nimport { Button, Col, Form, Input, InputNumber, Row, Space } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst ShopUserForm = ({ prev, loadingBtn, error }) => {\n  const { t } = useTranslation();\n  return (\n    <Row gutter={12}>\n      <Col span={12}>\n        <Form.Item\n          label={t('firstname')}\n          name='firstname'\n          help={error?.firstname ? error.firstname[0] : null}\n          validateStatus={error?.firstname ? 'error' : 'success'}\n          rules={[{ required: true, message: t('required') }]}\n        >\n          <Input className='w-100' />\n        </Form.Item>\n      </Col>\n\n      <Col span={12}>\n        <Form.Item\n          label={t('lastname')}\n          name='lastname'\n          help={error?.lastname ? error.lastname[0] : null}\n          validateStatus={error?.lastname ? 'error' : 'success'}\n          rules={[{ required: true, message: t('required') }]}\n        >\n          <Input className='w-100' />\n        </Form.Item>\n      </Col>\n\n      <Col span={12}>\n        <Form.Item\n          label={t('phone')}\n          name='phone'\n          help={error?.phone ? error.phone[0] : null}\n          validateStatus={error?.phone ? 'error' : 'success'}\n          rules={[{ required: true, message: t('required') }]}\n        >\n          <InputNumber min={0} className='w-100' />\n        </Form.Item>\n      </Col>\n\n      <Col span={12}>\n        <Form.Item\n          label={t('email')}\n          name='email'\n          help={error?.email ? error.email[0] : null}\n          validateStatus={error?.email ? 'error' : 'success'}\n          rules={[{ required: true, message: t('required') }]}\n        >\n          <Input type='email' className='w-100' />\n        </Form.Item>\n      </Col>\n\n      <Col span={12}>\n        <Form.Item\n          label={t('password')}\n          name='password'\n          help={error?.password ? error.password[0] : null}\n          validateStatus={error?.password ? 'error' : 'success'}\n          rules={[\n            { required: false, message: t('required') },\n            {\n              type: 'string',\n              min: 6,\n              message: t('min.6.letters'),\n            },\n          ]}\n          normalize={(value) => (value?.trim() === '' ? value?.trim() : value)}\n        >\n          <Input.Password\n            type='password'\n            className='w-100'\n            autoComplete='off'\n          />\n        </Form.Item>\n      </Col>\n\n      <Col span={12}>\n        <Form.Item\n          label={t('password.confirmation')}\n          help={\n            error?.password_confirmation ? error.password_confirmation[0] : null\n          }\n          validateStatus={error?.password_confirmation ? 'error' : 'success'}\n          name='password_confirmation'\n          dependencies={['password']}\n          hasFeedback\n          rules={[\n            {\n              required: false,\n              message: t('required'),\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(t('passwords.do.not.match'));\n              },\n            }),\n          ]}\n          normalize={(value) => (value?.trim() === '' ? value?.trim() : value)}\n        >\n          <Input.Password\n            type='password'\n            className='w-100'\n            autoComplete='off'\n          />\n        </Form.Item>\n      </Col>\n\n      <Col span={24}>\n        <Space>\n          <Button type='primary' htmlType='submit' loading={loadingBtn}>\n            {t('save')}\n          </Button>\n          <Button htmlType='submit' onClick={() => prev()}>\n            {t('prev')}\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ShopUserForm;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Form, Input, InputNumber, Row, Space } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport userService from '../../services/user';\nimport { toast } from 'react-toastify';\nimport { removeFromMenu } from '../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport Loading from '../../components/loading';\nimport ShopUserForm from 'components/forms/shop-user-form';\nimport { fetchShops } from '../../redux/slices/shop';\n\nexport default function UserEdit({ prev }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const showUserData = (uuid) => {\n    if (uuid) {\n      setLoading(true);\n      userService\n        .getById(uuid)\n        .then((res) => {\n          const data = res.data;\n          form.setFieldsValue({\n            firstname: data.firstname,\n            lastname: data.lastname,\n            email: data.email,\n            phone: data.phone,\n            password_confirmation: data.password_confirmation,\n            password: data.password,\n          });\n        })\n        .finally(() => setLoading(false));\n    }\n  };\n\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    const body = {\n      firstname: values.firstname,\n      lastname: values.lastname,\n      email: values.email,\n      phone: values.phone,\n      password_confirmation: values.password_confirmation,\n      password: values.password,\n    };\n    const nextUrl = 'shops';\n    userService\n      .update(activeMenu?.data?.seller?.uuid, body)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        navigate(`/${nextUrl}`);\n        dispatch(fetchShops({ perPage: 10, page: 1 }));\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n      })\n      .catch((err) => setError(err.response.data.params))\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    showUserData(activeMenu?.data?.seller?.uuid);\n\n    return () => {\n      setLoading(false);\n      setLoadingBtn(false);\n    }\n  }, []);\n\n  return (\n    <>\n      {!loading ? (\n        <Form\n          form={form}\n          layout='vertical'\n          initialValues={{\n            ...activeMenu.data,\n          }}\n          onFinish={onFinish}\n          className='py-4'\n        >\n          <ShopUserForm error={error} loadingBtn={loadingBtn} />\n        </Form>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n"],"names":["useQueryParams","navigate","useNavigate","location","useLocation","queryParams","qs","search","ignoreQueryPrefix","values","set","name","value","reset","newParams","clear","merge","get","setMultiple","params","resetMultiple","forEach","param","Step","Steps","ShopClone","_queryParams$values","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","current","Number","step","loading","setLoading","useState","refetch","dispatch","useDispatch","uuid","useParams","languages","formLang","next","prev","createImages","items","uid","url","getLanguageFields","data","translations","result","map","item","_translations$find","_translations$find2","_translations$find3","locale","find","el","title","description","address","Object","assign","useEffect","shopService","then","res","_res$data","_res$data2","_res$data3","_res$data4","_res$data5","_res$data6","_res$data7","_res$data8","_res$data9","_res$data10","_res$data11","_res$data11$email_sta","logo_img","background_img","user","delivery_time_from","delivery_time","from","delivery_time_to","to","delivery_time_type","type","recommended","mark","categories","_item$translation","label","translation","id","key","tags","_item$translation2","price","price_per_km","min_amount","tax","percentage","emailStatuses","email_statuses","setMenuData","finally","disableRefetch","fetchShop","_jsxs","Card","extra","_jsx","LanguageList","children","onChange","steps","Loading","className","content","ShopMain","Map","ShopDelivery","UserEdit","_ref","loadingBtn","error","Row","gutter","Col","span","Form","help","firstname","validateStatus","rules","required","message","Input","lastname","phone","InputNumber","min","email","password","normalize","trim","autoComplete","password_confirmation","dependencies","hasFeedback","_ref2","getFieldValue","validator","rule","Promise","reject","resolve","Space","Button","htmlType","onClick","setError","setLoadingBtn","form","_activeMenu$data2","_activeMenu$data2$sel","seller","userService","setFieldsValue","_Fragment","layout","initialValues","onFinish","_activeMenu$data","_activeMenu$data$sell","body","nextUrl","toast","fetchShops","perPage","page","removeFromMenu","catch","err","response","ShopUserForm"],"sourceRoot":""}