{"version":3,"file":"static/js/7942.2b0d63c5.chunk.js","mappings":"yHAAe,SAASA,EAAkBC,EAAWC,GAA2B,IAArBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,SACnE,GAAS,OAAJF,QAAI,IAAJA,IAAAA,EAAMK,aACT,MAAO,GAET,MAAM,aAAEA,GAAiBL,EACnBM,EAAkBA,CAACC,EAAMC,KAC7B,MAAMC,EAAuB,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAcK,MAAMC,IAAS,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIC,WAAe,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMK,UACjE,OAAIH,GAGK,CACL,CAACD,GAAQ,KAITK,EAASd,EAAUe,SAASP,GAChCN,EAAOa,SAASN,IAAK,CACnB,CAAC,GAAGA,KAAa,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMK,WAAYN,EAAgBC,EAAMC,GAAOA,SAIhE,OAAOO,OAAOC,OAAO,MAAOH,G,8PCN9B,MAuFA,EAvF4BI,KAC1B,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,KACpD,OAAEC,IAAWJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMI,gBAAgBF,EAAAA,KACzDG,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,GAAQC,EAAAA,EAAAA,WACRC,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC7B,KAAEK,IAASC,EAAAA,EAAAA,OACX,UAAExC,IAAc0B,EAAAA,EAAAA,KAAaC,GAAUA,EAAMc,UAAUZ,EAAAA,KAE7Da,EAAAA,EAAAA,YAAU,IACD,KACL,MAAMzC,EAAOkC,EAAKQ,gBAAe,GACjCpB,GAASqB,EAAAA,EAAAA,IAAY,CAAEnB,WAAAA,EAAYxB,KAAAA,OAGpC,IAqDH,OALAyC,EAAAA,EAAAA,YAAU,KA9CWG,IAAAA,EA+CfpB,EAAWqB,UA/CID,EA+CiBN,EA9CpCN,GAAW,GACXc,EAAAA,EAAAA,QACWF,GACRG,MAAMC,IAAS,IAADC,EACb,IAAIC,EAAWF,EAAIhD,KAEnB,MAAMmD,EAAO,IACRD,MACApD,EAAAA,EAAAA,GAAkBC,EAAWmD,EAAU,CAAC,QAAS,gBACpDE,MAAe,OAARF,QAAQ,IAARA,GAAa,QAALD,EAARC,EAAUG,WAAG,IAAAJ,GAAbA,EAAe9C,OAAS,EAACmD,EAAAA,EAAAA,GAAoB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUG,MAAQ,GAC9DE,SAAUL,EAASK,SAASC,MAAM,MAGpCtB,EAAKuB,eAAeN,GACpB7B,GAASqB,EAAAA,EAAAA,IAAY,CAAEnB,WAAAA,EAAYxB,KAAMmD,QAE1CO,SAAQ,KACP1B,GAAW,GACXV,GAASqC,EAAAA,EAAAA,IAAenC,UA8B3B,CAACA,EAAWqB,WAGbe,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAO5C,EAAE,kBAAmB6C,OAAOH,EAAAA,EAAAA,KAACI,EAAAA,EAAY,IAAIC,SACtDlC,GAOA6B,EAAAA,EAAAA,KAAA,OAAKM,UAAU,wDAAuDD,UACpEL,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACC,KAAK,QAAQF,UAAU,iBAP/BN,EAAAA,EAAAA,KAACS,EAAAA,EAAkB,CACjBnC,KAAMA,EACNoC,aAjCaA,CAACC,EAAQnB,KAAW,IAADoB,EACtC,MAAMrB,EAAO,CACXW,OAAOW,EAAAA,EAAAA,GAAqB1E,EAAWwE,GACvCG,aAAaD,EAAAA,EAAAA,GAAqB1E,EAAWwE,EAAQ,eACrDhB,SAAgB,OAANgB,QAAM,IAANA,GAAgB,QAAVC,EAAND,EAAQhB,gBAAQ,IAAAiB,OAAV,EAANA,EAAkBG,KAAK,KACjCC,OAAa,OAALxB,QAAK,IAALA,OAAK,EAALA,EAAOyB,KAAKtE,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMuE,OACnCC,OAAc,OAANR,QAAM,IAANA,GAAAA,EAAQQ,OAAS,EAAI,EAC7BC,eAAW5E,EACX6E,KAAM,UAEFC,EAAU,4BAEhBpC,EAAAA,EAAAA,OACUK,GACPJ,MAAK,KACJoC,EAAAA,GAAAA,QAAcjE,EAAE,wBAChBI,GAAS8D,EAAAA,EAAAA,IAAe,IAAK5D,EAAY0D,QAAAA,KACzC5D,GAAS+D,EAAAA,EAAAA,GAAsBxD,IAC/BT,EAAS,IAAI8D,QAEdI,OAAOC,GAAQlD,EAASkD,EAAIC,SAASxF,KAAK6B,WAcvCO,MAAOA","sources":["helpers/getLanguageFields.js","views/career-categories/career-category-clone.js"],"sourcesContent":["export default function getLanguageFields(languages, data, fields = ['title']) {\n  if (!data?.translations) {\n    return {};\n  }\n  const { translations } = data;\n  const getTranslations = (item, field) => {\n    const findItem = translations?.find((el) => el?.locale === item?.locale);\n    if (findItem) {\n      return findItem;\n    } else {\n      return {\n        [field]: '',\n      };\n    }\n  };\n  const result = languages.flatMap((item) =>\n    fields.flatMap((field) => ({\n      [`${field}[${item?.locale}]`]: getTranslations(item, field)[field],\n    })),\n  );\n\n  return Object.assign({}, ...result);\n}\n","import React, { useState, useEffect } from 'react';\nimport { Card, Form, Spin } from 'antd';\nimport { toast } from 'react-toastify';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport LanguageList from 'components/language-list';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, removeFromMenu, setMenuData } from 'redux/slices/menu';\nimport categoryService from 'services/category';\nimport { fetchCareerCategories } from 'redux/slices/career-category';\nimport { useTranslation } from 'react-i18next';\nimport getTranslationFields from 'helpers/getTranslationFields';\nimport getLanguageFields from 'helpers/getLanguageFields';\nimport createImage from 'helpers/createImage';\nimport CareerCategoryForm from './career-category-form';\n\nconst CareerCategoryClone = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { params } = useSelector((state) => state.careerCategory, shallowEqual);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const [error, setError] = useState(null);\n  const { uuid } = useParams();\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getCategory = (alias) => {\n    setLoading(true);\n    categoryService\n      .getById(alias)\n      .then((res) => {\n        let category = res.data;\n\n        const body = {\n          ...category,\n          ...getLanguageFields(languages, category, ['title', 'description']),\n          image: category?.img?.length ? [createImage(category?.img)] : [],\n          keywords: category.keywords.split(','),\n        };\n\n        form.setFieldsValue(body);\n        dispatch(setMenuData({ activeMenu, data: body }));\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const handleSubmit = (values, image) => {\n    const body = {\n      title: getTranslationFields(languages, values),\n      description: getTranslationFields(languages, values, 'description'),\n      keywords: values?.keywords?.join(','),\n      images: image?.map((item) => item?.name),\n      active: values?.active ? 1 : 0,\n      parent_id: undefined,\n      type: 'career',\n    };\n    const nextUrl = 'catalog/career-categories';\n\n    categoryService\n      .create(body)\n      .then(() => {\n        toast.success(t('successfully.cloned'));\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchCareerCategories(params));\n        navigate(`/${nextUrl}`);\n      })\n      .catch((err) => setError(err.response.data.params));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) getCategory(uuid);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('clone.category')} extra={<LanguageList />}>\n      {!loading ? (\n        <CareerCategoryForm\n          form={form}\n          handleSubmit={handleSubmit}\n          error={error}\n        />\n      ) : (\n        <div className='d-flex justify-content-center align-items-center py-5'>\n          <Spin size='large' className='mt-5 pt-5' />\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default CareerCategoryClone;\n"],"names":["getLanguageFields","languages","data","fields","arguments","length","undefined","translations","getTranslations","item","field","findItem","find","el","locale","result","flatMap","Object","assign","CareerCategoryClone","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","activeMenu","useSelector","state","menu","shallowEqual","params","careerCategory","loading","setLoading","useState","form","Form","error","setError","uuid","useParams","formLang","useEffect","getFieldsValue","setMenuData","alias","refetch","categoryService","then","res","_category$img","category","body","image","img","createImage","keywords","split","setFieldsValue","finally","disableRefetch","_jsx","Card","title","extra","LanguageList","children","className","Spin","size","CareerCategoryForm","handleSubmit","values","_values$keywords","getTranslationFields","description","join","images","map","name","active","parent_id","type","nextUrl","toast","removeFromMenu","fetchCareerCategories","catch","err","response"],"sourceRoot":""}