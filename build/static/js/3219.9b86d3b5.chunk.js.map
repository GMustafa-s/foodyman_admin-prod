{"version":3,"file":"static/js/3219.9b86d3b5.chunk.js","mappings":"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","sources":["views/categories/category-request-modal.js","views/categories/category-request-list.js","views/categories/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Form, Col, Row, Input, Button } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nexport default function CategoryRequestModal({\n  data,\n  handleCancel,\n  handleOk,\n  visible,\n}) {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    const params = { ...values, status: 'canceled' };\n    handleOk(params);\n  };\n\n  return (\n    <Modal\n      title={t(data.title)}\n      visible={visible}\n      onCancel={handleCancel}\n      footer={[\n        <Button type='primary' onClick={() => form.submit()} loading={loading}>\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel}>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form layout='vertical' onFinish={onFinish} form={form}>\n        <Form.Item>\n          <Row className='mt-4'>\n            <Col span={24}>\n              <Form.Item\n                name='status_note'\n                label={t('note')}\n                rules={[\n                  {\n                    validator(_, value) {\n                      if (!value) {\n                        return Promise.reject(new Error(t('required')));\n                      } else if (value && value?.trim() === '') {\n                        return Promise.reject(new Error(t('no.empty.space')));\n                      } else if (value && value?.trim().length < 2) {\n                        return Promise.reject(\n                          new Error(t('must.be.at.least.2'))\n                        );\n                      }\n                      return Promise.resolve();\n                    },\n                  },\n                ]}\n              >\n                <Input.TextArea maxLength={250} showCount />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Card, Image, Table, Button, Space, Tag } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport getImage from 'helpers/getImage';\nimport { EditOutlined } from '@ant-design/icons';\nimport { addMenu, disableRefetch, setMenuData } from 'redux/slices/menu';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport CustomModal from 'components/modal';\nimport { Context } from 'context/context';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport FilterColumns from 'components/filter-column';\nimport formatSortType from 'helpers/formatSortType';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport { fetchRequestModels } from 'redux/slices/request-models';\nimport { HiArrowNarrowRight } from 'react-icons/hi';\nimport requestAdminModelsService from 'services/request-models';\nimport moment from 'moment';\nimport CategoryRequestModal from './category-request-modal';\n\nconst body = {\n  type: 'category',\n};\n\nexport default function CategoryRequestList({\n  parentId,\n  type = 'main',\n  activeTab = 'request',\n}) {\n  const { t } = useTranslation();\n  const { setIsModalVisible } = useContext(Context);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [id, setId] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const {\n    data: requests,\n    meta,\n    loading,\n    params,\n  } = useSelector((state) => state.requestModels, shallowEqual);\n  const data = activeMenu.data;\n  const { uuid: parentUuid } = useParams();\n\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n    parent_id: parentId,\n  };\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `category-request/${row.id}`,\n        id: 'request_edit',\n        name: t('request.edit'),\n      }),\n    );\n    navigate(`/category-request/${row.id}`, {\n      state: { parentId, parentUuid },\n    });\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('created.by'),\n      dataIndex: 'createdBy',\n      key: 'createdBy',\n      is_show: true,\n      render: (createdBy) => (\n        <span>\n          {createdBy.firstname} {createdBy?.lastname}{' '}\n          <a href={`tel:${createdBy?.phone}`}>{createdBy?.phone}</a>\n        </span>\n      ),\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (createdAt) => moment(createdAt).format('YYYY-MM-DD HH:mm'),\n    },\n    {\n      title: t('name'),\n      dataIndex: 'name',\n      key: 'name',\n      is_show: true,\n      render: (_, row) => (\n        <Space>\n          {row?.model?.translation?.title} <HiArrowNarrowRight />{' '}\n          {row?.data?.title?.[row?.model?.translation?.locale]}\n        </Space>\n      ),\n    },\n    {\n      title: t('image'),\n      dataIndex: 'img',\n      key: 'img',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Image\n              src={getImage(row?.model?.img)}\n              alt='img_gallery'\n              width={100}\n              className='rounded'\n              preview\n              placeholder\n            />\n            <HiArrowNarrowRight />\n            <Image\n              src={getImage(row?.data?.images?.at(0))}\n              alt='img_gallery'\n              width={100}\n              className='rounded'\n              preview\n              placeholder\n            />\n          </Space>\n        );\n      },\n    },\n    {\n      title: t('status'),\n      is_show: true,\n      dataIndex: 'status',\n      key: 'status',\n      render: (status, row) => (\n        <div>\n          {status === 'pending' ? (\n            <Tag color='blue'>{t(status)}</Tag>\n          ) : status === 'canceled' ? (\n            <Tag color='error'>{t(status)}</Tag>\n          ) : (\n            <Tag color='cyan'>{t(status)}</Tag>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button icon={<EditOutlined />} onClick={() => goToEdit(row)} />\n            <Button\n              type='primary'\n              onClick={() => {\n                setId([{ id: row.id, status: 'approved' }]);\n                setIsModalVisible(true);\n              }}\n            >\n              {t('accept')}\n            </Button>\n            <Button\n              type='primary'\n              danger\n              onClick={() => {\n                setId([{ id: row.id, status: 'canceled' }]);\n                setModalVisible(true);\n              }}\n            >\n              {t('decline')}\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  useEffect(() => {\n    if (activeMenu.refetch && activeTab === 'request') {\n      dispatch(fetchRequestModels(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    if (activeTab === 'request') {\n      dispatch(fetchRequestModels(paramsData));\n    }\n  }, [activeTab, activeMenu.data]);\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      }),\n    );\n  }\n\n  const requestStatusChange = (data) => {\n    setLoadingBtn(true);\n    const params = {\n      status: id?.at(0).status,\n      status_note: data?.status_note,\n    };\n    requestAdminModelsService\n      .changeStatus(id?.at(0).id, params)\n      .then(() => {\n        toast.success(t('successfully.changed'));\n        dispatch(fetchRequestModels(body));\n        setIsModalVisible(false);\n        setId(null);\n      })\n      .finally(() => {\n        setModalVisible(false);\n        setLoadingBtn(false);\n      });\n  };\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  return (\n    <Card\n      title={t('requests')}\n      extra={\n        <Space wrap>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={requests}\n        pagination={{\n          pageSize: params.perPage,\n          page: activeMenu.data?.page || 1,\n          total: meta.total,\n          defaultCurrent: activeMenu.data?.page,\n          current: activeMenu.data?.page,\n        }}\n        rowKey={(record) => record.key}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n      <CustomModal\n        click={requestStatusChange}\n        text={t('change.status')}\n        setText={setId}\n        loading={loadingBtn}\n      />\n      <CategoryRequestModal\n        data={{ title: 'decline' }}\n        visible={modalVisible}\n        handleCancel={() => setModalVisible(false)}\n        handleOk={requestStatusChange}\n        laoding={loadingBtn}\n      />\n    </Card>\n  );\n}\n","import React, { useState } from 'react';\nimport { Tabs } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport CategoryList from './category-list';\nimport CategoryRequestList from './category-request-list';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { setRefetch } from 'redux/slices/menu';\n\nexport default function SellerCategories() {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [activeTab, setActiveTab] = useState(location.state?.tab || 'list');\n  return (\n    <Tabs\n      defaultActiveKey={location.state?.tab || 'list'}\n      destroyInactiveTabPane\n      onChange={(key) => {\n        dispatch(setRefetch(activeMenu));\n        setActiveTab(key);\n      }}\n    >\n      <Tabs.TabPane key='list' tab={t('category.list')}>\n        <CategoryList activeTab={activeTab} />\n      </Tabs.TabPane>\n      <Tabs.TabPane key='request' tab={t('requests')}>\n        <CategoryRequestList activeTab={activeTab} />\n      </Tabs.TabPane>\n    </Tabs>\n  );\n}\n"],"names":["CategoryRequestModal","_ref","data","handleCancel","handleOk","visible","t","useTranslation","form","Form","loading","setLoading","useState","_jsx","Modal","title","onCancel","footer","Button","type","onClick","submit","children","layout","onFinish","values","params","status","Row","className","Col","span","name","label","rules","validator","_","value","trim","Promise","reject","Error","length","resolve","Input","maxLength","showCount","body","CategoryRequestList","_activeMenu$data","_activeMenu$data2","_activeMenu$data3","parentId","activeTab","setIsModalVisible","useContext","Context","modalVisible","setModalVisible","loadingBtn","setLoadingBtn","id","setId","dispatch","useDispatch","navigate","useNavigate","activeMenu","useSelector","state","menu","shallowEqual","requests","meta","requestModels","uuid","parentUuid","useParams","paramsData","sort","column","perPage","page","parent_id","columns","setColumns","dataIndex","key","is_show","render","createdBy","_jsxs","firstname","lastname","href","phone","createdAt","moment","format","row","_row$model","_row$model$translatio","_row$data","_row$data$title","_row$model2","_row$model2$translati","Space","model","translation","HiArrowNarrowRight","locale","_row$model3","_row$data2","_row$data2$images","Image","src","getImage","img","alt","width","preview","placeholder","images","at","Tag","color","icon","EditOutlined","addMenu","url","goToEdit","danger","useEffect","refetch","fetchRequestModels","disableRefetch","useDidUpdate","requestStatusChange","status_note","requestAdminModelsService","then","toast","finally","rowSelection","selectedRowKeys","onChange","Card","extra","wrap","FilterColumns","Table","scroll","x","filter","item","dataSource","pagination","pageSize","total","defaultCurrent","current","rowKey","record","sorter","field","order","formatSortType","setMenuData","CustomModal","click","text","setText","laoding","SellerCategories","_location$state","_location$state2","location","useLocation","setActiveTab","tab","Tabs","defaultActiveKey","destroyInactiveTabPane","setRefetch","CategoryList"],"sourceRoot":""}