{"version":3,"file":"static/js/6053.7bdd25f5.chunk.js","mappings":"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","sources":["components/search.js","views/message-subscribers/subciribed-add.js","views/message-subscribers/textEditor.js","views/message-subscribers/subscribed-form.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Select, Spin } from 'antd';\n\nexport const DebounceSelect = ({\n  fetchOptions,\n  debounceTimeout = 400,\n  onClear,\n  ...props\n}) => {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  const fetchOnFocus = () => {\n      debounceFetcher('');\n  };\n\n  return (\n    <Select\n      showSearch\n      allowClear\n      labelInValue={true}\n      filterOption={false}\n      onSearch={debounceFetcher}\n      onClear={() => {\n        debounceFetcher('');\n        !!onClear && onClear();\n      }}\n      notFoundContent={fetching ? <Spin size='small' /> : 'no results'}\n      {...props}\n      options={options}\n      onFocus={fetchOnFocus}\n    />\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from '../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport messageSubscriberService from '../../services/messageSubscriber';\nimport { fetchMessageSubscriber } from '../../redux/slices/messegeSubscriber';\nimport SubscribedForm from './subscribed-form';\n\nconst MessageSubciribedAdd = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (values) => {\n    const body = {\n      ...values,\n      type: values.type,\n      email_setting_id: values.email_setting_id.value,\n      send_to: moment(values.send_to).format('YYYY-MM-DD HH:mm:ss'),\n    };\n    const nextUrl = 'message/subscriber';\n\n    return messageSubscriberService.create(body).then(() => {\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchMessageSubscriber({}));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.subscriber')} className='h-100'>\n      <SubscribedForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n};\n\nexport default MessageSubciribedAdd;\n","import React from 'react';\nimport { Form } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { IMG_URL } from '../../configs/app-global';\nimport galleryService from '../../services/gallery';\n\nexport default function TextEditor({ form, lang, languages }) {\n  const { t } = useTranslation();\n\n  function uploadAdapter(loader) {\n    return {\n      upload: () => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          loader.file.then((file) => {\n            formData.append('image', file);\n            formData.append('type', 'blogs');\n            galleryService\n              .upload(formData)\n              .then(({ data }) => {\n                resolve({\n                  default: `${IMG_URL + data.title}`,\n                });\n              })\n              .catch((err) => {\n                reject(err);\n              });\n          });\n        });\n      },\n    };\n  }\n\n  function uploadPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n      return uploadAdapter(loader);\n    };\n  }\n\n  const handleChange = (e, editor) => {\n    const data = editor.getData();\n  };\n\n  return (\n    <div className='textEditor'>\n      <Form.Item\n        label={t('newsletter.content')}\n        name={'body'}\n        valuePropName='data'\n        getValueFromEvent={(event, editor) => {\n          const data = editor.getData();\n          return data;\n        }}\n        rules={[\n          {\n            required: true,\n            message: t('required'),\n          },\n        ]}\n        className='description-editor'\n      >\n        <CKEditor\n          editor={ClassicEditor}\n          config={{\n            extraPlugins: [uploadPlugin],\n          }}\n          onChange={handleChange}\n          onBlur={(event, editor) => {\n            const data = editor.getData();\n            form.setFieldsValue({\n              body: data,\n            });\n          }}\n        />\n      </Form.Item>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Col, DatePicker, Form, Input, Row, Select } from 'antd';\nimport { DebounceSelect } from '../../components/search';\nimport TextEditor from './textEditor';\nimport moment from 'moment/moment';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport emailService from '../../services/emailSettings';\n\nconst options = [\n  { title: 'order', value: 'order' },\n  { title: 'subscribe', value: 'subscribe' },\n  { title: 'verify', value: 'verify' },\n];\n\nexport default function SubscribedForm({ type = 'add', form, handleSubmit }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { defaultLang, languages } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n  const { subscribers } = useSelector(\n    (state) => state.messageSubscriber,\n    shallowEqual,\n  );\n\n  // states\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  // helper functions\n  const getInitialValues = () => {\n    const data = activeMenu.data;\n    if (!data?.send_to) {\n      return data;\n    }\n    const start = data.send_to;\n    return {\n      ...data,\n      send_to: moment(start, 'YYYY-MM-DD'),\n    };\n  };\n\n  // fetch functions\n  const fetchEmailProvider = () => {\n    return emailService.get().then(({ data }) =>\n      data.map((item) => ({\n        label: item?.host,\n        value: item?.id,\n      })),\n    );\n  };\n\n  // submit form\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    handleSubmit(values).finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Form\n      name='subscriber-form'\n      layout='vertical'\n      onFinish={onFinish}\n      form={form}\n      initialValues={{\n        ...activeMenu.data,\n        ...getInitialValues(),\n      }}\n      className='d-flex flex-column h-100'\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <Form.Item\n            label={t('subject')}\n            name='subject'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label={t('type')}\n            name='type'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Select\n              disabled={type === 'edit'}\n              options={options.filter(\n                (i) => !subscribers.some((e) => e.type === i.value),\n              )}\n              className='w-100'\n            />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label={t('email.setting.id')}\n            name='email_setting_id'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <DebounceSelect\n              fetchOptions={fetchEmailProvider}\n              className='w-100'\n              placeholder={t('email.setting.id')}\n            />\n          </Form.Item>\n        </Col>\n\n        <Col span={24}>\n          <TextEditor languages={languages} form={form} lang={defaultLang} />\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label={t('alt.body')}\n            name='alt_body'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={6}>\n          <Form.Item\n            label={t('send.to')}\n            name='send_to'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <DatePicker\n              showTime\n              className='w-100'\n              disabledDate={(current) => moment().add(-1, 'days') >= current}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <div className='flex-grow-1 d-flex flex-column justify-content-end'>\n        <div className='pb-5'>\n          <Button type='primary' htmlType='submit' loading={loadingBtn}>\n            {t('send')}\n          </Button>\n        </div>\n      </div>\n    </Form>\n  );\n}\n"],"names":["DebounceSelect","_ref","fetchOptions","debounceTimeout","onClear","props","fetching","setFetching","useState","options","setOptions","debounceFetcher","useMemo","debounce","value","then","newOptions","_jsx","Select","showSearch","allowClear","labelInValue","filterOption","onSearch","notFoundContent","Spin","size","onFocus","fetchOnFocus","MessageSubciribedAdd","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","form","Form","navigate","useNavigate","useEffect","data","getFieldsValue","setMenuData","Card","title","className","children","SubscribedForm","handleSubmit","values","body","type","email_setting_id","send_to","moment","format","nextUrl","messageSubscriberService","toast","batch","removeFromMenu","fetchMessageSubscriber","TextEditor","lang","languages","label","name","valuePropName","getValueFromEvent","event","editor","getData","rules","required","message","CKEditor","ClassicEditor","config","extraPlugins","plugins","get","createUploadAdapter","loader","upload","Promise","resolve","reject","formData","FormData","file","append","galleryService","_ref2","default","IMG_URL","catch","err","uploadAdapter","onChange","handleChange","e","onBlur","setFieldsValue","defaultLang","formLang","subscribers","messageSubscriber","loadingBtn","setLoadingBtn","_jsxs","layout","onFinish","finally","initialValues","getInitialValues","start","Row","gutter","Col","span","Input","disabled","filter","i","some","fetchEmailProvider","emailService","map","item","host","id","placeholder","DatePicker","showTime","disabledDate","current","add","Button","htmlType","loading"],"sourceRoot":""}