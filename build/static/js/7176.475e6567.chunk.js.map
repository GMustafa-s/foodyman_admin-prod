{"version":3,"file":"static/js/7176.475e6567.chunk.js","mappings":"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","sources":["components/result-modal.js","views/seller-views/reviews/orderReviews.js"],"sourcesContent":["import React from 'react';\nimport { Button, Modal, Result } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst ResultModal = ({\n  open,\n  handleCancel,\n  text,\n  click,\n  loading,\n  subTitle,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal closable={false} visible={open} footer={null} centered>\n      <Result status='warning' title={text} subTitle={subTitle} />\n      <div className='d-flex justify-content-end'>\n        <Button\n          type='primary'\n          className='mr-2'\n          onClick={click}\n          loading={loading}\n        >\n          {t('yes')}\n        </Button>\n        <Button onClick={() => handleCancel()}>{t('no')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ResultModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Button, Card, Rate, Space, Table } from 'antd';\nimport { toast } from 'react-toastify';\nimport CustomModal from '../../../components/modal';\nimport { Context } from '../../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  addMenu,\n  disableRefetch,\n  setMenuData,\n} from '../../../redux/slices/menu';\nimport useDidUpdate from '../../../helpers/useDidUpdate';\nimport formatSortType from '../../../helpers/formatSortType';\nimport { useTranslation } from 'react-i18next';\nimport reviewService from '../../../services/seller/review';\nimport { sellerfetchOrderReviews } from '../../../redux/slices/orderReview';\nimport OrderReviewShowModal from './orderReviewShow';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteButton from '../../../components/delete-button';\nimport FilterColumns from '../../../components/filter-column';\nimport ResultModal from '../../../components/result-modal';\n\nexport default function SellerOrderReviews() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const goToOrder = (id) => {\n    dispatch(\n      addMenu({\n        id: 'order_details',\n        url: `seller/order/details/${id}`,\n        name: t('order.details'),\n      })\n    );\n    navigate(`/seller/order/details/${id}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('order.id'),\n      dataIndex: 'order',\n      key: 'order',\n      render: (order) => (\n        <div className='text-hover' onClick={() => goToOrder(order?.id)}>\n          #{order?.id}\n        </div>\n      ),\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('user'),\n      dataIndex: 'user',\n      key: 'user',\n      is_show: true,\n      render: (user) => (\n        <div className='text-hover'>\n          {user?.firstname} {user?.lastname || ''}\n        </div>\n      ),\n    },\n    {\n      title: t('shop'),\n      dataIndex: 'order',\n      key: 'shop',\n      is_show: true,\n      render: (order) => (\n        <div className='text-hover'>{order.shop?.translation?.title}</div>\n      ),\n    },\n    {\n      title: t('rating'),\n      dataIndex: 'rating',\n      key: 'rating',\n      is_show: true,\n      render: (rating) => <Rate disabled defaultValue={rating} />,\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (createdAt) => moment(createdAt).format('YYYY-MM-DD HH:mm'),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (data, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EyeOutlined />}\n              onClick={() => setShow(row.id)}\n            />\n            {/* <DeleteButton\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setId([row.id]);\n                setIsModalVisible(true);\n                setText(true);\n              }}\n            /> */}\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [show, setShow] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [text, setText] = useState(null);\n  const [restore, setRestore] = useState(null);\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { reviews, meta, loading, params } = useSelector(\n    (state) => state.orderReview,\n    shallowEqual\n  );\n\n  const reviewDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    reviewService\n      .delete(params)\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(sellerfetchOrderReviews());\n        setIsModalVisible(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const orderReviewDropAll = () => {\n    setLoadingBtn(true);\n    reviewService\n      .dropAll()\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(sellerfetchOrderReviews());\n        setRestore(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const orderReviewRestoreAll = () => {\n    setLoadingBtn(true);\n    reviewService\n      .restoreAll()\n      .then(() => {\n        toast.success(t('successfully.restored'));\n        dispatch(sellerfetchOrderReviews());\n        setRestore(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(sellerfetchOrderReviews());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    const data = activeMenu.data;\n    const paramsData = {\n      sort: data?.sort,\n      column: data?.column,\n      perPage: data?.perPage,\n      page: data?.page,\n    };\n    dispatch(sellerfetchOrderReviews(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filters, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({ activeMenu, data: { perPage, page, column, sort } })\n    );\n  }\n\n  const onSelectChange = (newSelectedRowKeys) => {\n    setId(newSelectedRowKeys);\n  };\n\n  const rowSelection = {\n    id,\n    onChange: onSelectChange,\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  return (\n    <Card\n      title={t('order.reviews')}\n      extra={\n        <Space wrap>\n          {/* <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton> */}\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={reviews}\n        pagination={{\n          pageSize: params.perPage,\n          page: params.page,\n          total: meta.total,\n          defaultCurrent: params.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n      <CustomModal\n        click={reviewDelete}\n        text={text ? t('delete') : t('all.delete')}\n        setText={setId}\n        loading={loadingBtn}\n      />\n      {show && (\n        <OrderReviewShowModal id={show} handleCancel={() => setShow(null)} />\n      )}\n\n      {restore && (\n        <ResultModal\n          open={restore}\n          handleCancel={() => setRestore(null)}\n          click={restore.restore ? orderReviewRestoreAll : orderReviewDropAll}\n          text={restore.restore ? t('restore.modal.text') : t('read.carefully')}\n          subTitle={restore.restore ? '' : t('confirm.deletion')}\n          loading={loadingBtn}\n          setText={setId}\n        />\n      )}\n    </Card>\n  );\n}\n"],"names":["_ref","open","handleCancel","text","click","loading","subTitle","t","useTranslation","_jsxs","Modal","closable","visible","footer","centered","children","_jsx","Result","status","title","className","Button","type","onClick","SellerOrderReviews","dispatch","useDispatch","navigate","useNavigate","columns","setColumns","useState","dataIndex","key","render","order","id","addMenu","url","name","goToOrder","sorter","is_show","user","firstname","lastname","_order$shop","_order$shop$translati","shop","translation","rating","Rate","disabled","defaultValue","createdAt","moment","format","data","row","Space","icon","EyeOutlined","setShow","setIsModalVisible","useContext","Context","setId","show","loadingBtn","setLoadingBtn","setText","restore","setRestore","activeMenu","useSelector","state","menu","shallowEqual","reviews","meta","params","orderReview","useEffect","refetch","sellerfetchOrderReviews","disableRefetch","useDidUpdate","paramsData","sort","column","perPage","page","rowSelection","onChange","newSelectedRowKeys","Card","extra","wrap","FilterColumns","Table","scroll","x","filter","item","dataSource","pagination","pageSize","total","defaultCurrent","rowKey","record","filters","current","field","formatSortType","setMenuData","CustomModal","reviewDelete","Object","assign","map","index","reviewService","then","toast","finally","OrderReviewShowModal","ResultModal","orderReviewRestoreAll","orderReviewDropAll"],"sourceRoot":""}