{"version":3,"file":"static/js/299.1534dfd4.chunk.js","mappings":"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","sources":["views/pages/page-edit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form, Spin } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  disableRefetch,\n  removeFromMenu,\n  setMenuData,\n} from '../../redux/slices/menu';\nimport { fetchPages } from '../../redux/slices/pages';\nimport pageService from '../../services/pages';\nimport { useTranslation } from 'react-i18next';\nimport LanguageList from '../../components/language-list';\nimport { IMG_URL, api_url } from 'configs/app-global';\nimport axios from 'axios';\nimport getTranslationFields from 'helpers/getTranslationFields';\nimport PageForm from './page-form';\n\nconst PageEdit = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  const createImage = (name) => {\n    return {\n      name,\n      url: IMG_URL + name,\n    };\n  };\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.description,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  const getBanner = (alias) => {\n    setLoading(true);\n    pageService\n      .getById(alias)\n      .then((res) => {\n        let page = res.data;\n        const data = {\n          ...page,\n          ...getLanguageFields(page),\n          ...page?.buttons,\n          active: !!page?.active,\n          image: [createImage(page?.galleries[0]?.path)],\n        };\n        form.setFieldsValue(data);\n        dispatch(setMenuData({ activeMenu, data }));\n      })\n      .finally(() => {\n        dispatch(disableRefetch(activeMenu));\n        setLoading(false);\n      });\n  };\n\n  const handleSubmit = (values, image) => {\n    const body = {\n      images: image.map((img) => img.name),\n      active: Number(values.active),\n      type: values.type,\n      title: getTranslationFields(languages, values, 'title'),\n      description: getTranslationFields(languages, values, 'description'),\n      buttons: {\n        google_play_button_link: values?.google_play_button_link,\n        app_store_button_link: values?.app_store_button_link,\n      },\n    };\n    const nextUrl = 'pages';\n\n    return axios({\n      method: 'put',\n      url: `${api_url}dashboard/admin/pages/${id}`,\n      headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      data: body,\n      params: {},\n    })\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        batch(() => {\n          dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n          dispatch(fetchPages({}));\n        });\n        navigate(`/${nextUrl}`);\n      })\n      .catch((err) => toast.error(err.response?.data?.message));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) getBanner(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('edit.page')} className='h-100' extra={<LanguageList />}>\n      {!loading ? (\n        <PageForm form={form} handleSubmit={handleSubmit} />\n      ) : (\n        <div className='d-flex justify-content-center align-items-center'>\n          <Spin size='large' className='py-5' />\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default PageEdit;\n"],"names":["PageEdit","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","form","Form","navigate","useNavigate","id","useParams","loading","setLoading","useState","languages","formLang","getLanguageFields","data","translations","result","map","item","_translations$find","_translations$find2","locale","find","el","title","description","Object","assign","useEffect","getFieldsValue","setMenuData","alias","refetch","pageService","then","res","_page$galleries$","page","buttons","active","image","name","galleries","path","url","IMG_URL","setFieldsValue","finally","disableRefetch","_jsx","Card","className","extra","LanguageList","children","Spin","size","PageForm","handleSubmit","values","body","images","img","Number","type","getTranslationFields","google_play_button_link","app_store_button_link","nextUrl","axios","method","api_url","headers","Authorization","localStorage","getItem","params","toast","batch","removeFromMenu","fetchPages","catch","err","_err$response","_err$response$data","response","message"],"sourceRoot":""}