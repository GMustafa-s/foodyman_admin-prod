{"version":3,"file":"static/js/9062.57676f09.chunk.js","mappings":"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","sources":["views/restaurant/restaurant-edit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport LanguageList from '../../components/language-list';\nimport { useTranslation } from 'react-i18next';\nimport { steps } from './steps';\nimport { Card, Steps } from 'antd';\nimport UserEdit from './user';\nimport { useQueryParams } from '../../helpers/useQueryParams';\nimport { disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport restaurantService from '../../services/restaurant';\nimport { useParams } from 'react-router-dom';\nimport Loading from '../../components/loading';\nimport RestaurantMain from './main';\nimport RestaurantDelivery from './restaurantDelivery';\nimport Map from '../../components/shop/map';\nconst { Step } = Steps;\n\nconst RestaurantEdit = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const queryParams = useQueryParams();\n  const current = Number(queryParams.values?.step || 0);\n  const [loading, setLoading] = useState(activeMenu.refetch);\n  const dispatch = useDispatch();\n  const { uuid } = useParams();\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  const next = () => {\n    const step = current + 1;\n    queryParams.set('step', step);\n  };\n  const prev = () => {\n    const step = current - 1;\n    queryParams.set('step', step);\n  };\n\n  const onChange = (step) => {\n    dispatch(setMenuData({ activeMenu, data: { ...activeMenu.data, step } }));\n    queryParams.set('step', step);\n  };\n\n  const fetchRestaurant = (uuid) => {\n    setLoading(true);\n    restaurantService\n      .getById(uuid)\n      .then((res) => {\n        const data = {\n          ...res.data,\n          ...getLanguageFields(res.data),\n          logo_img: createImages(res.data.logo_img),\n          background_img: createImages(res.data.background_img),\n          user: {\n            label: res.data.seller.firstname + ' ' + res.data.seller.lastname,\n            value: res.data.seller.id,\n          },\n          delivery_time_from: res.data?.delivery_time.from,\n          delivery_time_to: res.data?.delivery_time.to,\n          delivery_time_type: res.data?.delivery_time.type,\n          recommended: res.data.mark === 'recommended',\n          categories: res.data?.categories?.map((item) => ({\n            label: item?.translation?.title,\n            value: item.id,\n            key: item.id,\n          })),\n          tags: res.data?.tags.map((item) => ({\n            label: item?.translation?.title,\n            value: item.id,\n            key: item.id,\n          })),\n        };\n        dispatch(setMenuData({ activeMenu, data }));\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const createImages = (items) => {\n    return {\n      items,\n      uid: items,\n      url: items,\n      name: items,\n    };\n  };\n\n  function getLanguageFields(data) {\n    if (!data?.translations) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale\n      )?.description,\n      [`address[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale\n      )?.address,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  useEffect(() => {\n    if (activeMenu.refetch && uuid) {\n      fetchRestaurant(uuid);\n    }\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('restaurant.edit')} extra={<LanguageList />}>\n      <Steps current={current} onChange={onChange}>\n        {steps.map((item) => (\n          <Step title={t(item.title)} key={item.title} />\n        ))}\n      </Steps>\n      {!loading ? (\n        <div className='steps-content'>\n          {steps[current].content === 'First-content' && (\n            <RestaurantMain\n              next={next}\n              loading={loading}\n              action_type={'edit'}\n              user={true}\n            />\n          )}\n\n          {steps[current].content === 'Second-content' && (\n            <Map next={next} prev={prev} />\n          )}\n\n          {steps[current].content === 'Third-content' && (\n            <RestaurantDelivery next={next} prev={prev} />\n          )}\n\n          {steps[current].content === 'Four-content' && (\n            <UserEdit next={next} prev={prev} />\n          )}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </Card>\n  );\n};\nexport default RestaurantEdit;\n"],"names":["Step","Steps","RestaurantEdit","_queryParams$values","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","queryParams","useQueryParams","current","Number","values","step","loading","setLoading","useState","refetch","dispatch","useDispatch","uuid","useParams","languages","formLang","next","set","prev","createImages","items","uid","url","name","getLanguageFields","data","translations","result","map","item","_translations$find","_translations$find2","_translations$find3","locale","find","el","title","description","address","Object","assign","useEffect","restaurantService","then","res","_res$data","_res$data2","_res$data3","_res$data4","_res$data4$categories","_res$data5","logo_img","background_img","user","label","seller","firstname","lastname","value","id","delivery_time_from","delivery_time","from","delivery_time_to","to","delivery_time_type","type","recommended","mark","categories","_item$translation","translation","key","tags","_item$translation2","setMenuData","finally","disableRefetch","fetchRestaurant","_jsxs","Card","extra","_jsx","LanguageList","children","onChange","steps","Loading","className","content","RestaurantMain","action_type","Map","RestaurantDelivery","UserEdit"],"sourceRoot":""}