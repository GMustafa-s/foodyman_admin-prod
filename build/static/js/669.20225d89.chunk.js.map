{"version":3,"file":"static/js/669.20225d89.chunk.js","mappings":"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","sources":["components/global-container.js","components/language-list.js","helpers/getLanguageFields.js","helpers/getTranslationFields.js","views/payments/paymentEditModal.js","views/payments/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Card } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { addMenu } from '../redux/slices/menu';\nimport { PlusCircleOutlined } from '@ant-design/icons';\n\nconst GlobalContainer = ({\n  children,\n  containerName,\n  headerTitle,\n  subtitle,\n  navLInkTo,\n  buttonTitle,\n  state,\n}) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const addMenuItem = () => {\n    let url = '';\n    const linkArr = navLInkTo.split('');\n    if (linkArr[0] === '/') {\n      linkArr.shift();\n    }\n    url = linkArr.join('');\n    const data = { id: url, url, name: buttonTitle };\n    dispatch(addMenu(data));\n    navigate(navLInkTo);\n  };\n\n  return (\n    <div className={containerName}>\n      <Card\n        title={headerTitle}\n        extra={\n          buttonTitle ? (\n            <Button\n              type='primary'\n              icon={<PlusCircleOutlined />}\n              onClick={addMenuItem}\n            >\n              {buttonTitle}\n            </Button>\n          ) : null\n        }\n      >\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default GlobalContainer;\n","import React, { useEffect } from 'react';\nimport { Radio } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { setDefaultLanguage, setLangugages } from 'redux/slices/formLang';\nimport languagesService from 'services/languages';\n\nconst LanguageList = () => {\n  const dispatch = useDispatch();\n  const { languages, defaultLang } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n\n  const fetchLanguages = () => {\n    languagesService.getAllActive().then(({ data }) => {\n      dispatch(setLangugages(data));\n      dispatch(setDefaultLanguage(data.find((item) => !!item?.default).locale));\n    });\n  };\n\n  useEffect(() => {\n    fetchLanguages();\n  }, []);\n\n  const onChangeLanguage = ({ target: { value } }) => {\n    dispatch(setDefaultLanguage(value));\n  };\n\n  return (\n    <>\n      <Radio.Group\n        value={defaultLang}\n        onChange={onChangeLanguage}\n        className='float-right'\n        buttonStyle='solid'\n      >\n        {languages?.map((item) => {\n          return (\n            <Radio.Button value={item.locale} key={item.id}>\n              {item.title}\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </>\n  );\n};\n\nexport default LanguageList;\n","export default function getLanguageFields(languages, data, fields = ['title']) {\n  if (!data?.translations) {\n    return {};\n  }\n  const { translations } = data;\n  const getTranslations = (item, field) => {\n    const findItem = translations?.find((el) => el?.locale === item?.locale);\n    if (findItem) {\n      return findItem;\n    } else {\n      return {\n        [field]: '',\n      };\n    }\n  };\n  const result = languages.flatMap((item) =>\n    fields.flatMap((field) => ({\n      [`${field}[${item?.locale}]`]: getTranslations(item, field)[field],\n    })),\n  );\n\n  return Object.assign({}, ...result);\n}\n","export default function getTranslationFields(\n  languages,\n  values,\n  field = 'title',\n) {\n  const list = languages?.map((item) => ({\n    [item?.locale]: !values[`${field}[${item?.locale}]`]\n      ? undefined\n      : values[`${field}[${item?.locale}]`],\n  }));\n  return Object.assign({}, ...list);\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Form, Input, Modal, Row } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { setRefetch } from '../../redux/slices/menu';\nimport paymentService from '../../services/payment';\nimport Loading from '../../components/loading';\nimport LanguageList from '../../components/language-list';\nimport getTranslationFields from '../../helpers/getTranslationFields';\nimport getLanguageFields from '../../helpers/getLanguageFields';\n\nexport default function PaymentEditModal({ modal, handleCancel }) {\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { languages, defaultLang } = useSelector(\n    (state) => state.formLang,\n    shallowEqual\n  );\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  function fetchPayment(id) {\n    setLoading(true);\n    paymentService\n      .getById(id)\n      .then(({ data }) => {\n        const fields = ['title', 'client_title', 'secret_title'];\n        const translations = getLanguageFields(languages, data, fields);\n        form.setFieldsValue({ ...data, ...translations });\n      })\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    if (modal) {\n      fetchPayment(modal.id);\n    }\n  }, [modal]);\n\n  const onFinish = (values) => {\n    const params = {\n      client_id: values.client_id,\n      secret_id: values.secret_id,\n      title: getTranslationFields(languages, values, 'title'),\n      client_title: getTranslationFields(languages, values, 'client_title'),\n      secret_title: getTranslationFields(languages, values, 'secret_title'),\n    };\n    setLoadingBtn(true);\n    paymentService\n      .update(modal.id, params)\n      .then(() => {\n        handleCancel();\n        dispatch(setRefetch(activeMenu));\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Modal\n      visible={!!modal}\n      title={t('edit.payment')}\n      onCancel={handleCancel}\n      footer={[\n        <Button\n          type='primary'\n          onClick={() => form.submit()}\n          loading={loadingBtn}\n          key='save-btn'\n        >\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel} key='cancel-btn'>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      {!loading ? (\n        <>\n          <div className='d-flex justify-content-end'>\n            <LanguageList />\n          </div>\n          <Form form={form} layout='vertical' onFinish={onFinish}>\n            <Row gutter={12}>\n              <Col span={24}>\n                {languages.map((item) => (\n                  <Form.Item\n                    label={t('title')}\n                    name={`title[${item.locale}]`}\n                    rules={[\n                      {\n                        required: item.locale === defaultLang,\n                        message: t('required'),\n                      },\n                    ]}\n                    hidden={item.locale !== defaultLang}\n                  >\n                    <Input />\n                  </Form.Item>\n                ))}\n              </Col>\n              <Col span={24}>\n                {languages.map((item) => (\n                  <Form.Item\n                    label={t('client.title')}\n                    name={`client_title[${item.locale}]`}\n                    rules={[\n                      {\n                        required: item.locale === defaultLang,\n                        message: t('required'),\n                      },\n                    ]}\n                    hidden={item.locale !== defaultLang}\n                  >\n                    <Input />\n                  </Form.Item>\n                ))}\n              </Col>\n              <Col span={24}>\n                {languages.map((item) => (\n                  <Form.Item\n                    label={t('secret.title')}\n                    name={`secret_title[${item.locale}]`}\n                    rules={[\n                      {\n                        required: item.locale === defaultLang,\n                        message: t('requried'),\n                      },\n                    ]}\n                    hidden={item.locale !== defaultLang}\n                  >\n                    <Input />\n                  </Form.Item>\n                ))}\n              </Col>\n              <Col span={24}>\n                <Form.Item\n                  label={t('client.id')}\n                  name='client_id'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={24}>\n                <Form.Item\n                  label={t('secret.id')}\n                  name='secret_id'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </Modal>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Table, Switch } from 'antd';\nimport { Context } from '../../context/context';\nimport GlobalContainer from '../../components/global-container';\nimport CustomModal from '../../components/modal';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { fetchPayments } from '../../redux/slices/payment';\nimport { disableRefetch } from '../../redux/slices/menu';\nimport paymentService from '../../services/payment';\nimport { useTranslation } from 'react-i18next';\nimport PaymentEditModal from './paymentEditModal';\n\nexport default function Payments() {\n  const { t } = useTranslation();\n  const [id, setId] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const { setIsModalVisible } = useContext(Context);\n  const { payments, loading } = useSelector(\n    (state) => state.payment,\n    shallowEqual\n  );\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      title: t('title'),\n      dataIndex: 'tag',\n      key: 'tag',\n    },\n    {\n      title: t('active'),\n      dataIndex: 'active',\n      key: 'active',\n      render: (active, row) => {\n        return (\n          <Switch\n            onChange={() => {\n              setIsModalVisible(true);\n              setId(row.id);\n            }}\n            checked={active}\n          />\n        );\n      },\n    },\n    // {\n    //   title: t('options'),\n    //   key: 'options',\n    //   render: (options, row) => (\n    //     <Space>\n    //       <Button\n    //         type='primary'\n    //         icon={<EditOutlined />}\n    //         onClick={() => setModal(row)}\n    //       />\n    //     </Space>\n    //   ),\n    // },\n  ];\n\n  function setActivePayments() {\n    setLoadingBtn(true);\n    paymentService\n      .setActive(id)\n      .then(() => {\n        setIsModalVisible(false);\n        setId(null);\n        dispatch(fetchPayments());\n      })\n      .finally(() => setLoadingBtn(false));\n  }\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchPayments());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  return (\n    <GlobalContainer headerTitle={t('payments')}>\n      <Table\n        scroll={{ x: true }}\n        columns={columns}\n        dataSource={payments}\n        rowKey={(record) => record.id}\n        loading={loading}\n        pagination={false}\n      />\n      <CustomModal\n        click={setActivePayments}\n        text={t('set.active.payment')}\n        loading={loadingBtn}\n      />\n      {modal && (\n        <PaymentEditModal modal={modal} handleCancel={() => setModal(null)} />\n      )}\n    </GlobalContainer>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);"],"names":["_ref","children","containerName","headerTitle","subtitle","navLInkTo","buttonTitle","state","dispatch","useDispatch","navigate","useNavigate","_jsx","className","Card","title","extra","Button","type","icon","PlusCircleOutlined","onClick","addMenuItem","url","linkArr","split","shift","join","data","id","name","addMenu","LanguageList","languages","defaultLang","useSelector","formLang","shallowEqual","useEffect","languagesService","then","setLangugages","setDefaultLanguage","find","item","default","locale","_Fragment","Radio","value","onChange","_ref2","target","buttonStyle","map","getLanguageFields","fields","arguments","length","undefined","translations","getTranslations","field","findItem","el","result","flatMap","Object","assign","getTranslationFields","values","list","PaymentEditModal","modal","handleCancel","activeMenu","menu","form","Form","t","useTranslation","loading","setLoading","useState","loadingBtn","setLoadingBtn","paymentService","setFieldsValue","finally","Modal","visible","onCancel","footer","submit","Loading","_jsxs","layout","onFinish","params","client_id","secret_id","client_title","secret_title","setRefetch","Row","gutter","Col","span","label","rules","required","message","hidden","Input","Payments","setId","setModal","setIsModalVisible","useContext","Context","payments","payment","columns","dataIndex","key","render","active","row","Switch","checked","refetch","fetchPayments","disableRefetch","GlobalContainer","Table","scroll","x","dataSource","rowKey","record","pagination","CustomModal","click","text","props","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName"],"sourceRoot":""}