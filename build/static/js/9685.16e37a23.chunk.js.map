{"version":3,"file":"static/js/9685.16e37a23.chunk.js","mappings":"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","sources":["components/forms/booking-time-form.js","components/shop/weeks.js","services/seller/bookingClosedDays.js","services/seller/bookingWorkingDays.js","views/seller-views/booking-time/time-edit.js","../node_modules/antd/es/time-picker/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  InputNumber,\n  Row,\n  Space,\n  Switch,\n  Tag,\n  TimePicker,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { BsChevronCompactDown, BsChevronCompactUp } from 'react-icons/bs';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { DayPicker } from 'react-day-picker';\n\nconst BookingTimeForm = ({\n  onFinish,\n  form,\n  lines,\n  loadingBtn,\n  days,\n  setDays,\n  setLines,\n  weeks,\n}) => {\n  const { t } = useTranslation();\n  const deleteDay = (e) => setDays(days.filter((item) => item !== e));\n  const disabledDays = [{ from: new Date(1900, 4, 18), to: new Date() }];\n  const [list, setList] = useState(true);\n\n  const footer =\n    days && days.length > 0 ? (\n      <Row>\n        <Tag\n          style={{\n            fontSize: 14,\n            padding: '4px 10px',\n            width: '100%',\n            marginTop: '10px',\n          }}\n        >\n          {t('Your.existing.vacations')}\n        </Tag>\n        <Col span={24} className='mt-2'>\n          {days.slice(0, list ? 1 : days.length).map((item, index) => (\n            <Space\n              key={index}\n              className='d-flex justify-content-between'\n              style={{ borderBottom: '1px solid #4D5B75' }}\n            >\n              <Col span={24} style={{ fontSize: 14, marginTop: '8px' }}>\n                {moment(item).format('YYYY-MM-DD')}\n              </Col>\n              <Col span={24}>\n                <Tag\n                  color='red'\n                  className='cursor-pointer mt-3 mb-2'\n                  style={{ fontSize: 14 }}\n                  onClick={() => deleteDay(item)}\n                >\n                  {t('remove')}\n                </Tag>\n              </Col>\n            </Space>\n          ))}\n          <Button\n            className='mt-3 w-100'\n            onClick={() => {\n              setList(!list);\n            }}\n          >\n            {list ? <BsChevronCompactDown /> : <BsChevronCompactUp />}\n          </Button>\n        </Col>\n      </Row>\n    ) : (\n      <Tag style={{ fontSize: 14, padding: '4px 10px', width: '100%' }}>\n        Please pick one or more days.\n      </Tag>\n    );\n\n  const handleChange = (idx) => {\n    const newLines = [...lines];\n    newLines[idx] = !lines[idx];\n    setLines(newLines);\n  };\n\n  const middle = (start, end) => {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  };\n\n  const disabledDateTime = () => ({\n    disabledHours: () => middle(0, 1),\n    disabledMinutes: () => middle(0, 0),\n    disabledSeconds: () => middle(0, 60),\n  });\n  return (\n    <Form form={form} layout='vertical' onFinish={onFinish}>\n      <Row gutter={12}>\n        <Col span={12}>\n          <Form.Item\n            label={t('max.time')}\n            name='max_time'\n            rules={[\n              { required: true, message: t('required') },\n              {\n                type: 'number',\n                min: 1,\n                max: 24,\n                message: t('must.be.between.1.and.24'),\n              },\n            ]}\n          >\n            <InputNumber className='w-100' />\n          </Form.Item>\n        </Col>\n        <Col span={12} />\n        <Col span={12}>\n          <Card title={t('booking.working.days')}>\n            <Row gutter={8}>\n              <Col span={24}>\n                <Form.List name='working_days'>\n                  {(fields) => {\n                    return (\n                      <div>\n                        {fields.map((field, index) => (\n                          <Row key={field.key} gutter={12} align='center'>\n                            <Col span={7}>\n                              <Form.Item name={[index, 'day']}>\n                                <span>{t(weeks[index].title)}</span>\n                              </Form.Item>\n                            </Col>\n                            {lines[field.key] ? (\n                              <Col span={13} className='mt-2'>\n                                <span>{t('shop.closed')}</span>\n                              </Col>\n                            ) : (\n                              <>\n                                <Col span={7}>\n                                  <Form.Item\n                                    rules={[\n                                      {\n                                        required: lines[field.key] === false,\n                                      },\n                                    ]}\n                                    name={[index, 'from']}\n                                  >\n                                    <TimePicker\n                                      disabledTime={disabledDateTime}\n                                      picker='time'\n                                      placeholder={t('start.time')}\n                                    />\n                                  </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                  <Form.Item\n                                    rules={[\n                                      {\n                                        required: lines[field.key] === false,\n                                      },\n                                    ]}\n                                    name={[index, 'to']}\n                                  >\n                                    <TimePicker\n                                      disabledTime={disabledDateTime}\n                                      picker='time'\n                                      placeholder={t('end.time')}\n                                    />\n                                  </Form.Item>\n                                </Col>\n                              </>\n                            )}\n                            <Col span={4}>\n                              <Form.Item\n                                name={[index, 'disabled']}\n                                valuePropName='checked'\n                              >\n                                <Switch\n                                  checkedChildren={<CheckOutlined />}\n                                  unCheckedChildren={<CloseOutlined />}\n                                  checked={lines[field.key]}\n                                  onChange={() => handleChange(field.key)}\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                        ))}\n                      </div>\n                    );\n                  }}\n                </Form.List>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title={t('booking.closed.days')}>\n            <p>{t('booking.closed.days.text')}</p>\n            <Form.Item rules={[{ required: false, message: t('required') }]}>\n              <DayPicker\n                className='datepicker'\n                mode='multiple'\n                disabled={disabledDays}\n                min={1}\n                selected={days}\n                onSelect={setDays}\n                footer={footer}\n                showOutsideDays\n              />\n            </Form.Item>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Space>\n            <Button type='primary' htmlType='submit' loading={loadingBtn}>\n              {t('save')}\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default BookingTimeForm;\n","import moment from 'moment';\n\nexport const weeks = [\n  {\n    title: 'monday',\n    disabled: false,\n    from: moment('01:00:00', 'HH:mm:ss'),\n    to: moment('23:00:00', 'HH:mm:ss'),\n  },\n  {\n    title: 'tuesday',\n    disabled: false,\n    from: moment('01:00:00', 'HH:mm:ss'),\n    to: moment('23:00:00', 'HH:mm:ss'),\n  },\n  {\n    title: 'wednesday',\n    disabled: false,\n    from: moment('01:00:00', 'HH:mm:ss'),\n    to: moment('23:00:00', 'HH:mm:ss'),\n  },\n  {\n    title: 'thursday',\n    disabled: false,\n    from: moment('01:00:00', 'HH:mm:ss'),\n    to: moment('23:00:00', 'HH:mm:ss'),\n  },\n  {\n    title: 'friday',\n    disabled: false,\n    from: moment('01:00:00', 'HH:mm:ss'),\n    to: moment('23:00:00', 'HH:mm:ss'),\n  },\n  {\n    title: 'saturday',\n    disabled: false,\n    from: moment('01:00:00', 'HH:mm:ss'),\n    to: moment('23:00:00', 'HH:mm:ss'),\n  },\n  {\n    title: 'sunday',\n    disabled: false,\n    from: moment('01:00:00', 'HH:mm:ss'),\n    to: moment('23:00:00', 'HH:mm:ss'),\n  },\n];\n","import request from '../request';\n\nconst bookingClosedDays = {\n  getById: (id) =>\n    request.get(`dashboard/seller/booking/shop-closed-dates/${id}`),\n  create: (data) =>\n    request.post(`dashboard/seller/booking/shop-closed-dates`, data, {}),\n  update: (id, data) =>\n    request.put(`dashboard/seller/booking/shop-closed-dates/${id}`, data, {}),\n  delete: (params) =>\n    request.delete(`dashboard/seller/booking/shop-closed-dates/delete`, {\n      params,\n    }),\n};\n\nexport default bookingClosedDays;\n","import request from '../request';\n\nconst bookingWorkingDays = {\n  getById: (id) =>\n    request.get(`dashboard/seller/booking/shop-working-days/${id}`),\n  create: (data) =>\n    request.post(`dashboard/seller/booking/shop-working-day`, data, {}),\n  update: (id, data) =>\n    request.put(`dashboard/seller/booking/shop-working-days/${id}`, data, {}),\n  delete: (params) =>\n    request.delete(`dashboard/seller/booking/shop-working-days`, { params }),\n};\n\nexport default bookingWorkingDays;\n","import React, { useState, useEffect } from 'react';\nimport Loading from 'components/loading';\nimport moment from 'moment';\nimport { weeks } from 'components/shop/weeks';\nimport BookingTimeForm from 'components/forms/booking-time-form';\nimport { Form } from 'antd';\nimport sellerBookingTime from 'services/seller/booking-time';\nimport bookingClosedDays from 'services/seller/bookingClosedDays';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport bookingWorkingDays from 'services/seller/bookingWorkingDays';\nimport { useDispatch } from 'react-redux';\nimport { disableRefetch, removeFromMenu } from 'redux/slices/menu';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { fetchBookingTime } from 'redux/slices/booking-time';\n\nconst BookingTimeEdit = () => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const [days, setDays] = useState([]);\n  const [lines, setLines] = useState(new Array(7).fill(false));\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { myShop } = useSelector((state) => state.myShop, shallowEqual);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    const closeDatesBody = {\n      dates: days\n        ? days.map((item) => moment(item).format('YYYY-MM-DD'))\n        : undefined,\n    };\n\n    const workingDaysBody = {\n      dates: values.working_days.map((item) => ({\n        day: item.title,\n        from: moment(item.from ? item.from : '00').format('HH-mm'),\n        to: moment(item.to ? item.to : '00').format('HH-mm'),\n        disabled: item.disabled,\n      })),\n    };\n\n    const workingMaxTime = {\n      max_time: values.max_time,\n    };\n    const nextUrl = 'seller/booking/time';\n\n    Promise.all([\n      sellerBookingTime.create(workingMaxTime),\n      bookingClosedDays.update(myShop.uuid, closeDatesBody),\n      values.working_days.length !== 0\n        ? bookingWorkingDays.update(myShop.uuid, workingDaysBody)\n        : undefined,\n    ]).then(() => {\n      toast.success(t('successfully.updated'));\n      dispatch(fetchBookingTime({}));\n      dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  const getDays = () => {\n    setLoading(true);\n    sellerBookingTime\n      .getAll()\n      .then((res) => {\n        form.setFieldsValue({\n          max_time: res.data.max_time,\n        });\n      })\n      .finally(() => {\n        dispatch(disableRefetch(activeMenu));\n        setLoading(false);\n      });\n\n    bookingClosedDays\n      .getById(myShop.uuid)\n      .then((res) => {\n        setDays(\n          res.data.booking_shop_closed_date\n            .filter(\n              (date) => date?.day > moment(new Date()).format('YYYY-MM-DD'),\n            )\n            .map((itm) => new Date(itm?.day)),\n        );\n      })\n      .finally(() => {\n        dispatch(disableRefetch(activeMenu));\n        setLoading(false);\n      });\n\n    bookingWorkingDays\n      .getById(myShop.uuid)\n      .then((res) => {\n        setLines(\n          res.data.dates.length !== 0\n            ? res.data.dates.map((item) => item.disabled)\n            : [],\n        );\n\n        res.data.dates.length !== 0 &&\n          form.setFieldsValue({\n            working_days: res.data.dates.map((item) => ({\n              title: item.day,\n              from: moment(item.from, 'HH:mm:ss'),\n              to: moment(item.to, 'HH:mm:ss'),\n              disabled: Boolean(item.disabled),\n            })),\n          });\n      })\n      .finally(() => {\n        dispatch(disableRefetch(activeMenu));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      working_days: weeks,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      getDays();\n    }\n  }, [activeMenu.refetch]);\n\n  return (\n    <>\n      {!loading ? (\n        <BookingTimeForm\n          onFinish={onFinish}\n          form={form}\n          lines={lines}\n          loadingBtn={loadingBtn}\n          days={days}\n          setDays={setDays}\n          setLines={setLines}\n          weeks={weeks}\n        />\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default BookingTimeEdit;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport DatePicker from '../date-picker';\nimport warning from '../_util/warning';\nvar InternalTimePicker = DatePicker.TimePicker,\n    InternalRangePicker = DatePicker.RangePicker;\nvar RangePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(InternalRangePicker, _extends({}, props, {\n    dropdownClassName: props.popupClassName,\n    picker: \"time\",\n    mode: undefined,\n    ref: ref\n  }));\n});\nvar TimePicker = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var addon = _a.addon,\n      renderExtraFooter = _a.renderExtraFooter,\n      popupClassName = _a.popupClassName,\n      restProps = __rest(_a, [\"addon\", \"renderExtraFooter\", \"popupClassName\"]);\n\n  var internalRenderExtraFooter = React.useMemo(function () {\n    if (renderExtraFooter) {\n      return renderExtraFooter;\n    }\n\n    if (addon) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'TimePicker', '`addon` is deprecated. Please use `renderExtraFooter` instead.') : void 0;\n      return addon;\n    }\n\n    return undefined;\n  }, [addon, renderExtraFooter]);\n  return /*#__PURE__*/React.createElement(InternalTimePicker, _extends({}, restProps, {\n    dropdownClassName: popupClassName,\n    mode: undefined,\n    ref: ref,\n    renderExtraFooter: internalRenderExtraFooter\n  }));\n});\nTimePicker.displayName = 'TimePicker';\nTimePicker.RangePicker = RangePicker;\nexport default TimePicker;"],"names":["_ref","onFinish","form","lines","loadingBtn","days","setDays","setLines","weeks","t","useTranslation","disabledDays","from","Date","to","list","setList","useState","footer","length","_jsxs","Row","children","_jsx","Tag","style","fontSize","padding","width","marginTop","Col","span","className","slice","map","item","index","Space","borderBottom","moment","format","color","onClick","deleteDay","e","filter","Button","BsChevronCompactDown","BsChevronCompactUp","middle","start","end","result","i","push","disabledDateTime","disabledHours","disabledMinutes","disabledSeconds","Form","layout","gutter","label","name","rules","required","message","type","min","max","InputNumber","Card","title","fields","field","align","key","_Fragment","TimePicker","disabledTime","picker","placeholder","valuePropName","Switch","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","checked","onChange","idx","newLines","handleChange","DayPicker","mode","disabled","selected","onSelect","showOutsideDays","htmlType","loading","getById","id","request","create","data","update","delete","params","BookingTimeEdit","Array","fill","setLoadingBtn","setLoading","myShop","useSelector","state","shallowEqual","activeMenu","menu","dispatch","useDispatch","navigate","useNavigate","useEffect","setFieldsValue","working_days","refetch","sellerBookingTime","then","res","max_time","finally","disableRefetch","bookingClosedDays","uuid","booking_shop_closed_date","date","day","itm","bookingWorkingDays","dates","Boolean","Loading","BookingTimeForm","values","closeDatesBody","undefined","workingDaysBody","workingMaxTime","nextUrl","Promise","all","toast","fetchBookingTime","removeFromMenu","__rest","s","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","InternalTimePicker","DatePicker","InternalRangePicker","RangePicker","React","props","ref","_extends","dropdownClassName","popupClassName","_a","addon","renderExtraFooter","restProps","internalRenderExtraFooter","displayName"],"sourceRoot":""}