{"version":3,"file":"static/js/8368.1e41afca.chunk.js","mappings":"iWAoBA,MAAMA,EAAU,CACd,CAAEC,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,SAAUC,MAAO,WAGb,SAASC,IACtB,MAAOC,GAAQC,EAAAA,EAAAA,WACT,EAAEC,IAAMC,EAAAA,EAAAA,MACPC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,MAC3BG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,KACpD,gBAAEC,IAAoBJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMI,KAAKF,EAAAA,IA+B9D,OACEG,EAAAA,EAAAA,KAACnB,EAAAA,EAAI,CAACD,KAAMA,EAAMqB,OAAO,WAAWC,SA9BpBC,IAChBC,QAAQC,IAAI,QAASF,GACrBlB,GAAc,GACd,MAAMqB,EAAO,CACXnB,KAAMA,EACNoB,QAASC,OAAOL,EAAOI,SACvBE,QAAS,CACPtB,UAAMuB,EACNH,aAASG,KACNP,IAGDQ,EAAU,uBAEhBC,EAAAA,EAAAA,OACUN,GACPO,MAAK,MACJC,EAAAA,EAAAA,KAAM,KACJzB,GAAS0B,EAAAA,EAAAA,MACT1B,GAAS2B,EAAAA,EAAAA,IAAe,IAAKvB,EAAYkB,QAAAA,QAE3CM,EAAAA,GAAAA,QAAcnC,EAAE,yBAChBS,EAAS,IAAIoB,QAEdO,SAAQ,IAAMjC,GAAc,MAMwBkC,UACrDC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAC5C,MAAOK,EAAE,mBAAmBqC,SAAA,EAChCC,EAAAA,EAAAA,MAACE,EAAAA,EAAG,CAACC,OAAQ,GAAGJ,SAAA,EACdnB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,eACT6C,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CACLC,UAAU,QACVC,SAlBQtD,GAAUU,EAAQV,GAmB1BF,QAASA,EAAQyD,QACdC,IAAOpC,EAAgBqC,MAAMC,GAAMA,EAAEjD,OAAS+C,EAAExD,gBAM/C,aAATS,IACCiC,EAAAA,EAAAA,MAAAiB,EAAAA,SAAA,CAAAlB,SAAA,EACEnB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,mBACTwD,KAAK,kBACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,WACTwD,KAAK,UACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,UACTwD,KAAK,SACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,eACTwD,KAAK,cACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,eACTwD,KAAK,cACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,kBACTwD,KAAK,iBACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,qBACTwD,KAAK,oBACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,cACTwD,KAAK,aACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,cACTwD,KAAK,aACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,kBACTwD,KAAK,iBACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,aACTwD,KAAK,YACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,WACTwD,KAAK,UACLE,cAAc,UAASrB,UAEvBnB,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,WAML,WAATtD,IACCiC,EAAAA,EAAAA,MAAAiB,EAAAA,SAAA,CAAAlB,SAAA,EACEnB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,qBACTwD,KAAK,oBACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACG,IAAK,EAAGX,UAAU,eAI7B/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,qBACTwD,KAAK,oBACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,iBACTwD,KAAK,gBACLX,MAAO,CACL,CACEC,UAAU,EACVC,QAAS/C,EAAE,cAEbqC,UAEFnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACR,UAAU,eAIrB/B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGN,UACZnB,EAAAA,EAAAA,KAACnB,EAAAA,EAAAA,KAAS,CACR6C,MAAO5C,EAAE,WACTwD,KAAK,UACLE,cAAc,UAASrB,UAEvBnB,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,eAOjBzC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAK,CAAAxB,UACJnB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,CAACzD,KAAK,UAAU0D,SAAS,SAASC,QAAS9D,EAAWmC,SAC1DrC,EAAE","sources":["views/sms-payload/sms-add.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Space,\n  Select,\n  Switch,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport smsService from '../../services/smsPayloads';\nimport { fetchSms } from '../../redux/slices/sms-geteways';\nimport { batch, shallowEqual, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { removeFromMenu } from '../../redux/slices/menu';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nconst options = [\n  { title: 'firebase', value: 'firebase' },\n  { title: 'twilio', value: 'twilio' },\n];\n\nexport default function SmsPayloadAdd() {\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [type, setType] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { smsGatewaysList } = useSelector((state) => state.sms, shallowEqual);\n\n  const onFinish = (values) => {\n    console.log('value', values);\n    setLoadingBtn(true);\n    const data = {\n      type: type,\n      default: Number(values.default),\n      payload: {\n        type: undefined,\n        default: undefined,\n        ...values,\n      },\n    };\n    const nextUrl = 'settings/sms-payload';\n\n    smsService\n      .create(data)\n      .then(() => {\n        batch(() => {\n          dispatch(fetchSms());\n          dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        });\n        toast.success(t('successfully.created'));\n        navigate(`/${nextUrl}`);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const handleChange = (value) => setType(value);\n\n  return (\n    <Form form={form} layout='vertical' onFinish={onFinish}>\n      <Card title={t('add.sms.payload')}>\n        <Row gutter={12}>\n          <Col span={12}>\n            <Form.Item\n              label={t('select.type')}\n              rules={[\n                {\n                  required: true,\n                  message: t('required'),\n                },\n              ]}\n            >\n              <Select\n                className='w-100'\n                onChange={handleChange}\n                options={options.filter(\n                  (i) => !smsGatewaysList.some((e) => e.type === i.value),\n                )}\n              />\n            </Form.Item>\n          </Col>\n\n          {type === 'firebase' && (\n            <>\n              <Col span={12}>\n                <Form.Item\n                  label={t('android_api_key')}\n                  name='android_api_key'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('api_key')}\n                  name='api_key'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('app_id')}\n                  name='app_id'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('auth_domain')}\n                  name='auth_domain'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('ios_api_key')}\n                  name='ios_api_key'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('measurement_id')}\n                  name='measurement_id'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('message_sender_id')}\n                  name='message_sender_id'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('project_id')}\n                  name='project_id'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('server_key')}\n                  name='server_key'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('storage_bucket')}\n                  name='storage_bucket'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('vapid_key')}\n                  name='vapid_key'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('default')}\n                  name='default'\n                  valuePropName='checked'\n                >\n                  <Switch />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n\n          {type === 'twilio' && (\n            <>\n              <Col span={12}>\n                <Form.Item\n                  label={t('twilio_auth_token')}\n                  name='twilio_auth_token'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input min={0} className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('twilio_account_id')}\n                  name='twilio_account_id'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('twilio_number')}\n                  name='twilio_number'\n                  rules={[\n                    {\n                      required: true,\n                      message: t('required'),\n                    },\n                  ]}\n                >\n                  <Input className='w-100' />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label={t('default')}\n                  name='default'\n                  valuePropName='checked'\n                >\n                  <Switch />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n        </Row>\n\n        <Space>\n          <Button type='primary' htmlType='submit' loading={loadingBtn}>\n            {t('submit')}\n          </Button>\n        </Space>\n      </Card>\n    </Form>\n  );\n}\n"],"names":["options","title","value","SmsPayloadAdd","form","Form","t","useTranslation","loadingBtn","setLoadingBtn","useState","type","setType","dispatch","useDispatch","navigate","useNavigate","activeMenu","useSelector","state","menu","shallowEqual","smsGatewaysList","sms","_jsx","layout","onFinish","values","console","log","data","default","Number","payload","undefined","nextUrl","smsService","then","batch","fetchSms","removeFromMenu","toast","finally","children","_jsxs","Card","Row","gutter","Col","span","label","rules","required","message","Select","className","onChange","filter","i","some","e","_Fragment","name","Input","valuePropName","Switch","min","Space","Button","htmlType","loading"],"sourceRoot":""}