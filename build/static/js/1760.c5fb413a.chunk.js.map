{"version":3,"file":"static/js/1760.c5fb413a.chunk.js","mappings":"8GAAA,IAAiDA,EAAAA,EASxC,WACT,Y,6DCTA,IAAIC,EAAO,MACX,8FAEA,OACA,YAIK,IAAIC,EAAqDC,EAAJ,EAC1D,SAASC,IAAK,SAASC,EAAEC,GAAG,MAAMC,EAAN,EAAUC,EAAAA,EAAAA,EAAMC,EAAAA,IAAAA,IAAUF,EAAEG,SAAQC,IAAI,IAAIA,EAAEL,GAAG,SAASM,QAAQC,MAAMC,OAAMC,KAAKC,KAAKC,GAAAA,EAAAA,KAAU,IAAIC,EAAJ,EAAAV,EAAAA,EAAAC,EAAAA,IAAAA,IAAAQ,EAAAA,KAAAE,EAAAA,KAAoCJ,KAAKK,sBAAL,YAAuCF,IAAAA,EAAAA,sBAAAA,EAAAA,KAAAA,QAA2C,MAAMX,IAANC,EAAuB,OAAXC,EAAEY,IAAId,EAANE,GAAkBF,GAAGQ,KAAKO,qBAAL,YAAsCb,EAAEc,OAAOjB,GAAGY,GAAAA,GAAAA,EAAAA,OAAAA,qBAAAA,GAAAA,EAAAA,IAA6CH,KAAKS,GAAL,YAAoBL,IAAAA,SAAAA,KAAAA,OAAAA,GAAAA,EAAAA,MAAoCb,IAAAA,EAAAA,SAAAA,cAAAA,OAAAA,EAAAA,MAAAA,gBAAAA,QAAAA,EAAAA,MAAAA,SAC5a,uHAAuHa,EAAEM,UAAFN,YAAAA,EAAAA,QAAAA,IAAqC,8BAA+BF,EAAAA,IAAAA,WAAiB,IAAIV,EAAJ,EAAAI,EAAAA,EAAYI,KAAKW,GAAL,WAAmB,IAAIZ,EAAJ,kBAAwBH,KAAAA,EAAAA,KAAAA,GAAAA,KAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,MAAoDI,KAAKY,GAAL,WAAmBR,IAAAA,SAAAA,KAAAA,OAAAA,GAAAA,EAAAA,MAAoCF,EAAAA,MAAQF,KAAKC,GAAL,aACtX,SAASY,EAAGvB,GAAGO,QAAQiB,QAAO,GAAI,MAAMX,EAAN,QAAgB,IAAIV,GAAJ,IAAgBO,KAAKe,KAAL,YAAsN,OAAhMrB,EAAAA,IAAAA,GAAAA,GAAAA,IAAAA,EAAkBS,EAAEa,IAAItB,IAANS,aAAAA,EAAAA,IAAAA,IAAiCA,EAAEG,IAAIZ,EAANS,YAAAA,WAA8BA,EAAEK,OAAOd,GAAG,yEAA4E,MAAOD,EAAAA,KAAAA,IAAAA,EAAAA,GAAuBA,GAAP,GANxRP,EAAAA,GAAAA,GAGWC,IAAAA,EAAAA,qBAAAA,EAAAA,EAAAA,IAAyDA,EAAE8B,MAAF9B,IAAAA,SAAAA,SAAAA,EAAAA,GAAkCC,EAAAA,EAAK8B,EAAAA,KAI3G,MAAMC,EAAN,eAAwB,SAAS7B,IAAI,OAAO,IAAI8B,EAAJ,iCAAAC,EAAAA,CAA0CC,MAAAA,EAAAC,MAAAA,EAAAC,QAAAA,EAAAC,UAAAA,EAAAC,mBAAAA,EAAAC,sBAAAA,EAAAC,gCAAAA,EAAAC,6BAAAA,EAAAC,0BAAAA,EAAAC,oBAAAA,EAAAC,6BAAAA,GAAsO,IAAIC,EAAJ,yBAA+B,aAAc,MAAL,2BAA2C,OAAOpC,QAAQqC,IAAI,oDAAxB,EAAtC,IAChU,SAASC,EAAEC,EAAX,KAAqG,GAAnFC,EAAAA,EAAAA,aAAAA,GAAoBJ,EAAEK,aAAaD,EAAfJ,GAAoBA,EAAEM,cAAcF,GAA2B,GAAxBG,EAAAA,EAAAA,iBAAAA,IAAwB,eAAsBP,EAAEQ,aAAaL,EAAfH,GACqL,GAFoIvC,EAAAA,KAAAA,IAAAA,EAAAA,aAAAA,EAAAA,uBACxduC,EAAES,aAAaT,EAAEU,mBAAsLR,EAApBf,EAAAA,EAAAA,gBAAoBe,EAAAA,cAAAA,2UACvMA,EAAEf,EAAFe,EAAAA,gBAAAA,kNAAwOF,EAAEW,mBAAmBxB,EAArBa,EAAAA,UAAmCA,EAAEW,mBAAmBxB,EAArBa,EAAAA,MAA+BA,EAAEY,YAAYzB,GAA4B,GAAzBC,EAAAA,EAAAA,kBAAAA,IAAyB,eAAsBnB,EAAAA,EAAAA,mBAAAA,EAAAA,OAAgCE,EAAAA,EAAAA,mBAAAA,EAAAA,aAAsC6B,EAAEa,WAAW1B,GAAGa,EAAEc,WAAWd,EAAEe,aAAff,EAAAA,gBAA8CA,EAAEgB,wBAAwB,GACxgBhB,EAAEgB,wBAAwB,GAAGhB,EAAEc,WAAWd,EAAEiB,qBAAfjB,EAAAA,gBAAsDA,EAAEkB,UAAUlB,EAAEmB,mBAAmBhC,EAAjCa,SAAAA,GAA+CA,EAAEoB,YAAYpB,EAAEqB,gCAAhBrB,GAAmD9B,EAAAA,EAAI,SAAS,IAAIA,EAAJ,KAAAV,EAAAA,EAAAC,EAAAA,EAAAQ,EAAAA,KAAAE,EAAAA,KAAAb,EAAAA,EAAAC,EAAAA,EAAyCQ,KAAKuD,GAAL,WAAuB,OAAJjE,IAAWI,GAAGM,KAAKwD,GAAL,SAAApC,GAAoB,oBAAoB,MAAMC,EAAN,kBAC1C,OADoElB,EAAEsD,YAAYtD,EAAEuD,WAAhBvD,GAA8BA,EAAEwD,WAAWxD,EAAEuD,WAAfvD,EAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,cAAAA,GAA6DA,EAAEyD,cAAczD,EAAEuD,WAAlBvD,EAAAA,eAAAA,EAAAA,eAA+DA,EAAEyD,cAAczD,EAAEuD,WAC1fvD,EAAE0D,eAAF1D,EAAAA,eAAkCA,EAAEyD,cAAczD,EAAEuD,WAAlBvD,EAAAA,mBAAAA,EAAAA,QAA4D,4KAAmLkB,GAAG,MAAMzB,EAAN,SAAAG,EAAAA,IAAAA,EAAAA,GAAA+D,EAAAA,IAAAA,EAAAA,IAAAC,EAAAA,IAAAA,EAAAA,IAAwD/D,KAAKgE,GAAL,SAAA5C,EAAA,SAA4B,QAAQ,IAAIiB,EAAJ,UAAAG,EAAAA,EAAAA,KAAAA,GAC9L,aAD0N,4EAA4ErC,EAAE8D,SAAS,EAAX9D,EAAAA,EAAAA,EAAAA,GAAsBA,EAAE+D,QAAQ/D,EAAEgE,cAC1fhE,EAAEiE,WAAW,EAAbjE,EAAAA,EAAAA,GAAsBA,EAAEkE,MAAMlE,EAAEmE,kBAAkBnE,EAAEoE,OAAOpE,EAAEgE,cAAclC,EAAEuC,MAAK,CAACC,EAARxC,IAAAA,EAAAA,GAAAA,EAAAA,KAA2BI,EAAAA,EAAAA,KAAAA,GAAY9C,GAAAA,IAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,EAAAA,cAAAA,EAAAA,GAA4D8C,EAAAA,EAAI,2DAA8F,aAAvBxC,QAAQiB,OAAOuB,GAAfxC,EAAAA,GAAuB,2DAAkL,aAA3GA,QAAQiB,OAAOuB,GAAfxC,EAAAA,GAAuBwC,EAAAA,EAAAA,KAAAA,GAAY7C,GAAAA,IAAAA,EAAAA,WAAAA,EAAAA,qBAAAA,EAAAA,EAAAA,EAAAA,cAAAA,EAAAA,GAAoEkF,EAAAA,EAAI,0CAClcA,EAAAA,EAAAA,SAAAA,GAAAA,EAAAA,EAAAA,QAAAA,OAAmC7E,QAAQiB,OAAO4D,GAAf7E,EAAAA,GAAuB8E,EAAAA,EAAIC,GAAAA,EAAKvC,EAAAA,EAAAA,EAAM,kBAAkBoC,EAAEI,MAAMC,IAARL,IAAAA,EAAAA,YAAAA,EAAAA,WAAAA,EAAAA,MAAAA,IAAAA,MAAAA,EAAAA,EAAAA,MAAAA,IAA2EA,EAAEM,IAAFN,EAAAA,QAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,GAAAA,GAAAA,IAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAiFxC,EAAAA,EAAAA,EAAM,MAAM+C,GAAN,IAAc7E,EAAE8E,UAAU/E,EAAZC,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,IAA6EA,EAAE+E,UAAU9E,EAAZD,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,GAAyFA,EAAEgF,oBAAoB,EAAtBhF,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAA0CA,EAAEgF,oBAAoB,EAAtBhF,EAC3dA,EAAEiF,OAAFjF,EAAAA,EAAAA,EAAAA,EAAAA,GAAoBA,EAAEkF,aAAalF,EAAEmF,UAAjBnF,EAAAA,QAAAA,OAAAA,EAAAA,eAAAA,GAAgEkC,GAAAA,EAAAA,EAAAA,GAAAA,OAAiBqC,GAAAA,EAAAA,EAAAA,QAAAA,OAAsB7E,QAAQiB,OAAOuB,GAAfxC,EAAAA,GAAuBA,QAAQiB,OAAO4D,GAAf7E,EAAAA,KAAyBG,KAAKuF,OAAL,WAAuB,OAAOjG,KAAP,WAClMJ,EAAKsG,qBAALtG,WAAqC,SAASI,EAAEmG,GAAG,UAAU,KAAK1F,EAAE2F,QAAP,oBAAmC,KAAK3F,EAAE4F,OAAP,eAA6B,KAAK5F,EAAE6F,QAAP,gBAA+B,KAAK7F,EAAE8F,OAAP,eAA6B,KAAK9F,EAAE+F,QAAP,gBAA+B,KAAK/F,EAAEgG,WAAP,oBAAsC,KAAKhG,EAAEiG,UAAP,mBAAoC,KAAKjG,EAAEkG,UAAP,mBAAoC,KAAKlG,EAAEmG,UAAP,mBAAoC,KAAKnG,EAAEoG,WAAP,mBAAqC,KAAKpG,EAAEqG,UAAP,kBAAmC,KAAKrG,EAAEsG,SAAP,iBAAiC,KAAKtG,EAAEuG,IAAP,YAAuB,KAAKvG,EAAEwG,WAAP,mBAC1e,KAAKxG,EAAEyG,MAAP,cAA2B,KAAKzG,EAAE0G,WAAP,oBAAsC,SAAStG,EAAEsF,GAAG,0GAA0G,SAAShG,IAAI,mFAAoF,kBAAkB,wBAAwBgG,EAAET,GAAFS,GAAQpD,EAAEgC,QAAQ,IAAI3E,EAAJ,mBAA4B,MAAMQ,EAAN,aAAAE,EAAAA,EAAAA,YAAAb,EAAAA,EAAAA,SAAAC,EAAAA,EAAAA,UAAAI,EAAAA,EAAAA,WAAAG,EAAAA,EAAAA,UAAA+D,EAAAA,EAAAA,KAAAC,EAAAA,EAAAA,OAClX3C,EAAAA,EAAAA,SAAAA,QAAwB,IAAIC,EAAJ,EAAQ,IAAIY,EAAJ,0CAAmDyE,YAAAA,WAAuB1G,KAAK2G,SAASD,YAAYE,KAAK5G,MAAMA,KAAK8E,GAAL,EAAUzD,EAAAA,EAAAA,EAAAA,YAAAA,GAAoBwF,OAAAA,SAAAA,GAAoB,IAAIC,EAAJ,EAASA,EAAEC,QAAQ,IAAIC,EAAJ,KAAAC,EAAAA,IAAAA,MAAuBA,EAAEC,IAAFD,IAAAA,gBAAAA,IAAAA,KAAAA,CAAAA,GAAAA,CAAwCE,KAAAA,eAAoBF,EAAEG,OAAFH,WAA6E,GAAzDD,EAAEK,GAAFL,EAAOA,EAAEM,GAAFN,EAAAA,GAAAA,GAAcA,EAAEO,KAAKN,EAAEO,MAATR,EAAAA,QAAyBF,EAAEW,SAAS,oBAAuB,MAAMC,EAAN,QAAgBA,IAAAA,IAAAA,EAAAA,MAAAA,WAAyBvF,EAAAA,EAAAA,OAAAA,mBAAAA,CAAiCuE,YAAAA,WAAuB1G,KAAK2G,SAASD,YAAYE,KAAK5G,MAC3gBA,KAAK2H,GAAL,YAAmBC,MAAAA,WAAkB5H,KAAK2H,GAAL,YAAmBE,QAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAiC,IAAIC,EAAJ,QAAAC,EAAAA,EAAAA,QAA0BtC,EAAAA,EAAAA,GAAO,MAAMuC,EAAN,cAAsBA,EAAE7H,EAAF6H,EAAMA,EAAE1I,EAAF0I,EAAMA,EAAEvI,EAAFuI,EAAMA,EAAEtI,EAAFsI,EAAMA,EAAE9H,EAAF8H,EAAMA,EAAE5H,EAAF4H,EAAMD,EAAEnB,KAAKkB,EAAPC,EAAAA,IAAcE,SAAAA,SAAAA,GAAsBjI,KAAKkI,GAAL,GAAUC,OAAAA,SAAAA,EAAAA,GAAsBnI,KAAK2H,GAAGQ,OAAO1C,EAAf,IAAoB2C,OAAAA,SAAAA,EAAAA,GAAsBpI,KAAK2H,GAAGS,OAAO3C,EAAf,IAAoB4C,QAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAA+BrI,KAAK2H,GAAGW,cAAc7C,EAAtB,YAAmC8C,MAAAA,WAAkBvI,KAAK2H,GAAGa,eAAapG,EAAAA,EAAAA,OAAAA,oBAAAA,CAAkCoE,MAAAA,SAAAA,GAAkBxG,KAAKyI,GAAL,MAAaC,UAAAA,SAAAA,GAAuB1I,KAAK2I,GAC5flD,GAAEmD,KAAAA,SAAAA,GAAkB,UAAU,KAAKhJ,EAAEiJ,MAAP,gBAA6B,MAAM,KAAKjJ,EAAEkJ,MAAP,gBAA6B,MAAM,KAAKlJ,EAAEmJ,MAAP,kBAA8BC,IAAAA,SAAAA,GAAiB,UAAU,KAAKxJ,EAAEyJ,KAAP,eAA2B,MAAM,KAAKzJ,EAAEsJ,MAAP,gBAA6B,MAAM,KAAKtJ,EAAE0J,OAAP,mBAAgCC,MAAAA,SAAAA,GAAmBnJ,KAAKoJ,GAAL,GAAUC,UAAAA,SAAAA,GAAuBrJ,KAAKsJ,GAAL,MAAaC,eAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAkCvJ,KAAKwJ,GAAL,CAASC,GAAAA,EAAAC,GAAAA,EAAAC,GAAAA,EAAAC,GAAAA,EAAAC,GAAAA,KAA2BC,eAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAkC9J,KAAKwJ,GAAL,CAASC,GAAAA,EAAAC,GAAAA,EAAAC,GAAAA,EAAAC,GAAAA,EAAAC,GAAAA,GAAAE,IAAAA,IAAiCC,QAAAA,SAAAA,EAAAA,GAAuBhK,KAAKwJ,GAAGK,GAAG9I,KAAK,CAACyF,MAAAA,EAC5fyD,KAAAA,KAASC,iBAAAA,aAA8BC,KAAAA,SAAAA,EAAAA,EAAAA,GAAsB,IAAIlD,EAAJ,QAAc,IAAIS,EAAJ,QAAA0C,EAAAA,KAAAA,GAA2D,GAAnC3E,EAAE4E,yBAAF5E,KAAAA,GAAmC,SAAYiC,EAAAA,EAAAA,GAAO,IAAI4C,EAAJ,KAAW,MAAMvC,EAAN,KAAa,IAAID,EAAJ,KAAW,MAAME,EAAN,KAAaoC,EAAEL,IAAFK,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,qBAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,qBAAAA,EAAAA,EAAAA,EAAAA,GAA2G,uBAAuBG,EAAAA,EAAIA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,aAAAA,EAAAA,KAAAA,EAAAA,EAAAA,QAA6CvK,KAAKyI,GAAL,EAAUzI,KAAKwJ,GAAL,KAAa,UAAU,KAAKzF,EAAL0B,EAAAA,YAAAA,EAAuBA,EAAE+E,UAAF/E,KAAAA,GAAoBA,EAAEgF,QAAFhF,KAAAA,GAAkBA,EAAEiF,SAAFjF,KAAAA,GAAmBA,EAAEkF,OAAO7D,GACtf,MAAM,KAAKhD,EAAL2B,EAAAA,UAAAA,EAAAA,EAAAA,KAAAA,EAAAA,OAAqC,MAAMpD,EAAN,QAAgB,IAAIG,EAAJ,KAAAkC,EAAAA,GAAAE,EAAAA,EAAAD,EAAAA,EAAwB,IAAIF,EAAJ,sCAA+CiC,YAAAA,SAAAA,GAAwB1G,KAAK2G,SAASD,YAAYE,KAAK5G,MAAMA,KAAKmB,GAAL,cAAsBnB,KAAK4K,EAAL,mBAA0B5K,KAAK6K,GAAL,EAAU7K,KAAKgF,GAAL,IAAW8F,KAAAA,WAAiB9K,KAAKmB,GAAGJ,QAAQf,KAAKmB,GAAG4J,MAAM/K,KAAKmB,GAAG6J,OAAtC,IAAiDhL,KAAKgF,GAAGjE,KAAKf,KAAK4K,EAAEE,KAAKG,KAAKjL,KAAK4K,KAAIM,QAAAA,WAAoB,MAAMzF,EAAN,iBAAyB,wDAAwDzF,KAAKmB,GAAGgK,OAAO1F,GAAGzF,KAAKgF,GAAGjE,KAAKf,KAAK4K,EAAEM,QAAQD,KAAKjL,KAAK4K,KAC1gBQ,UAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAgC,MAAMd,EAAN,QAAAxC,EAAAA,EAAAA,OAAAA,EAA6BwC,EAAEa,OAAOrD,EAATwC,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,IAAkItK,KAAKgF,GAAGjE,KAAKf,KAAK4K,EAAEQ,UAAUH,KAAKjL,KAAK4K,EAAxC,eAAwDS,OAAAA,SAAAA,GAAoB,MAAMvE,EAAN,YAAoBrB,EAAAA,KAAAA,IAAAA,GAAczF,KAAKoL,UAAU3F,EAAf,aAA6B6F,UAAAA,SAAAA,EAAAA,GAAyBtL,KAAKgF,GAAGjE,KAAK+F,EAAEqD,KAAKc,KAAKnE,EAAzB9G,KAAA,cAAAoB,EAAA,uBAAsEmK,WAAAA,SAAAA,EAAAA,EAAAA,GAA4B,IAAItE,EAAJ,KAAW,MAAM,IAAIS,EAAJ,OAAA0C,EAAAA,EAAAA,GAAoBpK,KAAKgF,GAAGjE,MAAK,WAAW2G,EAAE2C,yBACpgBD,EAAE1C,EAAE8D,YAAF9D,EAAgBA,EAAE+D,UAAUxE,EAAZS,EAAAA,GAAmBA,EAAE8D,YAAF9D,OAAmBgE,WAAAA,SAAAA,GAAwB,MAAM5E,EAAN,QAAAE,EAAAA,EAAAA,OAAAA,EAA6B,YAAY,MAAMC,EAAF,aAAgB0E,eAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAA8C,IAAIpB,EAAJ,oBAAAqB,EAAAA,KAAAA,EAAAA,OAAAA,OAAiD,MAAMC,EAAN,IAAAC,EAAAA,EAAAA,EAAoBxB,EAAAA,KAAAA,IAAAA,EAAAA,GAAgBxC,EAAAA,KAAAA,IAAAA,EAAAA,GAAgBC,EAAAA,KAAAA,IAAAA,EAAAA,GAAgBC,EAAAA,KAAAA,IAAAA,EAAAA,GAAgB,MAAM+D,EAAN,IAAAC,EAAAA,EAAAA,EAA0F,GAAtEnM,QAAQiB,OAAOiL,GAAflM,KAAAA,IAAAA,EAAAA,IAAmCA,QAAQiB,OAAOkL,GAAfnM,KAAAA,IAAAA,EAAAA,MAAmC,aAAoBkI,EAAAA,EAAAA,GAAAA,EAAAA,EAAewC,EAAAA,EAAAA,EAAM,IAAI0B,EAAJ,eAAAC,EAAAA,KAAAA,KAAAA,EAAAA,GAA0CN,EAAAA,EAAAA,KAC7eK,EAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAqBC,EAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAqB1J,IAAAA,EAAAA,IAAAA,EAAAA,kBAAAA,GAAAA,EAAAA,MAAAA,IAAAA,MAAsE,GAAnBoJ,EAAAA,EAAAA,QAAAA,EAAAA,MAAmB,uDAA+D,IAAI7G,EAAJ,QAAAoH,EAAAA,GAAAA,GAAwBzH,EAAE3D,KAAK,CAACqL,GAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,OAAAA,GAAAvH,MAAAA,EAAAwH,GAAAA,EAAAC,GAAAA,EAAAT,GAAAA,EAAAC,GAAAA,EAAAS,GAAAA,EAAAC,GAAAA,EAAAC,GAAAA,EAAAV,GAAAA,EAAAW,GAAAA,IAAAA,aAAAA,GAAAC,GAAAA,IAAAA,aAAAA,GAAAC,QAAAA,IAAAA,YAAAA,GAAA7H,GAAAA,EAAA8H,GAAAA,EAAAA,IAAAA,GAAAA,EAAAA,EAAAA,KAA0LjI,GAAAA,EAAAA,OAAYD,GAAAA,EAAAA,OAAY,IAAImI,EAAJ,OAAAC,EAAAA,EAAAA,GAAsB/M,KAAKgF,GAAGjE,MAAK,WAAW+L,EAAGhC,OAAOgC,EAAGE,iBAAiBF,EAAGzC,yBAChf0C,EAAGD,EAAGtB,YAAHsB,EAAiBA,EAAGrB,UAAUtK,EAAGoE,SAAhBuH,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAgDA,EAAG5B,eAAa+B,UAAAA,SAAAA,GAAuBjN,KAAKgF,GAAGjE,KAAKf,KAAK4K,EAAEsC,KAAKjC,KAAKjL,KAAK4K,EAAnC,YAAAxJ,EAAA,uBAAyEiD,MAAAA,WAAkBhC,EAAE8K,IAAInN,MAAMA,KAAKgF,GAAGjE,KAAKf,KAAK4K,EAAEwC,UAAUnC,KAAKjL,KAAK4K,EAAxC,IAAA5K,KAAA,SAAAA,KAAA,aAA6EqN,MAAAA,aAAmBC,UAAAA,SAAAA,EAAAA,GAAyBtN,KAAKoL,UAAU,EAAf,cAA+BlM,EAAKqO,aAALrO,SAAAA,GAA8B,OAAO,IAAIuF,EAAEgB,IAAIvG,EAAKsO,cAALtO,CAAoBuO,gBAAAA,WAA2B,OAAO,IAAIrL,GAAEsL,eAAAA,WAA2B,OAAO,IAAIvL,GAC3fwL,gBAAAA,WAA2B,OAAO,IAAI1L,IAAI,IAAI+C,EAAJ,OAAA4I,EAAAA,KAAyB1O,EAAK2O,KAAL3O,SAAAA,GAAsB,OAAO,IAAI4O,SAAQ,SAAnB,GAA+B,IAAI9G,EAAJ,KAAW4G,EAAAA,CAAI7G,MAAAA,EAAAU,OAAAA,EAAAxG,MAAAA,WAAkC6F,EAAEE,KAAKA,EAAAA,EAAAA,GAAQ,qBAAqBtH,EAAAA,IAAAA,EAASR,EAAKmB,sBAALnB,EAAAA,sBAAAA,KAAAA,GAA2DA,EAAKqB,qBAALrB,EAAAA,qBAAAA,KAAAA,GAAyDA,EAAK6O,iBAAL7O,EAAAA,GAAAA,KAAAA,GAAmCA,EAAK8O,kBAAL9O,EAAAA,GAA4BQ,EAAEO,GAAFP,EAAOR,EAAK+O,QAAL/O,WAAwBsD,GAAAA,EAAAA,WACxa,IAAuB0L,EAAA1E,EAAnB2E,EAAJ,iBAAuB,GAAAC,EAAAA,iBAAAA,OAAAhC,EAAAA,mBAAAA,cAAAiC,EAAAA,IACvB,yNAAkP,IAAIlO,EAAJ,mBAAsF,OAA7DA,EAAEmO,KAAK,MAAPnO,GAAAA,GAAmBA,EAAEoO,aAAFpO,cAA6BA,EAAEqO,KAAK,MAAa,IAAIC,WAAWtO,EAAEuO,YAAU,YAAe,IAAIhP,EAAJ,mBAAyBA,EAAE4O,KAAK,MAAP5O,GAAAA,GAAmBA,EAAE6O,aAAF7O,cAA6BA,EAAE0H,OAAF1H,KAAc,uCAChdS,EAAET,EAAEgP,UAAJvO,KAAmBT,EAAEiP,QAAFjP,EAAYA,EAAE8O,KAAK,QAAO,IAAoH/B,EAAhHmC,EAAJ,mCAAAC,EAAAA,EAAAA,UAAAA,QAAAA,KAAAA,KAAAA,SAAoFC,OAAOC,OAAO5P,EAAd2P,GAAoBX,EAAAA,KAAehP,EAAE6P,aAAF7P,EAAAA,EAAAA,YAAgC,gBAAsC,mEAAoE,IAAI2F,EAC0I+E,EAAJ,gBAD1IoF,GAAAA,EAAAC,EAAAA,oBAAAA,YAAAA,IAAAA,YAAAA,aAAAA,EAC9S,SAASC,EAAG7P,EAAZ,KAAmB,IAAII,EAAJ,IAAU,QAAQJ,EAAEG,MAAFH,GAAAA,MAAc,EAAK,wDAA0D,SAASa,EAAAA,GAAI,CAAE,IAAID,EAAJ,OAAa,UAAU,IAAIE,EAAJ,UAAgB,wDAAoD,CAAK,IAAIb,EAAJ,UAAgF,OAAhEW,EAAAA,MAAAA,IAAAA,IAAAA,GAAAA,IAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,GAAAA,GAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAgE,4FAA+F,uBAAAA,GAA+B,OAAOR,EACtb,SAAS0P,IAAK,IAAI9P,EAAJwF,EAAA,OAAgB+E,EAAAA,EAAK1K,EAAEkQ,MAAFlQ,EAAAA,IAAAA,UAAAA,GAA4BA,EAAEmQ,OAAFnQ,EAAAA,IAAAA,WAAAA,GAA8BA,EAAEoQ,OAAFpQ,EAAAA,IAAAA,WAAAA,GAA8BA,EAAEqQ,OAAFrQ,EAAAA,IAAAA,WAAAA,GAA6BA,EAAEsQ,QAAFtQ,EAAAA,IAAAA,YAAAA,GAAgCA,EAAEuQ,QAAFvQ,EAAAA,IAAAA,YAAAA,GAA+BA,EAAEwQ,QAAFxQ,EAAAA,IAAAA,aAAAA,GAAiCA,EAAEyQ,QAAFzQ,EAAAA,IAAAA,aAAAA,GAAiC,IAAIwK,EAAJC,EAAAA,GAAAiG,EAAAA,GAAArD,EAAAA,GAAyB,SAASvM,IAAK,IAAIX,EAAJ,iBAAuBsK,EAAGkG,QAAQxQ,GAAG,IAClHyQ,EADsHC,EAAJ,EAAAC,EAAAA,KAAApD,EAAAA,KACrW,SAASqD,EAAG5Q,GAA+I,MAA5I,wBAA6CuP,EAAnBvP,EAAAA,WAAAA,EAAAA,KAAyB2P,GAAAA,EAAM3P,EAAAA,IAAAA,YAAAA,aAAAA,EAAAA,4CAA6E4B,EAAG5B,GAASA,EAAG,SAASmK,IAAK,OAAOsG,EAAEI,WAAW,yCAAwE,GAAzBJ,EAAAA,wBAAyB,KAAU,IAAIrG,EAAJ,EAASqG,EAAAA,EAAAA,WAAAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAuC,SAASpD,IAAK,IAAIrN,EAAJ,EAAQ,IAAI,oCAAsC,iBAAmB,uDAAwD,SAAS4Q,EAAG/P,IAC/E,SAASkH,EAAG/H,GAAG,KAAK,YAAWA,EAAAA,OAAAA,CAAAA,GAC/a,SAAS8J,EAAG9J,GAAG,+BAAiE,IAAIa,GAAtCb,EAAAA,EAAAA,QAAAA,iBAAAA,MAAkC,cAAsB,OAAO,IAAP,iBAA4B,SAASgI,EAAGhI,EAAZ,GAAyB,OAARA,EAAAA,EAAAA,GAAe,WAAgB,OAAOa,EAAEiQ,MAAMpQ,KAAf,YAAgC,IAAIqQ,EAAJ,IAAS,CAAEC,WAAAA,GAAa,CAAEA,MAAAA,MAAW,CAAEA,OAAAA,GAAS,CAAEA,OAAAA,IAAS3H,EAAAA,GAC7Q,SAASnF,EAAGlE,GAAG,IAAIa,EAAJ,MAAAV,EAAAA,EAAAA,GAAAA,SAAAA,GAA+BO,KAAKuQ,KAAL,EAAYvQ,KAAKwQ,QAAL,OAAgC,KAAjB9Q,EAAAA,MAAAA,GAAAA,SAAiB,uEAAwP,OAArKD,EAAEgR,UAAFhR,OAAAA,OAAAA,EAAAA,WAAuCA,EAAEgR,UAAUC,YAAZjR,EAA0BA,EAAEgR,UAAUE,SAAZlR,WAAgC,YAAO,IAAP,oDAA2EA,EAAE,IAAImR,OAAJ,EAAc,SAASC,EAAEvR,GAAG,MAAM,IAAIsR,EAAGtR,GACpY,IAAIsB,EAAJ,IAAWtB,GAAAA,EAAAA,oCAAAA,GAAmD+Q,EAAE/Q,GAAGgR,OAAMQ,EAAAA,IAAO,UAAU,UAAK,EAAL,SAAqB,KAAK,KAAL,SAAmB,KAAK,EAAL,SAAiB,KAAK,EAAL,SAAiB,wCAA8D,OAApBT,EAAElQ,GAAFkQ,CAAMlB,GAAAA,EAAAmB,MAAAA,GAAqBnQ,IAAG4Q,QAAAA,EAAA/M,QAAAA,EAAqB,SAASgN,GAAE1R,GAAG,aAAa2R,EAAE3R,IAAGa,GAAAA,GAAAA,EAAAA,MAAe,OAAOA,EAAE,IAAIM,GAAJ,GAAU,SAASyQ,KAAK,KAAKzQ,GAAGuK,QAAO,CAAE,IAAI1L,EAAJ,SAAeA,EAAEiL,EAAE6D,IAAJ9O,EAAUA,EAAU,UAAK,IAAI6R,QAAJ,EAAAC,GAAAA,GAC1Y,SAASzQ,GAAGrB,EAAZ,GAAiB,iDAAiDA,EAAE+R,GAAElR,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAiB,OAAOA,EAAE,IAAImR,GAAJ,GAAU,SAASC,GAAGjS,GAAW,IAAIa,EAAJ,GAARb,EAAAA,GAAAA,IAAyB,OAANkS,GAAGlS,GAAUa,EAAE,SAASsR,GAAGnS,EAAZ,GAAiB,IAAIG,EAAJ,MAAwD,YAA5C,uCAAmDA,EAAE,SAASiS,MAAM,IAAI3H,IAAJ,EAAU,SAAS4H,GAAGrS,KAAKA,EAAEsS,MAAMtB,MAAM,sDAAsD,SAAS/M,GAAGjE,EAAZ,KAAmB,oBAAkB,SAAiD,QAArBA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,IAA5B,KAA0C,QAA6B,IAAIuS,GAAJ,GAC5ZC,QAAJ,EAAc,SAASC,GAAGzS,GAAG,MAAM,IAAIwS,GAAGxS,GAAI,SAAS0S,GAAG1S,EAAZ,GAAoK,OAAnJa,EAAEwE,GAAFxE,EAAAA,GAAAA,GAAAA,8CAA2DA,EAAEd,OAAJ,6DAAwEc,EAAEyR,MAAFzR,CAASmQ,MAAAA,GAAgB/D,GAAGuC,OAAOmD,OAAO3S,EAAxB,CAA2BiL,EAAAA,CAAG+F,MAAAA,MACvR,SAAS/D,GAAGjN,GAAG,6DAA8DyK,GAAAA,IAAAA,sBAAAA,IAAgC4H,GAAGxR,EAAEoK,MAA6DmH,GAAAA,IAAO3H,GAAGmI,WAAW/R,KAA7EoM,GAAAA,IAAO,IAAI9M,EAAJ,IAAuC,OAA7BA,EAAEL,IAAFK,GAAAA,SAAAA,EAAAA,CAAqB8K,EAAAA,GAAI,GAAWpK,IAAsCb,IAAG,IAAI6S,GAAJ,GAAU,SAASC,GAAG9S,GAAG,KAAKA,EAAE0L,QAAO,CAAE,IAAI7K,EAAJ,QAAcb,EAAE+S,KAAF/S,CAAQa,IAAI,SAASmS,GAAGhT,GAAG,OAAOU,KAAKuS,aAAa9J,EAAGnJ,GAA5B,IAAmC,IAAIkT,GAAJ,GAASC,GAAAA,GACnV,SAASC,GAAEpT,EAAX,KAAkB,SAASI,EAAEF,IAAGA,EAAAA,EAAAA,IAASwL,SAAFxL,EAAAA,QAAAA,GAAAA,mCAA2D,YAAYI,EAAAA,EAAAA,SAAaA,EAAF,cAAiBN,EAAEK,SAAQ,SAAVL,GAAsBmT,GAAGjT,GAAHiT,KAAU,IAAIvS,EAAJ,gBAAAE,EAAAA,GAAAb,EAAAA,EAA+BY,EAAER,SAAQ,CAACH,EAAXW,KAAkBmR,GAAGqB,eAAenT,GAAlB8R,EAAAA,GAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,GAAAA,eAAAA,KAAAA,GAAAA,GAAAA,IAAAA,GAAAA,GAAAA,MAAAA,KAA4FpR,EAAEN,GAAFM,GAAAA,KAAaX,IAAEA,EAAAA,QAAAA,EAAAA,UAAwB,mBAC9V,SAASqT,GAAGtT,GAAG,UAAU,KAAK,EAAL,SAAgB,KAAK,EAAL,SAAgB,KAAK,EAAL,SAAgB,KAAK,EAAL,SAAgB,sDACzF,SAASuT,GAAEvT,EAAX,GAAmB,IAAnBG,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAAA,GAAqB,0GAA0G,IAAIC,EAAJ,OAA8E,GAAjEJ,GAAAA,EAAAA,SAAAA,EAAAA,iDAAiE,sBAAyB,eAAeuR,EAAE,yBAAFA,EAAAA,WAAwCS,GAAGhS,GAAHgS,SAAemB,GAAGnT,GAAGkT,GAAGG,eAAerT,KAAlBkT,EAAAA,GAAAA,UAAAA,GAAAA,GAAAA,EAAAA,SAAAA,GAAAA,OAA+D,SAASM,GAAGxT,GAAGuR,EAAEvR,EAAEiL,EAAE5F,EAAEyM,EAAEb,KAAVM,6BAA4C,SAASkC,MACrb,SAASC,GAAG1T,EAAZ,KAAmB,oBAAoB,IAAII,EAAJ,KAAWJ,EAAEa,GAAFb,WAAgL,OAAhKA,EAAEa,GAAG0S,EAAEF,eAAeM,UAAUjI,SAAhC1L,EAAAA,aAAAA,EAAAA,iDAAAA,UAAAA,OAAAA,uBAAAA,EAAAA,GAAAA,EAAAA,MAAuKA,EAAEa,GAAG0S,EAAEI,UAAUjI,QAAQoF,MAAMpQ,KAAtC,YAAuDV,EAAEa,GAAG0S,EAALvT,GAAUA,EAAEa,GAAG0S,EAAEnT,EAAEwM,IAAT5M,GACnS,SAAS4T,GAAG5T,EAAZ,KAAmBH,EAAEwT,eAAerT,UAAjBH,IAAAA,QAAAA,IAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,GAAAA,EAAAA,KAAAA,EAAAA,gCAAAA,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,eAAAA,IAAAA,EAAAA,uFAAAA,EAAAA,MAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,OAAAA,IAAAA,IAAAA,EAAAA,GAAAA,GAAAA,IAAqS,SAASgU,GAAG7T,EAAZ,QAAAc,EAAA,KAA6BJ,KAAKuQ,KAAL,EAAYvQ,KAAK0Q,YAAL,EAAmB1Q,KAAKa,GAAL,EAAUb,KAAKmO,GAAL,EAAUnO,KAAKqR,EAAL,EAASrR,KAAKsR,GAAL,EAAUtR,KAAK8M,GAAL,EAAU9M,KAAK+Q,GAAL,EAAU/Q,KAAKgQ,GAAL,GAC/a,SAASoD,GAAG9T,EAAZ,KAAmB,KAAKa,IAAAA,GAAMA,EAAAA,IAAAA,EAAAA,gCAAAA,EAAAA,KAAAA,wBAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAgG,OAAOb,EAAE,SAAS+T,GAAG/T,EAAZ,GAAiB,kEAAkEa,EAAEoK,GAAFpK,EAAAA,gBAAAA,GAAAA,GAAAA,UAAAA,KAAAA,MAAkDA,EAAEoK,EAAEmI,GAAJvS,EAAAA,mDAAAA,KAAAA,MAA8EiT,GAAGjT,EAAEoK,EAAEmI,EAAd,iBACnV,SAASY,GAAGhU,EAAZ,GAAiB,aAA0D,GAA7CU,KAAKiP,IAAL,yBAAAjP,KAAA,MAA6C,SAAY,IAAIP,EAAJ,UAA4C,OAA5B,4BAAmCA,EAAE,OAAO,EAAgR,GAA9QU,EAAEoK,GAAFpK,EAAAA,gBAAAA,GAAAA,GAAAA,UAAAA,KAAAA,MAAkDA,EAAEoK,EAAEmI,GAAJvS,EAAAA,mDAAAA,KAAAA,OAAwEH,KAAK4O,IAAN,gHAA0HnP,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAA2B,qFACnaO,KAAKgS,IAAI,KAAK,EAAL7R,EAAAA,EAAAA,KAAAA,KAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,oCAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,EAAAA,EAAAA,MAAAA,sBAAAA,KAAAA,MAAoI,MAAM,KAAK,EAALV,EAAAA,EAAAA,EAAAA,GAAgB,MAAM,KAAK,EAAL,OAAAJ,KAAA,KAAAI,EAAA,WAAiC,CAAK,IAAIC,EAAJ,UAAgBD,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,WAAyBC,EAAU,aAAO,4BAA4B,MAAM,QAAAmR,EAAAA,+BAAyC,OAAOpR,EAC3V,SAAS8T,GAAGjU,EAAZ,GAAiB,kEAAkEa,EAAEoK,GAAFpK,EAAAA,gBAAAA,GAAAA,GAAAA,UAAAA,KAAAA,MAAkDA,EAAEoK,EAAEmI,GAAJvS,EAAAA,mDAAAA,KAAAA,MAAuEA,EAAEoK,EAAE5F,EAAEiK,IAANzO,EAAAA,mCAAAA,EAAAA,EAAAA,EAAAA,KAAAA,sBAAAA,KAAAA,MAAkGiT,GAAGjT,EAAEoK,EAAEmI,EAAd,iBACvS,SAASc,GAAGlU,EAAZ,OAAqBU,KAAKuQ,KAAL,EAAYvQ,KAAKoR,EAAL,EAASpR,KAAKiP,GAAL,EAAUjP,KAAK4O,GAAL,EAAU5O,KAAK6O,IAAL,EAAW7O,KAAKmO,GAALnO,KAAA,GAAAA,KAAA,GAAAA,KAAA,GAAAA,KAAA,GAAAA,KAAA,eAAuD,kEAAuE,SAASyT,GAAGnU,EAAZ,KAAmBH,EAAEwT,eAAerT,IAAjBH,GAAAA,4CAA+D,sDAC3D,SAASyL,GAAEtL,EAAX,GAAuB,IAAIG,GAAXH,EAAAA,GAAAA,IAAO,cAArP,SAAYA,EAAZ,GAAiB,IAAIG,EAAJ,GAAS,OAAO,WAAiD,GAAtCA,EAAEuL,OAAFvL,EAAWqP,OAAOC,OAAOtP,EAAdqP,WAA2B,iBAAoB,IAAIpP,EAAJ,gBAAsBA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,MAAAA,KAAAA,CAAAA,GAAAA,OAAAA,IAAAA,EAAAA,KAAAA,KAAAA,QAAyD,yBAA+B,OAAOA,GAA0B,eAAqH,MAA7E,6EAAoFD,EAAE,IAAIiU,QAAJ,EACnX,SAASC,GAAGrU,EAAZ,GAAyF,IAAII,EAAJ,GAAAQ,EAAAA,GAA2B,MAAbC,EAAER,SAAxF,SAASF,EAAEW,GAAGF,EAAEE,IAAFF,GAAAA,KAAAA,GAAAA,GAAAA,GAAAA,GAAAA,QAAAA,IAAAA,EAAAA,KAAAA,GAAAA,EAAAA,IAAAA,OAA2F,IAAIwT,GAAGpU,EAAb,6BACpH,SAASsU,GAAGtU,EAAZ,SAAuB,IAAIc,EAAJ,SAAe,yFAAyF,IAAIb,EAAJ,sBAAAC,GAAAA,EAAiC,QAAQC,EAAAA,EAAAA,SAAaA,EAAF,kCAAsCD,GAAAA,EAAK,MAAM,IAAII,EAAJ,mBAAAG,EAAAA,EAAAA,EAAA+D,EAAAA,MAAAA,GAAAC,EAAAA,GAAA3C,EAAAA,GAAoD,OAAO,WAAuJ,GAA5I6R,UAAUjI,SAAViI,GAAAA,EAAAA,YAAAA,EAAAA,gBAAAA,UAAAA,OAAAA,wBAAAA,EAAAA,UAA2G7R,EAAE4J,OAAF5J,EAAW2C,EAAEiH,OAAFjH,EAAAA,EAAAA,EAAeA,EAAE,GAAFA,EAAO,GAAM,IAAI1C,EAAJ,wBAA8B0C,EAAE,GAAFA,EAAO,YAAY9B,EAAAA,IAAMA,EAAF,KACjf9B,EAAE8B,EAAF9B,GAAAA,WAAAA,EAAAA,UAAAA,IAAAA,EAAAA,KAAAA,EAAAA,IAAiE,GAAlB8B,EAAAA,EAAAA,MAAAA,KAAAA,GAAkB,aAAgB,IAAL,YAAqBE,EAAAA,EAAAA,OAAWA,IAAAA,CAAK,IAAIC,EAAJ,MAAAf,EAAA,OAAqB,2BAA2D,OAAhCA,EAAAA,EAAAA,EAAAA,GAAAA,aAAAA,QAAAA,GAA0C,SAASwS,GAAGvU,EAAZ,GAAiB,iBAAiBI,EAAAA,EAAIA,IAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,GAAAA,IAAwB,OAAOD,EAChR,SAASqU,GAAGxU,EAAZ,KAA6O,OAA1NA,aAAawP,QAAbxP,EAAAA,EAAAA,yBAAAA,GAAqDA,aAAaa,EAAEiR,EAAEV,aAAjBpR,EAAAA,EAAAA,qCAAAA,EAAAA,YAAAA,MAA2FA,EAAEiL,EAAEmI,GAAJpT,EAAAA,yCAAAA,EAAAA,sBAAiF8T,GAAG9T,EAAEiL,EAAEmI,EAAd,aAA6B,SAASqB,GAAGzU,GAAG,4CACzR,SAAS0U,GAAG1U,EAAZ,KAAmB,UAAU,KAAK,EAAL,mBAA0B,OAAOU,KAAKuS,cAAc9S,EAA1B,UAAuC,KAAK,EAAL,mBAA0B,OAAOO,KAAKuS,cAAc9S,EAA1B,aAA2C,KAAK,EAAL,mBAA0B,OAAOO,KAAKuS,cAAc9S,EAA1B,aAA0C,yDAA0D,SAASwU,GAAG3U,GAAG,yBAAyB,IAAIa,SAAJ,EAAe,kEACxV,SAAS+T,GAAG5U,EAAZ,GAAiB,UAAU,KAAK,EAAL,gBAAAG,GAA0B,OAAOO,KAAKuS,aAAalG,EAAG5M,GAA5B,KAAoC,KAAK,EAAL,gBAAAA,GAA0B,OAAOO,KAAKuS,aAAajG,EAAG7M,GAA5B,KAAoC,uDACvJ,SAAS0U,GAAG7U,EAAZ,KAAmB,UAAU,KAAK,EAAL,OAAAG,EAAA,YAA4B,OAAOiN,EAAGhN,IAAG,YAAa,OAAOuR,EAAEvR,IAAI,KAAK,EAAL,OAAAD,EAAA,YAA4B,OAAOoL,EAAGnL,GAAV,IAAgB,YAAa,OAAOwI,EAAGxI,GAAV,IAAiB,KAAK,EAAL,OAAAD,EAAA,YAA4B,OAAOgJ,EAAG/I,GAAV,IAAgB,YAAa,OAAO0U,EAAE1U,GAAT,IAAgB,yDAA0D,IAAI2U,GAAJ,mEAC7S,SAASC,GAAGhV,EAAZ,GAA4B,IAAX,IAAIG,EAAJ,KAAW,UAAkBA,GAAF,YAAe,EAAW,OAANA,IAAAA,GAAM,wCAAqD,IAALA,EAAAA,GAAK,MAAUC,GAAF,OAAYA,EAAF,CAAK,IAAIQ,EAAJ,YAAmB,cAAcT,GAAAA,OAAAA,aAAAA,GAA0B,OAAOA,EAAE,SAAS8U,GAAGjV,EAAZ,KAA8C,QAA3B,sBAA2B,aAAqB,IAAII,EAAJ,EAAQD,GAAbA,GAAAA,GAAaA,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,EAAAA,OAA4B,YAAYS,EAAAA,IAAMA,EAAF,6BAA6C,OAAX2K,EAAG1K,GAAH0K,GAAAA,EAAkB1K,EAAP,EAAW,SAASqU,GAAGlV,GAAG,OAAO,EAAP,SACpZ,SAASmV,GAAGnV,EAAZ,GAAiB,mBAAmBG,GAAF,MAAU,CAAE,IAAIS,EAAJ,YAAmB,gBAAgBT,EAAE,+FAA+F,OAAOC,EAAE,SAASgV,GAAGpV,EAAZ,KAA8C,QAA3B,sBAA2B,aAAgB,IAAII,EAAJ,EAAQD,EAAAA,EAAAA,EAAAA,EAAQ,YAAYS,EAAAA,EAAAA,SAAaA,EAAF,CAAK,IAAIE,EAAJ,gBAAmH,GAA7F,qBAA+CA,EAAAA,QAAAA,KAAAA,IAAAA,IAAAA,KAAxB,mBAAsDqI,EAAGtI,GAAHsI,GAAAA,GAAWtI,GAAAA,GAAK,UAA0B,OAAXsI,EAAGtI,GAAHsI,GAAAA,EAAkBtI,EAAP,EAClb,SAASwU,GAAGrV,GAAG,gBAAgBG,EAAAA,EAAAA,SAAaA,EAAF,CAAK,IAAIC,EAAJ,gBAAsB,wBAAwBS,GAAAA,EAAK,OAAOA,EAAE,IAAIyU,GAAJ,GAAU,SAASC,GAAGvV,GAAG,IAAIa,EAAJ,MAAY,YAAO,IAAP,UAAyB,IAAI2U,GAAJ,GAA8JC,GAAJ,GAAAC,GAAAA,CAAAA,KAAAA,GAAAA,IAA0BpE,EAAAA,EAAAA,aAAAA,EAAAA,gBAAqCzR,EAAE8V,oBAAF9V,WAAiC,gBAAgBgB,EAAAA,EAAAA,SAAaA,OAAF,cAAuB,OAAOb,GAC5dH,EAAE+V,gBAAF/V,WAA6B,YAAYG,EAAAA,EAAAA,SAAaA,EAAF,6BAAiC,OAAO,MAAMyR,GAAAA,EAAAA,iBAAAA,EAAAA,oBAA6C,2BAA2B,SAASoE,GAAF,+BAAoCnR,GAAAA,GAAM7E,EAAEiW,0BAAFjW,WAAuC,OAAO2P,OAAOuG,KAAKjE,IAAGpG,QAAQ7L,EAAEmW,0BAAFnW,WAAuC,IAAAgB,EAAIb,EAAJ,GAAW,gDAA6C,OAAOA,GAAGH,EAAEoW,oBAAFpW,GAAyBA,EAAEqW,iBAAFrW,SAAAA,GAA+BgS,GAAAA,EAAK1Q,GAAGuK,QAAHvK,IAAAA,GAAAA,KAAuBqR,GAAAA,EAAAA,cAAAA,EAAAA,iBAC7diB,GAAGtC,UAAUgF,UAAb1C,SAAAA,GAAmC,mDAAmD,IAAI5S,EAAJ,WAAAV,EAAAA,KAAAA,EAAAA,EAAAC,EAAAA,EAAAA,EAAAA,EAAAA,EAAsC,YAAYS,EAAEkR,GAAE5R,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAiB,KAAKC,EAAE2R,GAAE/R,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAiB,OAAOa,IAAP,UAAqB4S,GAAGtC,UAAUiF,MAAb3C,WAAiD,GAAnB/S,KAAKuK,EAAEmI,GAAP,GAAA1S,MAAmB,4CAA+C,IAAIV,EAAJ,GAAAa,EAAAA,OAAAV,EAAAA,EAAAA,OAAAC,EAAAA,OAAAA,eAAAA,MAAAQ,EAAAA,KAAAA,EAA0L,OAAtHZ,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,CAAgBiL,EAAAA,CAAG+F,MAAAA,CAAOsB,MAAAA,EAAAA,MAAAxD,GAAAA,EAAAA,GAAAF,GAAAA,EAAAA,GAAAwE,EAAAA,EAAAA,EAAA/N,EAAAA,EAAAA,EAAAvF,GAAAA,EAAAA,GAAAC,GAAAA,EAAAA,SAAiEkL,EAAEqH,MAAMtB,OAAVhR,EAAmBA,EAAEiL,EAAE6D,IAAJ9O,EAAiBA,GAC7eyT,GAAGtC,UAAkB,OAArBsC,WAAkC/S,KAAKuK,EAAEmI,GAAP,GAAA1S,MAAmBA,KAAKuK,EAAE6D,KAAPpO,KAAA,iDAAkE0R,GAAG1R,MAAM2R,GAAG3R,KAAKuK,GAAGvK,KAAKuK,EAAE2D,KAAPlO,KAAA,YAAAA,KAAA,aAA+C+S,GAAGtC,UAAUkF,UAAb5C,WAAkC,iBAAiBA,GAAGtC,UAAUmF,YAAb7C,WAA8K,OAA1I/S,KAAKuK,EAAEmI,GAAP,GAAA1S,MAAmBA,KAAKuK,EAAE6D,KAAPpO,KAAA,iDAAkES,GAAGM,KAAKf,MAAM,0BAA0BA,KAAKuK,EAAE6D,IAAP,EAAoBpO,MAAMwT,GAAG/C,UAAUc,GAAbiC,SAAAA,GAAoD,OAAxBxT,KAAKiQ,KAAL,EAAAjQ,KAAA,OAA+BV,GACnekU,GAAG/C,UAAUrB,GAAboE,SAAAA,GAA4BxT,KAAKmO,IAALnO,KAAA,OAAqBwT,GAAG/C,UAAUoF,eAAbrC,EAA8BA,GAAG/C,UAAUqF,qBAAbtC,GAAqCA,GAAG/C,UAAUsF,aAAbvC,SAAAA,GAAsC,sBAC1JA,GAAG/C,UAAU8B,aAAbiB,SAAAA,GAAsC,SAASrT,IAAI,OAAOH,KAAK6O,GAAZ,cAA6BlK,EAAAA,KAAAA,GAAA+N,EAAAA,EAAArT,GAAAA,KAAAD,GAAAA,IAA2B,cAAgBuF,EAAAA,KAAA+N,EAAAA,IAAa,IAAIjT,EAAJ,WAAiB,6BAA6B,IAAIC,EA3B1L,SAAYJ,EAAZ,GAA2B,OAAVa,EAAAA,GAAAA,EAAAA,GAAiBiR,GAAEjR,GA2BkJ,WAAmB,cAAe,yDAAyDT,EAAAA,EAAAA,QAAYM,KAAKoP,GAAG9P,GAAUI,GAAyB,GAAvBA,EAAAA,KAAAA,EAAAA,GAAAA,KAAeA,EAAAA,GAAAA,IAAQ,oBAA0BA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,YAA6B,IAAIQ,EAAJ,iBAAuB,OAAO,OAAP,kCAAgDyE,EAAAA,EAAA+N,EAAAA,EAAArT,GAAAA,KAAAD,GAAAA,IAAqB,WAAauF,EAAAA,EAAA+N,EAAAA,KACxegB,GAAAA,EAAAA,iBAAAA,EAAAA,oBACA,IAAIsC,GAAJ,CAAQpW,EAAAA,SAAAA,EAAAA,EAAAA,GAAkBN,EAAAA,GAAAA,GAAOa,EAAAA,GAAAA,EAAAA,WAAkBV,EAAAA,EAAAA,GAAQ,IAAIC,EAAJ,SAAAQ,EAAAA,EAAAA,EAAAE,EAAAA,EAAAA,GAAAb,EAAAA,EAAAA,EAAAA,GAAAC,EAAAA,EAAAA,EAAAA,YACoW,aAD7SF,EAAAA,EAAAA,GAAAA,WAAkBY,EAAEmR,EAAErB,GAAGrQ,QAAQ,SAAfO,GAA2B,iGAAkG+K,KAAKjL,OAAO8O,OAAOmH,eAAejW,KAAtB8O,WAAAA,CAAuCwB,MAAAA,IAAUtQ,KAAK0G,YAAY0J,MAAMpQ,KAAvB,sBAAiDI,EAAEsG,YAAFtG,WAAyBJ,OAAA,2CAAkD,IAAID,EAAJ,2DAC1b2R,GAAG3R,GAAG,IAAI+D,EAAJ,IAAU/D,EAAEmW,sBAAsBpS,EAAEoK,IAAFpK,EAAQgL,OAAOqH,iBAAiBnW,KAAxB8O,CAA8BvE,EAAAA,CAAG+F,MAAAA,KAAW/D,GAAGvM,MAAMD,EAAAA,EAAAA,EAAMA,EAAAA,GAAAA,EAAAA,GAAUqR,GAAEuB,eAAe5S,GAAjBqR,EAAAA,0CAAAA,GAAAA,GAAAA,GAAAA,MAA8EhR,EAAEgW,WAAFhW,WAAwBJ,OAAA,0CAAiD0R,GAAG1R,MAAM,IAAID,EAAJ,SAAeA,EAAAA,GAAAA,EAAAA,GAAUqR,GAAEuB,eAAe5S,UAAjBqR,GAAAA,GAAAA,EAAAA,8CAAAA,IAAoF9R,EAAEmR,UAAFnR,OAAAA,OAAAA,GAA6B,sBAAmC,OAAOwR,EAAExR,IAAG8C,EAAAA,SAAAA,GAAe,IAAIjC,EAAJ,aAAmBgS,GAAG7S,GACnf,IAAIG,EAAJ,KAAAC,EAAAA,EAAAA,GAAAQ,EAAAA,EAAAA,GAAiEwS,GAAE,CAACpT,GAApEc,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,OAAiEsS,IAAY,IAAIlT,EAAJ,GAAoL,OAA3KU,EAAEP,SAAQ,CAACC,EAAXM,KAAkB,IAAI4D,EAAJ,KAAAC,EAAAA,EAAAA,GAAA3C,EAAAA,EAAAA,GAAAC,EAAAA,EAAAA,EAAAA,EAAAA,QAAAY,EAAAA,EAAAA,GAAAE,EAAAA,EAAAA,GAAuD3C,EAAEI,EAAEuR,IAAJ3R,CAAS6W,KAAAA,GAAAA,EAAAA,aAAAA,EAAAA,EAAAA,IAAAC,MAAAA,CAAAA,EAAAA,KAA6C,IAAI9T,EAAJ,GAASP,EAAEE,EAAFF,EAAAA,EAAAA,WAAAA,EAAAA,IAAyBmQ,GAAG5P,QAAO,EAAQ+N,KAAAA,EAAAA,KAAAgC,aAAAA,SAAAA,GAAqC,IAAQzO,EAAJ/D,EAAJ,GAAW,6BAAkC,OAALL,EAAEE,GAAUG,GAAEwW,WAAAA,SAAAA,EAAAA,GAA0B,2EAA2E,IAAIxS,EAAJ,IAAU,8BACpc,OADke,OACjfnE,GAAAA,EAAAA,KAAAA,EAAAA,GAAsBmE,GAAE8R,eAAAA,EAAAC,qBAAAA,GAAA5U,GAAAA,QAAmDmN,EAAAA,aAAepH,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAuB,IAAI7G,EAAJ,MAAmByS,GAAEvT,EAAFuT,CAAKtC,KAAZpQ,EAAAA,GAAAA,GAAYoS,aAAAA,SAAAA,GAAgC,WAAUgE,WAAAA,SAAAA,EAAAA,GAA0B,OAAO/W,EAAP,KAAaqW,eAAAA,EAAAC,qBAAAA,SAAAA,GAAmD,sBAAuB,GAAL,cAAwB,IAAL,MAAwB,MAAM,IAAIU,UAAU,8BAAzB,GAAnB,IAA6E,OAAOxW,KAAKuS,aAAa/S,EAAED,GAA3B,KAAkC2B,GAAAA,QAAWzB,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAuCqE,EAAAA,GAAAA,GAAO1D,EAAAA,GAAAA,EAAAA,GAASZ,IAAAA,EAAAA,GAAAA,EAAAA,IAAcO,IAAAA,EACjf6K,GAAEhL,EAAFgL,IAAQxJ,EAAAA,GAAAA,EAAAA,GAAS,IAAIC,EAAJ,KAAY6R,GAAG7R,GAAH6R,WAAgBS,GAAG,oBAAHA,EAAAA,wBAAAA,CAAAA,OAAwDjB,GAAE,CAACpT,EAAHoT,EAAAA,GAAAA,EAAAA,CAAAA,GAAAA,IAAAA,SAAAA,GAAsC,GAAPzQ,EAAAA,EAAAA,GAAO,EAAM,IAAIE,EAAJ,IAAcC,EAAJ,UAAW,eAAoBH,EAAAA,EAAAA,GAAAA,WAAkB,4EAA6E,iEAAkE,IAAI2C,EAAJ,uBAA6B,gIACxXkK,OAAOuG,KAAK7S,EAAEyJ,IAAI0E,WAAlB7B,yBAAsD,OAAOlK,EAAEwL,MAAMpQ,KAAf,cAAiC,IAAIqC,EAAJ,iBAAuBqO,YAAAA,CAAaJ,MAAAA,KAAWrO,EAAEwO,UAAFxO,EAAc,IAAIO,EAAJ,wBAA8BL,EAAAA,IAAAA,GAAAA,EAAAA,GAAAA,GAAAA,GAAoBC,EAAAA,IAAAA,GAAAA,EAAAA,IAAAA,GAAAA,GAAAA,GAAwB,IAAIsC,EAAJ,4BAAqE,OAAnCmN,GAAGvS,GAAHuS,CAAO4E,YAAAA,EAAA7I,GAAAA,GAAoB6F,GAAGpS,EAAHoS,GAAQ,YAAgBlU,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAA2B,IAAIC,EAAJ,QAAcW,EAAAA,GAAAA,GAAOC,EAAAA,GAAAA,EAAAA,GAASsS,GAAE,GAAFA,CAAAA,IAAAA,SAAAA,GAAqB,SAAS3S,IAAI4T,GAAG,eAAHA,EAAAA,wBAAAA,GAAsD,IAAI7P,GAAXlE,EAAAA,EAAAA,IAAO,WAAmBO,EAAEgQ,WAAW,QAAbhQ,EAAAA,OAAAA,EAAAA,UAAAA,KACvd,IAAI4D,EAAJ,gBAA8M,YAAxL,qDAA0D2O,GAAE,GAAFA,GAAAA,SAAAA,GAAmH,OAAhGtR,EAAAA,GAAAA,EAAAA,CAAAA,EAAAA,GAAAA,MAAAA,OAAAA,EAAAA,MAAAA,IAAAA,KAAAA,EAAAA,QAAgD,2CAAgD,MAAW,OAAWqE,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAA6BtF,EAAAA,GAAAA,GAAOC,EAAAA,GAAAA,EAAAA,GAASsS,GAAE,GAAFA,CAAAA,IAAAA,SAAAA,GAA4B,IAAI3S,GAAXH,EAAAA,EAAAA,IAAO,WAAAkE,EAAAA,CAAsB4S,IAAAA,WAAe/C,GAAG,iBAAHA,EAAAA,wBAAAA,CAAAA,KAAmDgD,YAAAA,EAAAC,cAAAA,GAC5H,OAD4J9S,EAAExD,IAAFwD,EAAAA,KAAa6P,GAAG,iBAAHA,EAAAA,wBAAAA,CAAAA,KAAmD,KAAM9C,EAAE9Q,EAAF8Q,6BAChe/B,OAAOmH,eAAerW,EAAEwR,EAAEV,YAA1B5B,EAAAA,GAA2C4D,GAAE,GAAFA,CAAAA,IAAAA,SAAAA,GAAqB3O,EAAAA,EAAAA,GAAO,IAAI3C,EAAJ,CAAOsV,IAAAA,WAAe,OAAO3S,EAAEwO,aAAanS,EAAEV,KAAIiX,YAAAA,GAA0H,OAA1GnX,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,IAAuB,IAAIyC,EAAJ,GAASzC,EAAEE,EAAFF,EAAAA,WAAAA,EAAAA,IAAuB4S,GAAGnQ,KAAK6M,OAAOmH,eAAerW,EAAEwR,EAAEV,YAA1B5B,EAAAA,GAA2C,MAAW,OAAW/O,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAyB,SAAU,IAAIR,EAAJ,QAAcW,EAAAA,GAAAA,EAAAA,GAASwS,GAAE,GAAFA,CAAAA,IAAAA,SAAAA,GAA4B,IAAI9S,EAAJ,gBAAPJ,EAAAA,EAAAA,IAAO,KAAyD,QAA7B,6BAA6B,2GACxZW,EAAAA,GAAAA,gBAAAA,EAAAA,KAAAA,uGAA6R,OAAzJX,EAAE4R,EAAEnF,GAAG9L,EAAPX,GAAAA,KAAiBmU,GAAG,oBAAHA,EAAAA,KAAAA,wBAAAA,IAA0DjB,GAAE,GAAFA,GAAAA,SAAAA,GAAmE,OAAhD3S,EAAEoL,OAAO,EAATpL,EAAAA,MAAmBP,EAAE4R,EAAEnF,GAAG9L,EAAPX,GAAAA,GAAAA,EAAAA,EAAAA,KAAAA,EAAAA,GAA6B,MAAW,OAAWW,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAA6B,IAAIP,EAAJ,QAAcO,EAAAA,GAAAA,GAAOC,EAAAA,GAAAA,EAAAA,GAASsS,GAAE,GAAFA,CAAAA,IAAAA,SAAAA,GAAqB,SAAS5O,IAAI6P,GAAG,eAAHA,EAAAA,wBAAAA,GAAsD,IAAI5P,GAAXhE,EAAAA,EAAAA,IAAO,WAAmBI,EAAEgQ,WAAW,QAAbhQ,EAAAA,OAAAA,EAAAA,UAAAA,KAC9cX,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAkB,IAAI4B,EAAJ,OAAAC,EAAAA,EAAAA,GAA4O,YAAxN,IAAAA,QAAA,IAAAA,EAAA,GAAAA,EAAA,oBAAAA,EAAA,wEAA0HqR,GAAE,GAAFA,GAAAA,SAAAA,GAAmF,OAAhEzQ,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,QAAgB,2CAAgD,MAAW,OAAW3C,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAiCa,EAAAA,GAAAA,GAAOD,EAAAA,GAAAA,EAAAA,GAASwS,GAAE,GAAFA,CAAAA,IAAAA,SAAAA,GAA4B,IAAI3O,GAAXD,EAAAA,EAAAA,IAAO,WAAA1C,EAAAA,CAAsBsV,IAAAA,WAAe/C,GAAG,iBAAHA,EAAAA,wBAAAA,CAAAA,EAAAA,KAAqDgD,YAAAA,EAAAC,cAAAA,GAChE,OADgGxV,EAAEd,IAAFc,EAAAA,KAAauS,GAAG,iBAAHA,EAAAA,wBAC7d,CAAClU,EAAD,KAAO,KAAMoR,EAAE9M,EAAF8M,6BAAiC/B,OAAOmH,eAAenS,EAAEsN,EAAEvQ,GAA1BiO,EAAAA,GAAkC4D,GAAE,GAAFA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,IAAAA,SAAAA,GAA6B,IAAIzQ,EAAJZ,EAAA,GAAAc,EAAAA,CAAcuU,IAAAA,WAAe,IAAIrU,EAAJ,uBAA6B,OAAOJ,EAAEsQ,aAAarS,EAAEE,EAAxB,KAA8BuW,YAAAA,GAAgB,MAAM/W,EAAAA,GAAAA,EAAAA,GAAS,IAAIwC,EAAJf,EAAA,GAAWc,EAAE7B,IAAF6B,SAAAA,GAAkB,IAAIK,EAAJ,uBAAAkC,EAAAA,GAAkC9E,EAAEG,EAAFH,EAAAA,EAAAA,WAAAA,EAAAA,IAAyBwS,GAAG1N,IAAsC,OAAlCoK,OAAOmH,eAAenS,EAAEsN,EAAEvQ,GAA1BiO,EAAAA,GAAkC,MAAW,OAAWxE,EAAAA,SAAAA,EAAAA,GAAwBuI,GAAEvT,EAAFuT,CAAKtC,KAAZpQ,EAAAA,GAAAA,GAAYoS,aAAAA,SAAAA,GAAgC,IAAI7S,EAAJ,KAAkB,OAANqU,GAAGtU,GAAUC,GAAE6W,WAAAA,SAAAA,EAAAA,GAA0B,OAAOzF,EAAEpR,IACtfmW,eAAAA,EAAAC,qBAAAA,GAAA5U,GAAAA,QAAmD2V,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAqB,SAAS3W,KAAKT,EAAAA,GAAAA,GAAQU,EAAAA,GAAAA,GAAOD,EAAE4W,OAAF5W,GAAY2S,GAAEvT,EAAFuT,CAAKtC,KAAAA,EAAAG,YAAAA,EAAA6B,aAAAA,SAAAA,GAA8C,OAAOvS,KAAK0Q,YAAYoG,OAAO1W,IAAGmW,WAAAA,SAAAA,EAAAA,GAA0B,OAAOhX,EAAE+Q,OAAMuF,eAAAA,EAAAC,qBAAAA,GAAAA,EAAAA,EAAAA,GAAA5U,GAAAA,OAA2DgS,GAAG/S,EAAH+S,IAAQ6D,EAAAA,SAAAA,EAAAA,EAAAA,GAAmB,IAAIrX,EAAJ,aAAmBS,EAAAA,GAAAA,GAAOb,EAAAA,EAAAA,YAAgBI,EAAAA,OAAAA,OAAAA,EAAAA,YAAAA,UAAAA,CAAyC4Q,MAAAA,CAAOA,MAAAA,GAAQI,YAAAA,CAAcJ,MAAAA,EAAAA,EAAAA,KAAAA,IAAAA,GAAAA,kBAAuChR,EAAEwX,OAAOrX,GAATH,EAAcA,EAAEa,GAAFb,GAAOyE,EAAAA,SAAAA,EACjf5D,EAAAA,GAAKV,EAAAA,GAAAA,GAAeoT,GAAEvT,EAAFuT,CAAKtC,KAAZpQ,EAAAA,GAAAA,GAAYoS,aAAAA,SAAAA,GAAgC,OAAO7S,GAAE6W,WAAAA,SAAAA,EAAAA,GAA0B,OAAOrW,GAAE2V,eAAAA,EAAAC,qBAAAA,GAAAA,EAAAA,GAAA5U,GAAAA,QAAyDe,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAyB,IAAI1C,EAAJ,QAAcD,EAAAA,GAAAA,GAAOY,EAAAA,GAAAA,EAAAA,GAASgT,GAAG5T,GAAH4T,WAAgBS,GAAG,eAAHA,EAAAA,wBAAAA,KAA+C,KAAMjB,GAAE,GAAFA,GAAAA,SAAAA,GAA2E,OAAxDe,GAAGnU,EAAHmU,GAAAA,EAAAA,CAAAA,EAAAA,GAAAA,MAAAA,OAAAA,EAAAA,MAAAA,IAAAA,KAAAA,EAAAA,GAAAA,EAAAA,GAAwD,OAAWjU,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAuBW,EAAAA,GAAAA,IAAQ,IAAD,kBAAuBD,EAAAA,GAAAA,GAAQ,IAAIE,EAAJ,KAAW,UAAU,IAAIb,EAAJ,OAAaa,EAAAA,GAAAA,GAAAA,IAAAA,EAAcX,EAAAA,EAAAA,SAAAA,YAC7d,cAAc,OAAOG,IAAP,GAAa,cAAe,OAAOA,GAAGiT,GAAEvT,EAAFuT,CAAKtC,KAAAA,EAAAgC,aAAAA,EAAAgE,WAAAA,EAAAV,eAAAA,EAAAC,qBAAAA,GAAAA,EAAAA,EAAAA,IAAAA,GAAA5U,GAAAA,QAAiGxB,EAAAA,SAAAA,EAAAA,EAAAA,GAAmB,SAASA,EAAEU,GAAS,IAAIb,EAAJ,EAAQ,OAAO,IAAIW,EAAE2J,EAAb,KAAdzJ,IAAAA,IAAc,MAA6B,IAAIF,EAAJ,kGAA+G2S,GAAEvT,EAAFuT,CAAKtC,KAAZ9Q,EAAAA,GAAAA,GAAY8S,aAAAA,EAAAsD,eAAAA,EAAAC,qBAAAA,GAA8D,CAAEpE,IAAAA,KAAQsF,EAAAA,SAAAA,EAAAA,GAAwB,IAAIvX,EAAJ,iBAAPU,EAAAA,GAAAA,IAA+B0S,GAAEvT,EAAFuT,CAAKtC,KAAAA,EAAAgC,aAAAA,SAAAA,GAAgC,IAAIrS,EAC3fkU,EAAE1U,GAAF0U,GAAAhU,EAAAA,EAAAA,EAAc,qBAAqBZ,GAAAA,IAAOA,EAAF,CAAK,IAAII,EAAJ,IAAU,kBAAqC,GAAnBL,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,QAAmB,mBAA2BQ,GAAL,4BAAoCR,EAAAA,EAAAA,OAAO,CAAgB,IAAXQ,EAAAA,MAAAA,GAAW,IAAQP,EAAAA,IAAMA,EAAF,iCAAqCO,EAAAA,EAAAA,KAAAA,IAAmB,OAANyR,GAAG9R,GAAUK,GAAEwW,WAAAA,SAAAA,EAAAA,GAA0BrW,aAAa+W,cAAb/W,EAAAA,IAAAA,WAAAA,IAAgD,IAAIE,EAA0JZ,EAA9JD,EAAAA,iBAAAA,EAAgK,GAArIA,GAAAA,aAAAA,YAAAA,aAAAA,mBAAAA,aAAAA,WAAAA,EAAAA,yCAAqI,eAAkBa,EACtfF,EAAE8K,SAAS5K,EAAF,CAAK,IAAIR,EAAJ,gBAAsB,gEAA2D,EAAAM,EAAA,OAAgD,GAAhBN,GAAZJ,EAAAA,GAAAA,GAAJY,EAAAA,GAAIZ,IAAYI,EAAMwU,EAAE5U,GAAF4U,GAAAA,EAAU,MAAS,sBAAsBxU,EAAAA,EAAAA,EAAAA,EAAQ,YAAYG,EAAAA,EAAAA,SAAaA,EAAF,CAAK,IAAI+D,EAAJ,gBAAmG,GAA7E,qBAA+CA,EAAAA,QAAAA,KAAAA,IAAAA,IAAAA,KAAxB,mBAAsD,QAAW,cAAc1D,EAAEb,KAAFa,MAAS,CAAK,YAAY,gBAAgBA,EAAEb,KAAFa,IAAAA,GAAAA,MAAgB,CAAK,aAAa,gBAAgBA,EAAEb,KAAFa,IAAAA,GAAAA,OAAiB,CAAK,gBAAgBA,EAAEb,KAAFa,IAAAA,GAAAA,GAAiBA,EAAEb,KAAFa,IAAAA,GAAAA,GAAAA,GAAoBA,EAAEb,KACvf,YAAYa,EAAEb,KAAFa,IAAAA,GAAAA,GAAiBA,EAAEb,GAAFa,QAAQ,aAAkBb,EAAAA,IAAMA,EAAF,2GAA+G,IAAL,IAAaA,EAAAA,IAAMA,EAAF,YAAuC,OAAvB,uBAA8BC,GAAEqW,eAAAA,EAAAC,qBAAAA,GAAA5U,GAAAA,SAAAA,GAAyDsQ,GAAG9R,OAAMoE,EAAAA,SAAAA,EAAAA,EAAAA,GAA0B,GAAPrE,EAAAA,GAAAA,GAAO,MAAU,IAAIC,EAAJ,GAAaQ,EAAJ,GAAaE,EAAJ,GAAab,EAAJ,MAAiBC,EAAJ,OAAQ,aAAAU,EAAA,qBAAyC2S,GAAEvT,EAAFuT,CAAKtC,KAAAA,EAAAgC,aAAAA,SAAAA,GAAgC,oCAAoClR,GAAAA,IAAOA,EAAF,CAAK,IAAIY,EAC5frC,EAAAA,EAAAA,EAAAA,EAAQ,qFAA2F,OAAN4R,GAAG5R,GAAUmE,GAAEwS,WAAAA,SAAAA,EAAAA,GAA0B,sEAAsE,IAAIzS,EAAJ,KAAAC,EAAAA,GAAAA,EAAAA,EAAAA,GAAwE,OAAjDqQ,EAAErQ,GAAFqQ,GAAAA,GAAAA,EAAalU,EAAEH,EAAFG,EAAAA,EAAAA,EAAAA,GAAa,uBAA8B6D,GAAE8R,eAAAA,EAAAC,qBAAAA,GAAA5U,GAAAA,SAAAA,GAAyDsQ,GAAG5R,OAAMoI,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAyBmK,GAAG7S,GAAH6S,CAAO5B,KAAAA,GAAAA,GAAArB,GAAAA,GAAAA,EAAAA,GAAAf,GAAAA,GAAAA,EAAAA,GAAA0B,GAAAA,KAAqCnL,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAiCyN,GAAG7S,GAAGuQ,GAAG9O,KAAK,CAACoQ,GAAAA,GAAAA,GAAAM,GAAAA,EAAAyF,GAAAA,GAAAA,EAAAA,GAAA1F,GAAAA,EAAAM,GAAAA,EACpdqF,GAAAA,GAAAA,EAAAA,GAAApF,GAAAA,KAAiBjK,EAAAA,SAAAA,EAAAA,GAAwB+K,GAAEvT,EAAFuT,CAAKlB,IAAAA,EAAApB,KAAZpQ,EAAAA,GAAAA,GAAY0V,eAAAA,EAAAtD,aAAAA,aAAuDgE,WAAAA,gBAA2BpX,EAAAA,SAAAA,EAAAA,EAAAA,GAAmBG,EAAAA,EAAAA,GAAQa,EAAAA,GAAAA,EAAAA,aAAoB,IAAIT,EAAJ,GAAAQ,EAAAA,EAAAA,GAA0B,OAAVkU,EAAE3U,GAAF2U,GAAAA,EAAiBjU,EAAEoW,WAAW7W,EAApB,IAAyB0B,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAuB9B,EAAAA,GAAAA,GAAQa,EAAAA,EAAAA,GAAQV,EAAAA,GAAAA,GAAQ,IAAIW,EAAJ,GAAsB,OAAbgU,EAAE1U,GAAF0U,GAAAA,EAAAA,GAAoB9U,EAAEa,EAAT,QAAkBC,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,IAAqBd,EAAAA,GAAAA,IAAQa,EAAAA,EAAAA,GAAQV,EAAAA,GAAAA,GAAQH,KAAAA,IAAcsM,EAAAA,GAAA1L,EAAAA,SAAAA,EAAAA,GAAsB,IAAIT,EAzBxK,SAAYH,EAAZ,GAAiB,uBAAuBI,EAAAA,IAAMA,EAAF,oCAAwC,OAAOD,EAyByE,MAAAC,EAAAA,EAAAA,GAAqBS,EAAAA,EAAAA,KAAAA,KAAAA,EAAAA,MAAAA,GAAAA,KAAAA,SAAAA,GAAyC,OAAOZ,EAAEgR,QAAO3H,KAAK,KAAP,IAAgB,IAAI1I,EAAJ,MAAY,YAClfA,EAAAA,OAAAA,EAAW,IAAIE,EAAJ,WAA8N,OAA7MF,EA1BuJ,SAAYZ,GAAG,IAAIa,EAAJ,UAA2B,OAAX2U,GAAG/T,KAAKzB,GAAUa,EA0BxMD,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,KAAiB,gBAAgB6D,EAAAA,EAAAA,IAAQA,EAAF,+DAAqF,IAAlBxE,EAAAA,EAAAA,GAAAA,MAAAA,EAAAA,GAAkB,IAAQwE,EAAAA,EAAAA,IAAQA,EAAF,2BAA+B,qCAA2CgR,GAAG5U,GAAV,GAAeuH,EAAAA,SAAAA,GAAuB,OAARpI,EAAAA,GAAAA,GAAewR,EAAE3R,EAAEG,KAAI2R,EAAAA,SAAAA,EAAAA,GAAiC,OAAhB3R,EAAAA,EAAAA,GAAQa,EAAAA,EAAAA,GAAe2Q,EAAExR,EAAEa,KAAIgC,EAAAA,SAAAA,GAAe,mBAAkBiI,EAAAA,SAAAA,GAAe,OAAO0G,EAAE+D,GAAGvV,KAAI0H,EAAAA,SAAAA,GAA2BoL,GAAZ,MAAkB2B,GAAGzU,IAAGwH,EAAAA,SAAAA,EAAAA,GACrb,OADkexH,GAA5BA,EAAAA,GAAAA,EAAAA,sBAA4BA,qBAAAA,GAC3dwR,EAAExR,IAAG+B,EAAAA,WAAc6O,EAAG,KAAIkH,EAAAA,SAAAA,GAAe,IAAIjX,EAAJ,SAAsB,eAAPb,KAAAA,GAAO,SAAyB,YAAY,KAAKG,GAAAA,EAAAA,CAAM,IAAIC,EAAJ,WAAiBA,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,WAA0B,IAAIQ,EAAJ,KAAWR,EAAAA,KAAAA,IAAAA,EAAAA,GAAgBQ,EAAAA,EAAAA,IAAAA,KAAAA,EAAAA,WAAAA,GAAAA,MAAAA,EAAAA,OAAAA,OAAmDC,EAAAA,CAAG,IAAI2E,EAAGuS,KAAKnX,EAAR4E,EAAAA,WAAAA,QAAAA,IAAoCsK,IAAK,IAAIhP,EAAJ,EAAQ,MAAMD,EAAE,UAAUC,OAAAA,EAAS,cAAc,UAASoC,EAAAA,WAAc,OAAO,IAAGH,EAAAA,WAAc,OAAO,IAAGoC,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAqB,YAAArE,EAAA,EAAgBA,EAAAA,EAAIA,IAAAA,CAAK,IAAIb,EAAJ,QAAAC,EAAAA,EAAAA,EAAAA,GAAAA,GAA0BW,GAAAA,EAAK,YAAYP,EAAAA,EAAIA,IAAAA,CAAK,IAAIG,EAAJ,IAC3eH,GAAAkE,EAAAA,GAAAA,GAAW,yDAA4D5D,GAAAA,EAAe,OAAVkU,EAAE1U,GAAF0U,GAAAA,EAAiB,KAC7F,WAAY,SAAS9U,EAAEY,GAAGf,EAAEmY,IAAFnY,EAAAA,QAAgB2F,EAAAA,EAAAA,IAAAA,EAAWsK,IAAKzF,EAAAA,EAAAA,IAAAA,EAAWkG,EAAGC,QAAQ3Q,EAAEmY,IAAIvH,GAAGC,IAAK7Q,EAAEoY,wBAAFpY,EAAAA,uBAAAA,GAAuD,gEAAuE,SAASgB,EAAED,GAAGZ,EAAEY,EAAEsX,UAAU,SAAS/X,EAAES,GAAG,OAxDtQ,WAAc,eAAkB,sEAAsEuX,YAAAA,gBAA4BC,MAAK,SAAP,GAAmB,2DAA2D,OAAOpY,EAAEqY,iBAAgBC,OAAM,WAAW,OAAOjL,OAAO,uCAAuCuB,EAAG6B,GAAH7B,SAAAA,GAAiB5O,EAAE,IAAImP,WAAWhP,MAAI,MAAM,OAAOqO,QAAQ+J,UAAUH,MAAK,WAAW,OAAO/K,OAwD5HrD,GAAKoO,MAAK,SAAjB,GAA6B,OAAOI,YAAYC,YAAY3X,EAA/B,MAAsCsX,MAAK,SAAP,GAAmB,OAAOtX,KAAIsX,KAAKxX,GAAP,YAAqB2O,EAAG,0CAAHA,GAAgDqB,EAAG9P,MAAK,IAAIV,EAAJ,CAAOS,EAAAA,IACvb,GAD6b6P,IAAK7Q,EAAEoY,wBAAFpY,EAAAA,uBAAAA,GAClc,sBAAyB,OAAOA,EAAE6Y,gBAAgBtY,EAAzB,GAA8B,SAAS,OAAOmP,EAAG,sDAAV,OAAyFpC,GAAP,0HAAsIgL,YAAAA,gBAA4BC,MAAK,SAAP,GAAmB,OAAOI,YAAYG,qBAAqB/X,EAAxC,uBAAwJ,OAAxF2O,EAAG,kCAAHA,GAAwCA,EAAG,6CAAoDpP,EAAEU,UAAWyX,MAAM1W,GADvf,GAEa/B,EAAE+Y,mBAAF/Y,WAAgC,4DAA4D,IACrBgZ,GADyB3G,GAAJ,mBAA0B,kDAAiD4G,GAAAA,EAAAA,QAAAA,WAAyB,oDAAmDlB,GAAAA,EAAAA,eAAAA,WAAgC,2DAEhS,SAASmB,KAAK,SAAS/Y,IAAI,mCAAoG,GAAhE+H,EAAGwI,GAAIzQ,EAAGD,GAAG,iDAAmD,oEAAuEA,EAAEmZ,QAAQtN,QAAO,CAAE,IAAI7K,EAAJ,kBAAwBqM,EAAGsD,QAAQ3P,GAAGkH,EAAGmF,IAAK,WAAY,mEAAmErN,EAAEoZ,OAAOvN,QAAO/K,IAAMoH,EAAGuC,GAAI,oEAAoE4O,YAAW,WAAWrZ,EAAEsZ,UAAU,MAAI,GAAInZ,MAAI,UACre,GAH2VH,EAAEuZ,6BAAFvZ,WAA0C,sEACrYA,EAAEwZ,aAAFxZ,WAA0B,sDAA6D0N,EAAAA,SAAAA,IAAiBsL,IAAAA,KAASA,KAAAA,EAAAA,IAEjH,oEAAuE,oBAAmBhZ,EAAAA,QAAAA,KAAAA,GAG1F,OAH6GkZ,KAG7G,UAtGW,GA0GX,QAAenZ,G,g7BCvGR,MAAM0Z,EAA4B,IAQxC,IARM,OACPrT,EAAAA,SACAsT,EAAAA,cACAC,EAAAA,GAAAA,SACAC,EAAAA,KACAC,EAAAA,IACAC,EAAAA,UACAC,GACC,EACD,6BACA,YAGA,MA0DA,GA1DA,IACA,gDAEA,mBACA,kBACA,qBACAD,EACAC,EACA,CACAC,KAAAA,EACAC,KAAAA,EACAC,KAAAA,EAAAA,MACAC,KAAAA,EAAAA,QAEAT,EAAAA,QAEA,kBACAU,EAAAA,OAAAA,GACA,yBACA,UACAC,EACAC,GAEA,QACA,QAOA,OALAC,EAAAA,SACAF,EAAAA,SACAC,EAAAA,SACAF,EAAAA,SAEA,QAEA,gBACA,eACA,gBACA,iBACAI,EAAAA,YAAAA,EAAAA,GAEA,MAGA,gBACA,iBACAA,EAAAA,YAAAA,EAAAA,GAEA,MAGA,cACA,iBACAA,EAAAA,UAAAA,EAAAA,MAOA,UAAsCC,GAMtC,OALArU,EAAAA,iBAAAA,YAAAA,GACAA,EAAAA,iBAAAA,WAAAA,GACAA,EAAAA,iBAAAA,YAAAA,GACAA,EAAAA,iBAAAA,YAAAA,GACAA,EAAAA,iBAAAA,UAAAA,GACA,KACAA,EAAAA,oBAAAA,YAAAA,GACAA,EAAAA,oBAAAA,WAAAA,GACAA,EAAAA,oBAAAA,YAAAA,GACAA,EAAAA,oBAAAA,YAAAA,GACAA,EAAAA,oBAAAA,UAAAA,OCrFIsU,EAA2B,GAG/B,SAAS,EAAoBC,GAE7B,WACA,cACA,iBAGA,YAGAC,QAAAA,IAOA,OAHAC,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAGA,UCpBAC,EAAoBva,EAAI,CAACqa,EAASG,KAClC,eACA,qBACApL,OAAAA,eAAAA,EAAAA,EAAAA,CAAwC6H,YAAAA,EAAAD,IAAAA,EAAAA,MCJxCuD,EAAoB7C,EAAI,CAAC+C,EAAKC,IAAS,OAApBH,UAAAA,eAAAA,KAAAA,EAAAA,GCCnBA,EAAoBlW,EAAI,IACxB,iDACA+K,OAAAA,eAAAA,EAAAA,OAAAA,YAAAA,CAAsDwB,MAAAA,WAEtDxB,OAAAA,eAAAA,EAAAA,aAAAA,CAA+CwB,OAAAA,K,gNCYnC+J,EAWAC,E,o2CAXZ,SAAYD,GACVA,EAAAA,MAAAA,QACAA,EAAAA,QAAAA,UACAA,EAAAA,KAAAA,OACAA,EAAAA,SAAAA,WACAA,EAAAA,UAAAA,YACAA,EAAAA,KAAAA,OACAA,EAAAA,UAAAA,YAPF,CAAYA,IAAAA,EAAG,KAWf,SAAYC,GACVA,EAAAA,OAAAA,SACAA,EAAAA,QAAAA,UACAA,EAAAA,UAAAA,YACAA,EAAAA,SAAAA,WACAA,EAAAA,WAAAA,aACAA,EAAAA,YAAAA,cACAA,EAAAA,WAAAA,aACAA,EAAAA,aAAAA,eACAA,EAAAA,YAAAA,cATF,CAAYA,IAAAA,EAAS,KAuBrB,IAoQYC,EApQZ,aAaE,WAAYC,G,gBACVxa,KAAKiZ,IAAiB,QAAX,EAAM,OAANuB,QAAM,IAANA,OAAM,EAANA,EAAQvB,WAAG,QAAIoB,EAAII,QAC9Bza,KAAKkZ,UAA6B,QAAjB,EAAM,OAANsB,QAAM,IAANA,OAAM,EAANA,EAAQtB,iBAAS,QAAIoB,EAAUI,OAChD1a,KAAKmZ,KAAmB,QAAZ,EAAM,OAANqB,QAAM,IAANA,OAAM,EAANA,EAAQrB,YAAI,QAAI,EAC5BnZ,KAAKoZ,KAAmB,QAAZ,EAAM,OAANoB,QAAM,IAANA,OAAM,EAANA,EAAQpB,YAAI,QAAI,EAC5BpZ,KAAKqZ,KAAmB,QAAZ,EAAM,OAANmB,QAAM,IAANA,OAAM,EAANA,EAAQnB,YAAI,QAAI,EAC5BrZ,KAAKsZ,KAAmB,QAAZ,EAAM,OAANkB,QAAM,IAANA,OAAM,EAANA,EAAQlB,YAAI,QAAI,EAkFhC,OA9ESqB,EAAAA,IAAP,SAAWC,G,IACT3B,EAAG,MACHC,EAAS,YACTC,EAAI,OACJC,EAAI,OACJC,EAAI,OACJC,EAAI,OAKJ,OAHAzZ,QAAQgb,KACN,oEAEK,IAAIF,EAAO,CAAE1B,IAAG,EAAEC,UAAS,EAAEC,KAAI,EAAEC,KAAI,EAAEC,KAAI,EAAEC,KAAI,KAMrDqB,EAAAA,UAAAA,SAAP,SAAgBC,G,IACd3B,EAAG,MACHC,EAAS,YACTC,EAAI,OACJC,EAAI,OACJC,EAAI,OACJC,EAAI,OAEJ,OAAO,IAAIqB,EAAO,CAChB1B,IAAQ,OAAHA,QAAG,IAAHA,EAAAA,EAAOjZ,KAAKiZ,IACjBC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAalZ,KAAKkZ,UAC7BC,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQnZ,KAAKmZ,KACnBC,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQpZ,KAAKoZ,KACnBC,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQrZ,KAAKqZ,KACnBC,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQtZ,KAAKsZ,QAKhBqB,EAAAA,UAAAA,WAAP,SAAkB3B,GAChB,OAAIhZ,KAAK8a,iBAAyB9a,KAAK8a,kBAGX7B,EAAxBjZ,KAAKiZ,MAAQoB,EAAIU,MAAa/B,EAAKqB,IAAIW,MAClChb,KAAKiZ,MAAQoB,EAAII,QAAezB,EAAKqB,IAAIY,QACzCjb,KAAKiZ,MAAQoB,EAAIa,KAAYlC,EAAKqB,IAAIc,KACtCnb,KAAKiZ,MAAQoB,EAAIe,SAAgBpC,EAAKqB,IAAIgB,SAC1Crb,KAAKiZ,MAAQoB,EAAIiB,UAAiBtC,EAAKqB,IAAIkB,UAC3Cvb,KAAKiZ,MAAQoB,EAAImB,UAAiBxC,EAAKqB,IAAIoB,UACzCzC,EAAKqB,IAAIqB,KAEpB1b,KAAK8a,iBAAmB7B,EACjBA,GAVP,IAAIA,GAcC0B,EAAAA,UAAAA,iBAAP,SAAwB3B,GACtB,OAAIhZ,KAAK2b,uBAA+B3b,KAAK2b,wBAI3CzC,EADElZ,KAAKkZ,YAAcoB,EAAUsB,QACnB5C,EAAKsB,UAAUuB,QACpB7b,KAAKkZ,YAAcoB,EAAUwB,UACxB9C,EAAKsB,UAAUyB,UACpB/b,KAAKkZ,YAAcoB,EAAU0B,SACxBhD,EAAKsB,UAAU2B,SACpBjc,KAAKkZ,YAAcoB,EAAU4B,WACxBlD,EAAKsB,UAAU6B,WACpBnc,KAAKkZ,YAAcoB,EAAU8B,YACxBpD,EAAKsB,UAAU+B,YACpBrc,KAAKkZ,YAAcoB,EAAUgC,WACxBtD,EAAKsB,UAAUiC,WACpBvc,KAAKkZ,YAAcoB,EAAUkC,aACxBxD,EAAKsB,UAAUmC,aACpBzc,KAAKkZ,YAAcoB,EAAUoC,YACxB1D,EAAKsB,UAAUqC,YACZ3D,EAAKsB,UAAUsC,OAEhC5c,KAAK2b,uBAAyBzC,EACvBA,GApBP,IAAIA,GAsBR,EArGA,GAgHA,aAcE,cAyCF,OAtCiB2D,EAAAA,YAAf,WACEC,EAAAA,QAAW,CAETC,WAAY,WAAM,OAAAF,EAAcG,WAC/BtF,MAAK,SAACsB,G,MAGP,IAFA6D,EAAcI,QAAUjE,EAEjB6D,EAAcK,cAAclS,OAAS,GACP,QAAnC,EAAA6R,EAAcK,cAAcC,eAAO,SAAGN,EAAcI,aAM5CJ,EAAAA,YAAd,SAA0BO,GAEnBP,EAAcQ,YACjBR,EAAcQ,WAAY,EAC1BR,EAAcS,eAEXT,EAAcI,QAGjBG,EAASP,EAAcI,SAFvBJ,EAAcK,cAAcnc,KAAKqc,IAOvBP,EAAAA,cAAd,WACE,OAAO,IAAI/O,SAAuB,SAAC+J,GACjC,OAAAgF,EAAcU,aAAY,SAACvE,GAA8B,OAAAnB,EAAQmB,UAKvD6D,EAAAA,WAAd,SAAyBW,GACvBX,EAAcG,QAAUQ,GAjDXX,EAAAA,WAAY,EAEZA,EAAAA,cAAmC,GAKnCA,EAAAA,QAAU,qBAAqBY,EAAAA,KAAgB,IAAIA,EAAAA,QAAmB,aA4CvF,EAvDA,GA+DA,aAaE,WACUC,EACA7E,EACRoE,EACOU,GAHC,KAAAD,UAAAA,EACA,KAAA7E,SAAAA,EAED,KAAA8E,QAAAA,EAhBF,KAAAC,UAAY,EAIZ,KAAAC,QAAyB,KAc9B7d,KAAKwX,SAAW,IAAIyF,EAAQa,wBAAwBJ,EAAW7E,GA4DnE,OAxDE/J,OAAAA,eAAWiP,EAAAA,UAAAA,OAAI,C,IAAf,WACE,OAAO/d,KAAK0d,UAAUnN,M,gCAIxBzB,OAAAA,eAAWiP,EAAAA,UAAAA,OAAI,C,IAAf,WACE,OAAO/d,KAAKwX,SAASwG,M,IAIvB,SAAgB1N,GACdtQ,KAAKwX,SAASwG,KAAO1N,G,gCAIvBxB,OAAAA,eAAWiP,EAAAA,UAAAA,YAAS,C,IAApB,WACE,OAAO/d,KAAK0d,UAAUO,W,gCAQjBF,EAAAA,UAAAA,QAAP,SAAeC,GACQ,OAAjBhe,KAAK6d,QACP7d,KAAKwX,SAAS0G,QAAQF,IAEtBhe,KAAKwX,SAASwG,KAAO,EACrBhe,KAAKwX,SAAS0G,QAAQle,KAAK6d,SAC3B7d,KAAK6d,QAAU,OAWZE,EAAAA,UAAAA,MAAP,SAAaI,GACXne,KAAKwX,SAASpH,MAAM+N,IAGtBrP,OAAAA,eAAWiP,EAAAA,UAAAA,aAAU,C,IAArB,WACE,OAAwB,OAAjB/d,KAAK6d,S,gCAOPE,EAAAA,UAAAA,QAAP,WACE/d,KAAKwX,SAAShX,UAElB,EA/EA,IAqFA,SAAY+Z,GACVA,EAAAA,EAAAA,OAAAA,IAAAA,SACAA,EAAAA,EAAAA,QAAAA,IAAAA,UACAA,EAAAA,EAAAA,QAAAA,IAAAA,UAHF,CAAYA,IAAAA,EAAqB,KASjC,IAocY6D,EAoBAC,EAxdZ,aACE,WACkBlX,EACRmX,GADQ,KAAAnX,KAAAA,EACR,KAAAmX,aAAAA,EAgCZ,OA1BExP,OAAAA,eAAWyP,EAAAA,UAAAA,OAAI,C,IAAf,WACE,OAAOve,KAAKse,aAAa/N,M,gCAM3BzB,OAAAA,eAAWyP,EAAAA,UAAAA,QAAK,C,IAAhB,WACE,OAAOve,KAAKse,aAAahO,O,IAM3B,SAAiBA,GACftQ,KAAKse,aAAahO,MAAQA,G,gCAMrBiO,EAAAA,UAAAA,KAAP,WACMve,KAAKmH,OAASoT,EAAsBiE,SACtCxe,KAAKse,aAAaG,QAGxB,EAnCA,GAqCA,aAgBE,WACU9E,EACRsD,EACOU,EACC9E,GAHA,KAAAc,aAAAA,EAED,KAAAgE,QAAAA,EACC,KAAA9E,SAAAA,EAhBM,KAAA6F,OAA8B,GAkB5C1e,KAAKwX,SAAW,IAAIyF,EAAQ0B,qBAAqBhF,EAAcd,GAC/D7Y,KAAK4e,WAAW3B,GAuEpB,OApEEnO,OAAAA,eAAW+P,EAAAA,UAAAA,OAAI,C,IAAf,WACE,OAAO7e,KAAK2Z,aAAapJ,M,gCAM3BzB,OAAAA,eAAW+P,EAAAA,UAAAA,gBAAa,C,IAAxB,WAEE,IADA,IAAMC,EAAkB,GACf/H,EAAI,EAAGA,EAAI/W,KAAKwX,SAASuH,oBAAqBhI,IACrD+H,EAAM/d,KAAKf,KAAKwX,SAASwH,wBAAwBjI,IAEnD,OAAO+H,G,gCAOFD,EAAAA,UAAAA,QAAP,SAAeb,GACbhe,KAAKwX,SAAS0G,QAAQF,IAOhBa,EAAAA,UAAAA,WAAR,SAAmB5B,GAEjB,IAAK,IAAIlG,EAAI,EAAGA,EAAI/W,KAAKwX,SAASyH,aAAclI,IAAK,CACnD,IAAMmI,EAAQlf,KAAKwX,SAAS0H,MAAMnI,GAClC/W,KAAK0e,OAAO3d,KAAKf,KAAKmf,gBAAgBD,EAAOjC,MAQzC4B,EAAAA,UAAAA,gBAAR,SACEK,EACAjC,GAEA,OAAIiC,EAAM/X,OAAS8V,EAAQmC,SAASC,KAC3B,IAAId,EACThE,EAAsB+E,QACtBJ,EAAMK,UAECL,EAAM/X,OAAS8V,EAAQmC,SAASI,OAClC,IAAIjB,EACThE,EAAsBkF,OACtBP,EAAMQ,YAECR,EAAM/X,OAAS8V,EAAQmC,SAASO,QAClC,IAAIpB,EACThE,EAAsBiE,QACtBU,EAAMU,kBAHH,GAYFf,EAAAA,UAAAA,QAAP,WACE7e,KAAKwX,SAAShX,UAElB,EA9FA,GAuGA,aASE,WACUyc,EACApE,EACAgH,EACQC,EACAhH,QADA,IAAAgH,IAAAA,EAAAA,SACA,IAAAhH,IAAAA,EAAAA,IAJR,KAAAmE,QAAAA,EACA,KAAApE,SAAAA,EACA,KAAAgH,aAAAA,EACQ,KAAAC,WAAAA,EACA,KAAAhH,cAAAA,EAiSpB,OAvRSiH,EAAAA,UAAAA,IAAP,SACEC,EACArC,EACAsC,GAIA,QAJA,IAAAA,IAAAA,GAAY,GAIe,KAF3BD,EAAcE,EAAiBF,IAEfhV,OACdhL,KAAK8f,WAAWngB,SAAQ,SAACQ,GAAM,OAACA,EAAEwd,QAAUA,KAC5C3d,KAAK8Y,cAAcnZ,SAAQ,SAACR,GAAM,OAACA,EAAEwe,QAAUA,SAC1C,CAEL,IAAMwC,EAA0BngB,KAAK8f,WAAWM,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,QACvD8P,EAAwBrgB,KAAK8Y,cAAcsH,KAAI,SAACjhB,GAAM,OAAAA,EAAEoR,QAC9D,IAAK,IAAMwG,KAAKiJ,EAAa,CAC3B,IAAMM,EAASH,EAAwBI,QAAQP,EAAYjJ,IACrDyJ,EAASH,EAAsBE,QAAQP,EAAYjJ,IACzD,GAAIuJ,GAAU,GAAKE,GAAU,EACvBF,GAAU,EAEZtgB,KAAK8f,WAAWQ,GAAQ3C,QAAUA,EAGlC3d,KAAK8Y,cAAc0H,GAAQ7C,QAAUA,MAElC,CAEL,IAAM8C,EAAOzgB,KAAK6Y,SAAS6H,gBAAgBV,EAAYjJ,IACvD,GAAI0J,EAAM,CACR,IAAME,EAAe,IAAI5C,EACvB0C,EACAzgB,KAAK6Y,SACL7Y,KAAKid,QACLU,GAGFgD,EAAazC,QAAQ,GACrByC,EAAavQ,MAAM,GACnBpQ,KAAK8f,WAAW/e,KAAK4f,OAChB,CAEL,IAAMC,EAAK5gB,KAAK6Y,SAASgI,mBAAmBb,EAAYjJ,IACxD,GAAI6J,EAAI,CACN,IAAME,EAAkB,IAAIjC,EAC1B+B,EACA5gB,KAAKid,QACLU,EACA3d,KAAK6Y,UAEP7Y,KAAK8Y,cAAc/X,KAAK+f,OAqBlC,OAdIb,IACEtC,EACF3d,KAAK6f,aAAapB,KAAK,CACrBtX,KAAMiX,EAAU2C,KAChBC,KAAMhhB,KAAK2d,UAGb3d,KAAK6f,aAAapB,KAAK,CACrBtX,KAAMiX,EAAU6C,MAChBD,KAAMhhB,KAAKkhB,UAKVvD,EAAU3d,KAAK2d,QAAU3d,KAAKkhB,QAQhCnB,EAAAA,UAAAA,KAAP,SAAYC,GACV,OAAOhgB,KAAKmN,IAAI6S,GAAa,IASxBD,EAAAA,UAAAA,MAAP,SAAaC,GACX,OAAOhgB,KAAKmN,IAAI6S,GAAa,IASxBD,EAAAA,UAAAA,MAAP,SAAaC,EAAuB1P,GAClC,IAAM6Q,EAAenhB,KAAK8f,WAAWsB,QAAO,SAACjhB,GAC3C,OAAA6f,EAAYqB,SAASlhB,EAAEoQ,SAGzB,OADA4Q,EAAaxhB,SAAQ,SAACQ,GAAM,OAACA,EAAE0d,QAAUvN,KAClC6Q,EAAaf,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,SAOnCzB,OAAAA,eAAWiR,EAAAA,UAAAA,UAAO,C,IAAlB,WACE,OAAO/f,KAAK8f,WACTsB,QAAO,SAACjhB,GAAM,OAAAA,EAAEwd,WAChByC,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,QACb+Q,OAAOthB,KAAK8Y,cAAcsI,QAAO,SAACjiB,GAAM,OAAAA,EAAEwe,WAASyC,KAAI,SAACjhB,GAAM,OAAAA,EAAEoR,U,gCAOrEzB,OAAAA,eAAWiR,EAAAA,UAAAA,SAAM,C,IAAjB,WACE,OAAO/f,KAAK8f,WACTsB,QAAO,SAACjhB,GAAM,OAACA,EAAEwd,WACjByC,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,QACb+Q,OAAOthB,KAAK8Y,cAAcsI,QAAO,SAACjiB,GAAM,OAACA,EAAEwe,WAASyC,KAAI,SAACjhB,GAAM,OAAAA,EAAEoR,U,gCAQ/DwP,EAAAA,UAAAA,KAAP,SAAYC,GAAZ,WAIMuB,EAAyB,GAE7B,GAA2B,KAL3BvB,EAAcE,EAAiBF,IAKfhV,OACduW,EAAevhB,KAAK8f,WACjBM,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,QACb+Q,OAAOthB,KAAK8Y,cAAcsH,KAAI,SAACjhB,GAAM,OAAAA,EAAEoR,SAE1CvQ,KAAK8f,WAAWngB,SAAQ,SAACQ,GAAM,OAAAA,EAAE8N,aACjCjO,KAAK8Y,cAAcnZ,SAAQ,SAACR,GAAM,OAAAA,EAAE8O,aAEpCjO,KAAK8f,WAAW3U,OAAO,EAAGnL,KAAK8f,WAAW9U,QAC1ChL,KAAK8Y,cAAc3N,OAAO,EAAGnL,KAAK8Y,cAAc9N,YAC3C,CAEL,IAAMwW,EAAqBxhB,KAAK8f,WAAWsB,QAAO,SAACjhB,GACjD,OAAA6f,EAAYqB,SAASlhB,EAAEoQ,SAGzBiR,EAAmB7hB,SAAQ,SAACQ,GAC1BA,EAAE8N,UACFwT,EAAK3B,WAAW3U,OAAOsW,EAAK3B,WAAWS,QAAQpgB,GAAI,MAErD,IAAMuhB,EAAmB1hB,KAAK8Y,cAAcsI,QAAO,SAACjiB,GAClD,OAAA6gB,EAAYqB,SAASliB,EAAEoR,SAEzBmR,EAAiB/hB,SAAQ,SAACR,GACxBA,EAAE8O,UACFwT,EAAK3I,cAAc3N,OAAOsW,EAAK3I,cAAcyH,QAAQphB,GAAI,MAE3DoiB,EAAeC,EACZpB,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,QACb+Q,OAAOI,EAAiBtB,KAAI,SAACjhB,GAAM,OAAAA,EAAEoR,SAS1C,OANAvQ,KAAK6f,aAAapB,KAAK,CACrBtX,KAAMiX,EAAUuD,KAChBX,KAAMO,IAIDA,GAMTzS,OAAAA,eAAWiR,EAAAA,UAAAA,YAAS,C,IAApB,WACE,OACE/f,KAAK8f,WAAW8B,QAAO,SAACC,EAAKC,GAAS,OAAAD,GAAOC,EAAKnE,WAAS,IAC3D3d,KAAK8Y,cAAc8I,QAAO,SAACC,EAAKC,GAAS,OAAAD,GAAOC,EAAKnE,WAAS,I,gCAOlE7O,OAAAA,eAAWiR,EAAAA,UAAAA,WAAQ,C,IAAnB,WACE,OACG/f,KAAK+hB,YACL/hB,KAAK8f,WAAW9U,OAAS,GAAKhL,KAAK8Y,cAAc9N,OAAS,I,gCAO/D8D,OAAAA,eAAWiR,EAAAA,UAAAA,YAAS,C,IAApB,WACE,OAAkC,IAA3B/f,KAAK8f,WAAW9U,QAA8C,IAA9BhL,KAAK8Y,cAAc9N,Q,gCAOrD+U,EAAAA,UAAAA,WAAP,SAAkBpC,EAAkBsC,GAClC,IAAI+B,EAkBJ,YAnBkC,IAAA/B,IAAAA,GAAY,GAEf,IAA3BjgB,KAAK8f,WAAW9U,QAA8C,IAA9BhL,KAAK8Y,cAAc9N,SACjDhL,KAAK6Y,SAASoJ,iBAAmB,EAEnCjiB,KAAKmN,IACH,CAAE6U,EAAgBhiB,KAAK6Y,SAASqJ,iBAAiB,GAAG3R,MACpDoN,EACAsC,GAEOjgB,KAAK6Y,SAASsJ,oBAAsB,GAE7CniB,KAAKmN,IACH,CAAE6U,EAAgBhiB,KAAK6Y,SAASuJ,oBAAoB,GAAG7R,MACvDoN,EACAsC,IAIC+B,GAMFjC,EAAAA,UAAAA,cAAP,WACE,IAAwB,QAAAnF,EAAAA,KAAKkF,WAAWsB,QAAO,SAACjhB,GAAM,OAAAA,EAAEwd,WAAhC0E,EAAAA,EAAAA,OAAAA,IAA0C,CAA7D,IAAM3E,EAAS,KAEU,IAAxBA,EAAUO,WAAmBP,EAAUE,WACzCF,EAAUE,UAAY,EAEtB5d,KAAKiK,KAAKyT,EAAUnN,OACa,IAAxBmN,EAAUO,WAAmBP,EAAUE,WAChD5d,KAAK6f,aAAapB,KAAK,CACrBtX,KAAMiX,EAAUkE,KAChBtB,KAAM,CAAEtD,UAAWA,EAAUnN,KAAMpJ,KAAMkX,EAASiE,QAEpD5E,EAAUE,UAAY,GAKS,IAAxBF,EAAUO,WAAmBP,EAAUE,UAAY,IAC1D5d,KAAK6f,aAAapB,KAAK,CACrBtX,KAAMiX,EAAUkE,KAChBtB,KAAM,CAAEtD,UAAWA,EAAUnN,KAAMpJ,KAAMkX,EAASkE,YAEpD7E,EAAUE,UAAY,KASrBmC,EAAAA,UAAAA,mBAAP,WAEE,IADA,IAAMyC,EAA0B,GACL,IAAA5H,EAAAA,KAAK9B,cAAcsI,QAAO,SAACR,GAAO,OAAAA,EAAGjD,WAArC0E,EAAAA,EAAAA,OAAAA,IAA+C,CAArE,IAAM1I,EAAY,KACrB6I,EAAczhB,KAAI,MAAlByhB,EAAsB7I,EAAa6I,eAEjCA,EAAcxX,OAAS,GACzBhL,KAAK6f,aAAapB,KAAK,CACrBtX,KAAMiX,EAAUqE,YAChBzB,KAAMwB,KAId,EA/SA,IAwTA,SAAYpE,GACVA,EAAAA,KAAAA,OACAA,EAAAA,UAAAA,YACAA,EAAAA,KAAAA,OACAA,EAAAA,MAAAA,QACAA,EAAAA,KAAAA,OACAA,EAAAA,KAAAA,OACAA,EAAAA,KAAAA,OACAA,EAAAA,YAAAA,cARF,CAAYA,IAAAA,EAAS,KAoBrB,SAAYC,GACVA,EAAAA,QAAAA,UACAA,EAAAA,KAAAA,OACAA,EAAAA,SAAAA,WAHF,CAAYA,IAAAA,EAAQ,KAiCpB,iBACE,WAAoBqE,QAAA,IAAAA,IAAAA,EAAAA,IAAA,KAAAA,UAAAA,EAsDtB,OAnDUC,EAAAA,UAAAA,aAAR,SAAqBxb,GACnB,OAAOnH,KAAK0iB,UAAUtB,QAAO,SAAClhB,GAAM,OAAAA,EAAEiH,OAASA,MAI1Cwb,EAAAA,UAAAA,IAAP,SAAWC,GACJ5iB,KAAK0iB,UAAUrB,SAASuB,IAC3B5iB,KAAK0iB,UAAU3hB,KAAK6hB,IAQjBD,EAAAA,UAAAA,OAAP,SAAcC,GAIZ,IAAK,IAAI7L,EAAI,EAAGA,EAAI/W,KAAK0iB,UAAU1X,OAAQ+L,IAAK,CAC9C,IAAM8L,EAAkB7iB,KAAK0iB,UAAU3L,GACvC,GAAI8L,EAAgB1b,OAASyb,EAASzb,MAChC0b,EAAgBzF,WAAawF,EAASxF,SAAU,CAClDpd,KAAK0iB,UAAUvX,OAAO4L,EAAG,GACzB,SAYD4L,EAAAA,UAAAA,UAAP,SAAiBxb,GAAjB,WACOA,EAGHnH,KAAK0iB,UACFtB,QAAO,SAACxhB,GAAM,OAAAA,EAAEuH,OAASA,KACzBxH,SAAQ,SAACC,GAAM,SAAKkjB,OAAOljB,MAJ9BI,KAAK0iB,UAAUvX,OAAO,EAAGnL,KAAK0iB,UAAU1X,SASrC2X,EAAAA,UAAAA,KAAP,SAAYI,GACa/iB,KAAKgjB,aAAaD,EAAM5b,MAChCxH,SAAQ,SAACijB,GAAa,OAAAA,EAASxF,SAAS2F,OAE3D,EAvDA,GAqEA,aAGE,WAAoBlD,GAAA,KAAAA,aAAAA,EAFZ,KAAAoD,MAAgB,GAqB1B,OAhBSC,EAAAA,UAAAA,IAAP,SAAWC,GACTnjB,KAAKijB,MAAMliB,KAAKoiB,IAIXD,EAAAA,UAAAA,QAAP,WACE,KAAOljB,KAAKijB,MAAMjY,OAAS,GAAG,CAC5B,IAAMmY,EAAOnjB,KAAKijB,MAAM9F,SAChB,OAAJgG,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SACRD,EAAKC,UAEC,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMJ,QACR/iB,KAAK6f,aAAapB,KAAK0E,EAAKJ,SAIpC,EAtBA,GA+FA,aAmEE,WAAYvI,G,MApDJ,KAAA6I,eAAgB,EAQhB,KAAAC,kBAAmB,EAGnB,KAAA7b,QAAS,EAST,KAAA8b,iBAAkB,EAMlB,KAAA1K,SAA+B,KAG/B,KAAA2K,aAAoC,KAmBrC,KAAAC,UAAsB,GACtB,KAAAC,WAAuB,GACvB,KAAAC,WAAa,EA0PZ,KAAAC,kBAAoB,EAvP1B5jB,KAAKuF,OAASiV,EAAOjV,OACrBvF,KAAKkH,IAAMsT,EAAOtT,IAClBlH,KAAK6jB,OAASrJ,EAAOqJ,OACrB7jB,KAAK8jB,OAAsB,QAAb,EAAAtJ,EAAOsJ,cAAM,QAAI,IAAInJ,EAGnC3a,KAAK6f,aAAe,IAAI8C,EACpBnI,EAAOuJ,QAAQ/jB,KAAKgkB,GAAG5F,EAAU6F,KAAMzJ,EAAOuJ,QAC9CvJ,EAAO0J,aAAalkB,KAAKgkB,GAAG5F,EAAU+F,UAAW3J,EAAO0J,aACxD1J,EAAO4J,QAAQpkB,KAAKgkB,GAAG5F,EAAU2C,KAAMvG,EAAO4J,QAC9C5J,EAAO6J,SAASrkB,KAAKgkB,GAAG5F,EAAU6C,MAAOzG,EAAO6J,SAChD7J,EAAO8J,QAAQtkB,KAAKgkB,GAAG5F,EAAUuD,KAAMnH,EAAO8J,QAC9C9J,EAAO+J,QAAQvkB,KAAKgkB,GAAG5F,EAAUkE,KAAM9H,EAAO+J,QAC9C/J,EAAOgK,eACTxkB,KAAKgkB,GAAG5F,EAAUqE,YAAajI,EAAOgK,eAKpChK,EAAOpT,SAAWoT,EAAOuJ,QAAQ/jB,KAAKgkB,GAAG5F,EAAU6F,KAAMzJ,EAAOpT,QAChEoT,EAAOiK,cAAgBjK,EAAO0J,aAChClkB,KAAKgkB,GAAG5F,EAAU+F,UAAW3J,EAAOiK,aAClCjK,EAAOkK,SAAWlK,EAAO4J,QAAQpkB,KAAKgkB,GAAG5F,EAAU2C,KAAMvG,EAAOkK,QAChElK,EAAOmK,UAAYnK,EAAO6J,SAC5BrkB,KAAKgkB,GAAG5F,EAAU6C,MAAOzG,EAAOmK,SAC9BnK,EAAOoK,SAAWpK,EAAO8J,QAAQtkB,KAAKgkB,GAAG5F,EAAUuD,KAAMnH,EAAOoK,QAChEpK,EAAOqK,SAAWrK,EAAO+J,QAAQvkB,KAAKgkB,GAAG5F,EAAUkE,KAAM9H,EAAOqK,QAChErK,EAAOsK,gBAAkBtK,EAAOgK,eAClCxkB,KAAKgkB,GAAG5F,EAAUqE,YAAajI,EAAOsK,eAGxC9kB,KAAK+kB,UAAY,IAAI7B,EAAiBljB,KAAK6f,cAE3C7f,KAAKglB,KAAK,CACR9d,IAAKlH,KAAKkH,IACV2c,OAAQ7jB,KAAK6jB,OACboB,SAAUzK,EAAOyK,SACjBnF,WAAYtF,EAAOsF,WACnBhH,cAAe0B,EAAO1B,cACtBD,SAAU2B,EAAO3B,SACjBqM,qBAAsB1K,EAAO0K,uBAkxBnC,OA7wBgBhmB,EAAAA,IAAd,SAAkBsb,GAIhB,OAHA3a,QAAQgb,KACN,kEAEK,IAAI3b,EAAKsb,IAIVtb,EAAAA,UAAAA,KAAR,SAAa0b,GAAb,WACE1T,EAAG,MACH2c,EAAM,SACN/D,EAAU,aACVhH,EAAa,gBACbD,EAAQ,WACRsM,EAAAA,EAAAA,SAAAF,OAAQ,IAAG,GAAK,EAChBG,EAAAA,EAAAA,qBAAAF,OAAoB,IAAG,GAAK,EAM5B,GAJAllB,KAAKkH,IAAMA,EACXlH,KAAK6jB,OAASA,GAGT7jB,KAAKkH,MAAQlH,KAAK6jB,OACrB,MAAM,IAAIwB,MAAMnmB,EAAKomB,qBAIvB,IAAMC,EAAyBrF,EAAiBJ,GAG1C0F,EAA4BtF,EAAiBpH,GAGnD9Y,KAAKyH,QAAS,EACdzH,KAAKujB,iBAAkB,EAGvB1G,EAAc4I,gBACX/N,MAAK,SAACuF,GACLwE,EAAKxE,QAAUA,EAGfwE,EAAK1I,SAAW0I,EAAKxE,QAAQ1P,aAC3BkU,EAAKlc,OACL2f,GAKIzD,EAAKlc,OAAOiC,OAASia,EAAKlc,OAAOmgB,QACrCjE,EAAKkE,+BAIPlE,EAAKmE,SACH/M,EACA0M,EACAC,EACAP,GAECvN,MAAK,WACJ,IAAMmO,GACJpE,EAAKqE,SAAShN,eAAiB,IAE9BsI,QAAO,SAACR,GAAO,OAAAA,EAAGjD,WAClByC,KAAI,SAACQ,GAAO,OAAAA,EAAGpJ,YAClBiK,EAAK+B,cAAe,IAAA5K,2BAA0B,CAC5CrT,OAAQkc,EAAKlc,OACbsT,SAAU4I,EAAK5I,SACfC,cAAe+M,EACf9M,SAAU0I,EAAK1I,SACfC,KAAMyI,EAAKxE,QACXhE,IAAKwI,EAAKsE,QAAQC,WAAWvE,EAAKxE,SAClC/D,UAAWuI,EAAKsE,QAAQE,iBAAiBxE,EAAKxE,cAGjDrF,OAAM,SAAC1X,GACNL,QAAQC,MAAMI,SAGnB0X,OAAM,SAAC1X,GACNL,QAAQC,MAAMI,OAKNhB,EAAAA,UAAAA,SAAd,SACEgnB,EACAC,EACAC,EACAnB,G,iHAGIjlB,KAAKkH,KACPie,EAAAA,KAAc,GAAMkB,EAAarmB,KAAKkH,OADpC,M,OACFie,EAAKtB,OAASyC,EAAAA,O,iBAGJ,OAAZlB,EAAAA,KAAY,GAAMplB,KAAKid,QAAQpP,KAAK,IAAIY,WAAWzO,KAAK6jB,U,OAExD,OAFAuB,EAAKmB,KAAOD,EAAAA,OAERtmB,KAAKumB,MAEPvmB,KAAKwmB,aACHN,EACAC,EACAC,EACAnB,GAIFjlB,KAAKyH,QAAS,EACdzH,KAAK6f,aAAapB,KAAK,CACrBtX,KAAMiX,EAAU6F,KAChBjD,KAAc,QAAR,EAAAhhB,KAAKkH,WAAG,QAAI,WAKpBlH,KAAKujB,iBAAkB,EACvBvjB,KAAK+kB,UAAU0B,UAEfzmB,KAAK0mB,YAEE,CAAP,EAAO5Y,QAAQ+J,aAET8O,EAAM,wCACZ9mB,QAAQgb,KAAK8L,GACb3mB,KAAK6f,aAAapB,KAAK,CAAEtX,KAAMiX,EAAU+F,UAAWnD,KAAM2F,IACnD,CAAP,EAAO7Y,QAAQ8Y,OAAOD,aAKlBznB,EAAAA,UAAAA,aAAR,SACEgnB,EACAC,EACAC,EACAnB,GAGA,IAgCI4B,EAhCEC,EAAeZ,EACjBlmB,KAAKumB,KAAKQ,eAAeb,GACzBlmB,KAAKumB,KAAKS,kBAGd,IAAKF,EAAc,CACjB,IAAMH,EAAM,+CAGZ,OAFA9mB,QAAQgb,KAAK8L,QACb3mB,KAAK6f,aAAapB,KAAK,CAAEtX,KAAMiX,EAAU+F,UAAWnD,KAAM2F,IAO5D,GAHA3mB,KAAK6Y,SAAWiO,EAGZ9mB,KAAK6Y,SAASoJ,iBAAmB,EAGnC,MAFM0E,EAAM,6BACZ3mB,KAAK6f,aAAapB,KAAK,CAAEtX,KAAMiX,EAAU+F,UAAWnD,KAAM2F,IACpDA,EAIR3mB,KAAK8lB,SAAW,IAAI/F,EAClB/f,KAAKid,QACLjd,KAAK6Y,SACL7Y,KAAK6f,cAQHsG,EAAenb,OAAS,GAAKob,EAAkBpb,OAAS,GAC1D6b,EAAgBV,EAAe7E,OAAO8E,GACtCpmB,KAAK8lB,SAAS3Y,IAAI0Z,EAAe5B,GAAU,IAE3C4B,EAAgB,CAAC7mB,KAAK8lB,SAASmB,WAAWhC,GAAU,IAGtDjlB,KAAK+kB,UAAU5X,IAAI,CACjB4V,MAAO,CACL5b,KAAM8d,EAAW7G,EAAU2C,KAAO3C,EAAU6C,MAC5CD,KAAM6F,MAML3nB,EAAAA,UAAAA,UAAP,WACEc,KAAKknB,kBAoBChoB,EAAAA,UAAAA,KAAR,SAAa8e,EAAcmJ,GACzB,IAAMC,EAASC,YAAYC,MAG3BtnB,KAAKunB,eAAiB,KAGjBvnB,KAAKwnB,iBACRxnB,KAAKwnB,eAAiBxJ,GAIxBhe,KAAK4jB,mBAAqB5F,EAAOhe,KAAKwnB,eAClCxnB,KAAK4jB,kBAAoB,MAC3B5jB,KAAK4jB,kBAAoB,EACjB,OAARuD,QAAQ,IAARA,GAAAA,KAIF,IAAMM,GAAezJ,EAAOhe,KAAKwnB,gBAAkB,IACnDxnB,KAAKwnB,eAAiBxJ,EAUtB,IALA,IAKwB,IAAA0J,EALC1nB,KAAK8lB,SAAShG,WACpCsB,QAAO,SAACjhB,GAAM,OAAAA,EAAEwd,SAAWxd,EAAEwnB,cAG7BnjB,MAAK,SAACojB,GAAU,OAACA,EAAMD,YAAc,EAAI,KACpBtF,EAAAA,EAAAA,OAAAA,IAAkB,CAArC,IAAM3E,EAAS,KAClBA,EAAUQ,QAAQuJ,GACd/J,EAAUlG,SAASqQ,UACrBnK,EAAUE,WAAa,GAEzBF,EAAUtN,MAAM,GAQlB,IAHA,IAG2B,IAAA0X,EAHC9nB,KAAK8lB,SAAShN,cAAcsI,QACtD,SAACjhB,GAAM,OAAAA,EAAEwd,WAEgB/C,EAAAA,EAAAA,OAAAA,IAAJ,KACRsD,QAAQuJ,GAMvBznB,KAAK6Y,SAASqF,QAAQuJ,GAEd,IAAA1O,EAAa/Y,KAAI,SAEzB+Y,EAAS1U,QACT0U,EAASjO,OAGT9K,KAAK+nB,gBAEL/nB,KAAK6Y,SAAS1O,KAAK4O,GAEnBA,EAAS7N,UACT6N,EAAS1L,QAGTrN,KAAK8lB,SAASkC,gBAGdhoB,KAAK8lB,SAASmC,qBAGdjoB,KAAK2jB,aACL,IAAMuE,EAAQb,YAAYC,MAG1B,IAFAtnB,KAAK0jB,WAAW3iB,KAAKmnB,GACrBloB,KAAKyjB,UAAU1iB,KAAKmnB,EAAQd,GACrBpnB,KAAK0jB,WAAW,IAAMwE,EAAQ,KACnCloB,KAAK0jB,WAAWvG,QAChBnd,KAAKyjB,UAAUtG,QAKbnd,KAAK8lB,SAAS/D,UAEhB/hB,KAAKknB,kBACIlnB,KAAK8lB,SAASqC,UAGdnoB,KAAK8lB,SAASsC,aADvBpoB,KAAKwnB,eAAiB,IAalBtoB,EAAAA,UAAAA,cAAR,WACQ,MAA2Cc,KAAzC+Y,EAAQ,WAAEkE,EAAO,UAAE8I,EAAO,UAAElN,EAAQ,WAE5CE,EAASsP,MACPtC,EAAQC,WAAW/I,GACnB8I,EAAQE,iBAAiBhJ,GACzB,CACE9D,KAAM4M,EAAQ5M,KACdC,KAAM2M,EAAQ3M,KACdC,KAAM0M,EAAQ1M,KACdC,KAAMyM,EAAQzM,MAEhBT,EAASyP,SAIbxZ,OAAAA,eAAW5P,EAAAA,UAAAA,MAAG,C,IAAd,WACE,OAAOc,KAAKyjB,UAAUzY,Q,gCAGxB8D,OAAAA,eAAW5P,EAAAA,UAAAA,YAAS,C,IAApB,WACE,OAA8B,IAA1Bc,KAAKyjB,UAAUzY,OACV,GAGPhL,KAAKyjB,UAAU7B,QAAO,SAACzhB,EAAGb,GAAM,OAAAa,EAAIb,IAAG,GAAKU,KAAKyjB,UAAUzY,QAC3Dud,QAAQ,I,gCAWLrpB,EAAAA,UAAAA,QAAP,WAEEc,KAAKwoB,gBAELxoB,KAAKyoB,mBAELzoB,KAAK+Y,SAASvY,SAEdR,KAAKumB,KAAK/lB,UAULtB,EAAAA,UAAAA,iBAAP,WAC4B,OAAtBc,KAAKwjB,cACPxjB,KAAKwjB,eAGPxjB,KAAKiK,OACDjK,KAAK6Y,WACP7Y,KAAK6Y,SAASrY,SACdR,KAAK6Y,SAAW,OAKb3Z,EAAAA,UAAAA,KAAP,SAAYinB,EAAoClB,GAAhD,WACEkB,EAAiBjG,EAAiBiG,GAG7BnmB,KAAKujB,iBAMVvjB,KAAK8lB,SAAS4C,KAAKvC,GACnBnmB,KAAKknB,kBANHlnB,KAAK+kB,UAAU5X,IAAI,CACjBiW,OAAQ,WAAM,SAAKsF,KAAKvC,EAAgBlB,OASvC/lB,EAAAA,UAAAA,MAAP,SAAainB,GAAb,WACEA,EAAiBjG,EAAiBiG,GAG7BnmB,KAAKujB,gBAMVvjB,KAAK8lB,SAAS6C,MAAMxC,GALlBnmB,KAAK+kB,UAAU5X,IAAI,CACjBiW,OAAQ,WAAM,SAAKuF,MAAMxC,OAOxBjnB,EAAAA,UAAAA,MAAP,SAAainB,EAAoC7V,GAAjD,WACE6V,EAAiBjG,EAAiBiG,GAG7BnmB,KAAKujB,iBASVvjB,KAAK8lB,SAAS8C,MAAMzC,EAAgB7V,GAAS,GAC7CtQ,KAAK0mB,aATH1mB,KAAK+kB,UAAU5X,IAAI,CACjBiW,OAAQ,WAAM,SAAKwF,MAAMzC,EAAgB7V,OAYxCpR,EAAAA,UAAAA,KAAP,SAAYinB,GAAZ,WACEA,EAAiBjG,EAAiBiG,GAE7BnmB,KAAKujB,gBAMVvjB,KAAK8lB,SAAS7b,KAAKkc,GALjBnmB,KAAK+kB,UAAU5X,IAAI,CACjBiW,OAAQ,WAAM,SAAKnZ,KAAKkc,OAevBjnB,EAAAA,UAAAA,MAAP,SAAasb,G,MAELqO,EAAqB,OAANrO,QAAM,IAANA,OAAM,EAANA,EAAQ3B,SACvBsN,EAAiBjG,EAAuB,OAAN1F,QAAM,IAANA,OAAM,EAANA,EAAQsF,YAC1CsG,EAAoBlG,EAAuB,OAAN1F,QAAM,IAANA,OAAM,EAANA,EAAQ1B,eAC7CmM,EAA2B,QAAhB,EAAM,OAANzK,QAAM,IAANA,OAAM,EAANA,EAAQyK,gBAAQ,SAGjCjlB,KAAKyoB,mBAGLzoB,KAAKwmB,aACHqC,EACA1C,EACAC,EACAnB,GAEFjlB,KAAK+kB,UAAU0B,WAIVvnB,EAAAA,UAAAA,KAAP,SAAYsb,GAEVxa,KAAKiK,OAELjK,KAAKglB,KAAKxK,IAIZ1L,OAAAA,eAAW5P,EAAAA,UAAAA,SAAM,C,IAgBjB,WACE,OAAOc,KAAK+lB,S,IAjBd,SAAkBjC,GAChB9jB,KAAK+lB,QAAUjC,EAEVA,EAAOzK,MAASyK,EAAOxK,MAC1BtZ,KAAK8oB,iBAEH9oB,KAAKyH,SAAWzH,KAAK8lB,SAAS/D,WAChC/hB,KAAK0mB,a,gCAiBFxnB,EAAAA,UAAAA,eAAP,WACEc,KAAK+lB,QAAU/lB,KAAK8jB,OAAOiF,SAAS,CAClC5P,KAAM,EACNC,KAAM,EACNC,KAAMrZ,KAAKuF,OAAOiC,MAClB8R,KAAMtZ,KAAKuF,OAAOmgB,UAUfxmB,EAAAA,UAAAA,6BAAP,WACE,GAAIc,KAAKuF,kBAAkByjB,mBAAuBC,OAAQ,CAClD,MAAoBjpB,KAAKuF,OAAO2jB,wBAA9B1hB,EAAK,QAAEke,EAAM,SACfyD,EAAMF,OAAOG,kBAAoB,EACvCppB,KAAKuF,OAAOiC,MAAQ2hB,EAAM3hB,EAC1BxH,KAAKuF,OAAOmgB,OAASyD,EAAMzD,EAC3B1lB,KAAKknB,iBACLlnB,KAAK8oB,mBAKTha,OAAAA,eAAW5P,EAAAA,UAAAA,SAAM,C,IAAjB,WACE,OAAOc,KAAKkH,K,gCAMd4H,OAAAA,eAAW5P,EAAAA,UAAAA,iBAAc,C,IAAzB,WACE,OAAOc,KAAK6Y,SAAW7Y,KAAK6Y,SAAStI,KAAO,I,gCAI9CzB,OAAAA,eAAW5P,EAAAA,UAAAA,iBAAc,C,IAAzB,WAEE,IAAKc,KAAKyH,OACR,MAAO,GAGT,IADA,IAAM0e,EAA2B,GACxBpP,EAAI,EAAGA,EAAI/W,KAAK6Y,SAASoJ,iBAAkBlL,IAClDoP,EAAeplB,KAAKf,KAAK6Y,SAASqJ,iBAAiBnL,GAAGxG,MAExD,OAAO4V,G,gCAMTrX,OAAAA,eAAW5P,EAAAA,UAAAA,oBAAiB,C,IAA5B,WAEE,IAAKc,KAAKyH,OACR,MAAO,GAGT,IADA,IAAM2e,EAA8B,GAC3BrP,EAAI,EAAGA,EAAI/W,KAAK6Y,SAASsJ,oBAAqBpL,IACrDqP,EAAkBrlB,KAAKf,KAAK6Y,SAASuJ,oBAAoBrL,GAAGxG,MAE9D,OAAO6V,G,gCASFlnB,EAAAA,UAAAA,mBAAP,SAA0BqR,GAExB,GAAKvQ,KAAKyH,OAAV,CAGA,IAAMkS,EAAe3Z,KAAK8lB,SAAShN,cAAcuQ,MAC/C,SAAClqB,GAAM,OAAAA,EAAEoR,OAASA,KAEpB,OAAmB,OAAZoJ,QAAY,IAAZA,OAAY,EAAZA,EAAc+E,SAIvB5P,OAAAA,eAAW5P,EAAAA,UAAAA,2BAAwB,C,IAAnC,WAEE,OAAKc,KAAKyH,OAGHzH,KAAK8lB,SAAShN,cAClBsI,QAAO,SAACjiB,GAAM,OAAAA,EAAEwe,WAChByC,KAAI,SAACjhB,GAAM,OAAAA,EAAEoR,QAJP,I,gCAQXzB,OAAAA,eAAW5P,EAAAA,UAAAA,wBAAqB,C,IAAhC,WAEE,OAAKc,KAAKyH,OAGHzH,KAAK8lB,SAAShG,WAAWsB,QAAO,SAACjhB,GAAM,OAAAA,EAAEwd,WAASyC,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,QAF7D,I,gCAMXzB,OAAAA,eAAW5P,EAAAA,UAAAA,uBAAoB,C,IAA/B,WAEE,OAAKc,KAAKyH,OAGHzH,KAAK8lB,SAAShG,WAClBsB,QAAO,SAACjhB,GAAM,OAACA,EAAEwd,WACjByC,KAAI,SAACjgB,GAAM,OAAAA,EAAEoQ,QAJP,I,gCAWXzB,OAAAA,eAAW5P,EAAAA,UAAAA,0BAAuB,C,IAAlC,WAEE,OAAKc,KAAKyH,OAGHzH,KAAK8lB,SAAShN,cAClBsI,QAAO,SAACjiB,GAAM,OAACA,EAAEwe,WACjByC,KAAI,SAACjhB,GAAM,OAAAA,EAAEoR,QAJP,I,gCAUXzB,OAAAA,eAAW5P,EAAAA,UAAAA,YAAS,C,IAApB,WACE,OAAOc,KAAK8lB,SAAS/D,W,gCAMvBjT,OAAAA,eAAW5P,EAAAA,UAAAA,WAAQ,C,IAAnB,WACE,OAAOc,KAAK8lB,SAASqC,U,gCAMvBrZ,OAAAA,eAAW5P,EAAAA,UAAAA,YAAS,C,IAApB,WACE,OAAOc,KAAK8lB,SAASsC,W,gCAOvBtZ,OAAAA,eAAW5P,EAAAA,UAAAA,SAAM,C,IAAjB,WACE,OAAOc,KAAK6Y,SAAW7Y,KAAK6Y,SAASyP,YAAS1O,G,gCAQzC1a,EAAAA,UAAAA,GAAP,SAAUiI,EAAiBiW,GACzBpd,KAAK6f,aAAa1S,IAAI,CACpBhG,KAAMA,EACNiW,SAAUA,KAQPle,EAAAA,UAAAA,YAAP,SAAmBiI,EAAiBiW,GAClCpd,KAAK6f,aAAaiD,OAAO,CACvB3b,KAAMA,EACNiW,SAAUA,KAUPle,EAAAA,UAAAA,eAAP,SAAsBiI,GACpBnH,KAAK6f,aAAayJ,UAAUniB,IAYvBjI,EAAAA,UAAAA,cAAP,WACMc,KAAKyH,QAAUzH,KAAKunB,iBAClBvnB,KAAKid,QAAQ1c,qBACfP,KAAKid,QAAQ1c,qBAAqBP,KAAKunB,gBAEvChnB,qBAAqBP,KAAKunB,gBAE5BvnB,KAAKunB,eAAiB,OAQnBroB,EAAAA,UAAAA,eAAP,WACMc,KAAKyH,QAAUzH,KAAK6Y,WAAa7Y,KAAKunB,iBACpCvnB,KAAKid,QAAQ5c,sBACfL,KAAKunB,eAAiBvnB,KAAKid,QAAQ5c,sBACjCL,KAAKmK,KAAKc,KAAKjL,OAGjBA,KAAKunB,eAAiBlnB,sBAAsBL,KAAKmK,KAAKc,KAAKjL,SAW1Dd,EAAAA,UAAAA,iBAAP,SAAwBqqB,GACtBvpB,KAAKid,QAAQlP,iBAAiBwb,IAMzBrqB,EAAAA,UAAAA,kBAAP,WACEc,KAAKid,QAAQjP,qBAMfc,OAAAA,eAAW5P,EAAAA,UAAAA,WAAQ,C,IAAnB,WACE,GAAKc,KAAKyH,OAAV,CAMA,IAHA,IAAM+hB,EAAiC,CACrCC,UAAW,IAEJ1S,EAAI,EAAGA,EAAI/W,KAAKumB,KAAKmD,gBAAiB3S,IAAK,CAOlD,IANA,IAAM8B,EAAW7Y,KAAKumB,KAAKoD,gBAAgB5S,GACrC6S,EAAqC,CACzCrZ,KAAMsI,EAAStI,KACfuP,WAAY,GACZhH,cAAe,IAERjC,EAAI,EAAGA,EAAIgC,EAASoJ,iBAAkBpL,IAAK,CAClD,IAAM6G,EAAY7E,EAASqJ,iBAAiBrL,GAC5C+S,EAAiB9J,WAAW/e,KAAK2c,EAAUnN,MAE7C,IAAK,IAAIxQ,EAAI,EAAGA,EAAI8Y,EAASsJ,oBAAqBpiB,IAAK,CAQrD,IAPA,IAAM4Z,EAAed,EAASuJ,oBAAoBriB,GAC5C8pB,EAAOlQ,EAAapJ,KACpBiH,EAAW,IAAIxX,KAAKid,QAAQ0B,qBAChChF,EACAd,GAEIiR,EAA6C,GAC1ClqB,EAAI,EAAGA,EAAI4X,EAASyH,aAAcrf,IAAK,CAC9C,IAAMsf,EAAQ1H,EAAS0H,MAAMtf,GAC7BkqB,EAAc/oB,KAAK,CAAEwP,KAAM2O,EAAM3O,KAAMpJ,KAAM+X,EAAM/X,OAErDyiB,EAAiB9Q,cAAc/X,KAAK,CAClCwP,KAAMsZ,EACNnL,OAAQoL,IAGZN,EAAaC,UAAU1oB,KAAK6oB,GAE9B,OAAOJ,I,gCAj0BetqB,EAAAA,oBACtB,2CAk0BJ,EA93BA,GAk6BMmnB,EAAe,SAAOnf,GAAW,0C,wDAEzB,OADN6iB,EAAM,IAAIC,QAAQ9iB,GACZ,GAAM+iB,MAAMF,I,OACT,SADHnP,EAAAA,OACajD,e,OACzB,MAAO,CAAP,EADeiD,EAAAA,gBAWXsF,EAAmB,SAAC/F,GACxB,MAAmB,kBAARA,EACF,CAACA,GACCA,aAAe+P,MACjB/P,EAGF,IAQIgQ,EAAU,CACrBxH,aAAcA,EACdO,iBAAkBA,I,MPp5DpB,IARAkH,EAAAA,QAAAA,K,eQFAtb,OAAOmH,eAAe8D,EAAtBjL,aAAAA,CAA4CwB,OAAM,IAAK,IAAIpQ,EAAEmqB,EAAQ,OAASjpB,EAAEipB,EAAQ,OAA4F,IAAItmB,EAA5E,SAAW7D,GAAG,OAAOA,GAAG,iBAAiBA,GAAG,YAAYA,EAAEA,EAAE,CAACoqB,QAAQpqB,GAASuF,CAAEvF,GAAG6W,EAAE,WAAW,OAAOA,EAAEjI,OAAOC,QAAQ,SAAS7O,GAAG,IAAI,IAAIkB,EAAEqE,EAAE,EAAE1B,EAAEkP,UAAUjI,OAAOvF,EAAE1B,EAAE0B,IAAI,IAAI,IAAIsR,KAAK3V,EAAE6R,UAAUxN,GAAGqJ,OAAO2B,UAAUkC,eAAe/L,KAAKxF,EAAE2V,KAAK7W,EAAE6W,GAAG3V,EAAE2V,IAAI,OAAO7W,GAAG6W,EAAE3G,MAAMpQ,KAAKiT,YAAY,SAAS9S,EAAED,EAAEkB,GAAG,IAAIqE,EAAE,GAAG,IAAI,IAAI1B,KAAK7D,EAAE4O,OAAO2B,UAAUkC,eAAe/L,KAAK1G,EAAE6D,IAAI3C,EAAEmf,QAAQxc,GAAG,IAAI0B,EAAE1B,GAAG7D,EAAE6D,IAAI,GAAG,MAAM7D,GAAG,mBAAmB4O,OAAOyb,sBAAsB,CAAC,IAAIxT,EAAE,EAAE,IAAIhT,EAAE+K,OAAOyb,sBAAsBrqB,GAAG6W,EAAEhT,EAAEiH,OAAO+L,IAAI3V,EAAEmf,QAAQxc,EAAEgT,IAAI,GAAGjI,OAAO2B,UAAU+Z,qBAAqB5jB,KAAK1G,EAAE6D,EAAEgT,MAAMtR,EAAE1B,EAAEgT,IAAI7W,EAAE6D,EAAEgT,KAAK,OAAOtR,EAAE,IAAIqB,EAAE,WAAW,SAAS5G,KAAK,OAAOA,EAAEuQ,UAAUga,QAAQ,aAAavqB,EAAEuQ,UAAUia,UAAU,aAAaxqB,EAAEuQ,UAAUka,WAAW,aAAazqB,EAAxI,GAAiJkX,EAAEwT,WAAWC,gBAAgB/jB,EAAErH,OAAE,IAASmrB,WAAWC,eAAe7T,GAAGvX,EAAE,SAASW,EAAEgB,GAAG,IAAIqE,EAAEvF,EAAE4qB,SAAS,CAACtjB,MAAM,EAAEke,OAAO,IAAI3hB,EAAE0B,EAAE,GAAGsR,EAAEtR,EAAE,GAAGvF,EAAE6qB,WAAU,WAAW,GAAG,oBAAoB9B,OAAO,CAAC,IAAI/oB,EAAE,WAAW6W,EAAE,CAACvP,MAAMyhB,OAAO+B,WAAWtF,OAAOuD,OAAOgC,eAAe,OAAOjU,IAAI9W,IAAI+oB,OAAOiC,iBAAiB,SAAShrB,IAAI,WAAW,OAAO+oB,OAAOkC,oBAAoB,SAASjrB,OAAM,IAAI,IAAIC,EAAIC,EAAER,EAAEM,EAAEkrB,OAAO,IAAIhU,GAAGjX,EAAE,SAASD,GAAGT,GAAGsX,EAAE,CAACvP,MAAMtH,EAAEA,EAAE8K,OAAO,GAAGqgB,YAAY7jB,MAAMke,OAAOxlB,EAAEA,EAAE8K,OAAO,GAAGqgB,YAAY3F,UAAY,EAAEtlB,EAAE,EAAE,WAAW,IAAI,IAAIF,EAAEF,KAAKoB,EAAE,GAAGqE,EAAE,EAAEA,EAAEwN,UAAUjI,OAAOvF,IAAIrE,EAAEqE,GAAGwN,UAAUxN,GAAG6lB,aAAalrB,GAAGA,EAAE6oB,OAAOzQ,YAAW,WAAW,OAAOrY,EAAEiQ,MAAMlQ,EAAEkB,KAAlJ,OAA6J,OAAOlB,EAAE6qB,WAAU,WAAW,IAAI7qB,EAAEN,EAAE2rB,QAAQ,OAAOnqB,EAAEmqB,SAAS9rB,GAAGS,EAAEuqB,QAAQrpB,EAAEmqB,SAAS,WAAWrrB,EAAEyqB,aAAavpB,EAAEmqB,SAAS9rB,GAAGS,EAAEwqB,UAAUtpB,EAAEmqB,YAAW,CAACnqB,EAAExB,IAAImE,EAAE,SAASnE,IAAI,IAAIM,EAAE,oBAAoB+oB,QAAQ,iBAAiBA,OAAOG,iBAAiBH,OAAOG,iBAAiB,EAAE,OAAOoC,KAAKC,IAAID,KAAKE,IAAI,EAAExrB,GAAG,GAAG,SAASR,EAAEQ,GAAG,IAAIkB,EAAElB,EAAEyrB,gBAAgBlmB,EAAEvF,EAAE0rB,aAAa9kB,EAAE5G,EAAE2rB,UAAUzU,OAAE,IAAStQ,EAAE,GAAGA,EAAErH,EAAES,EAAEiJ,MAAM6N,EAAE7W,EAAED,EAAE,CAAC,kBAAkB,eAAe,YAAY,UAAUE,EAAE2W,EAAE,CAACvP,MAAM,OAAOke,OAAO,QAAQjmB,GAAG,OAAOsE,EAAEumB,QAAQwB,cAAc,MAAM/U,EAAE,CAACgV,IAAI3qB,EAAEyqB,UAAUzU,IAAIA,GAAG,CAACjO,MAAM/I,IAAI2D,EAAEumB,QAAQwB,cAAc,SAAS/U,EAAE,CAACgV,IAAItmB,EAAE0D,MAAM,CAAC6iB,cAAc,MAAMxkB,MAAM,EAAEke,OAAO,IAAI1O,KAAK,IAAIzX,EAAE,CAAC0sB,qBAAoB,EAAGC,2BAA0B,EAAGhH,sBAAqB,GAAI,SAAS7jB,EAAEoE,EAAEtF,QAAG,IAASA,IAAIA,EAAE,IAAI,IAAI2G,EAAE5G,EAAEkrB,OAAO,MAAMhU,EAAElX,EAAEkrB,OAAO,MAAM3rB,EAAES,EAAE4qB,SAAS,MAAM9T,EAAEvX,EAAE,GAAG4B,EAAE5B,EAAE,GAAGqE,EAAE5D,EAAE4qB,SAAS,CAACpF,OAAO,EAAEle,MAAM,IAAInF,EAAEyB,EAAE,GAAGtE,EAAEsE,EAAE,GAAGW,EAAEvE,EAAE4qB,SAAS,CAACpF,OAAO,EAAEle,MAAM,IAAIlI,EAAEmF,EAAE,GAAGtF,EAAEsF,EAAE,GAAGsD,EAAE3H,EAAEgX,GAAG/G,EAAE,WAAW,IAAIjP,EAAExB,IAAI6F,EAAEvF,EAAE4qB,SAAS1pB,GAAG2C,EAAE0B,EAAE,GAAGsR,EAAEtR,EAAE,GAAG,OAAOvF,EAAE6qB,WAAU,WAAW,GAAG,oBAAoB9B,QAAQ,eAAeA,OAAO,CAAC,IAAI/oB,EAAE,WAAW,IAAIA,EAAEN,IAAImX,EAAE7W,IAAIkB,EAAE6nB,OAAOkD,WAAW,2BAA2B7K,OAAOvd,EAAE,UAAU,OAAO3C,EAAE8pB,iBAAiB,SAAShrB,GAAG,WAAWkB,EAAE+pB,oBAAoB,SAASjrB,OAAM,CAAC6D,IAAIA,EAArU,GAA0U5B,EAAEmd,QAAQ7Z,GAAG4I,EAAE,SAASnO,GAAG,OAAO4O,OAAOC,OAAO,GAAGxP,EAAEW,GAAtC,CAA0CC,GAAkzBD,EAAE6qB,WAAU,WAAW/T,GAAt0B,WAAa,GAAGI,EAAEmU,QAAQ,CAAC,IAAIrrB,EAAE,WAAW,IAAIA,EAAEkB,EAAEqE,EAAE1B,EAAEgT,EAAE,QAAQ3V,EAAE,QAAQlB,EAAEkX,EAAEmU,eAAU,IAASrrB,OAAE,EAAOA,EAAEksB,mBAAc,IAAShrB,EAAEA,EAAE,EAAEjB,EAAE,QAAQ4D,EAAE,QAAQ0B,EAAE2R,EAAEmU,eAAU,IAAS9lB,OAAE,EAAOA,EAAE4mB,oBAAe,IAAStoB,EAAEA,EAAE,EAAE,GAAGiT,GAAG3I,EAAE6d,0BAA0B,CAAC,IAAIplB,EAAEkQ,EAAEsR,OAAO,MAAM,CAAC9gB,MAAMuP,EAAE2O,OAAO3O,GAAGjQ,EAAEwS,KAAKxS,EAAEuS,OAAO,MAAM,CAAC7R,MAAMuP,EAAE2O,OAAOvlB,GAA/S,GAAqTiB,EAAElB,EAAEsH,MAAM/B,EAAEvF,EAAEwlB,OAAO,GAAG5e,EAAEykB,SAASvU,EAAE,CAAC,IAAIjT,EAAE3C,IAAIiB,EAAEmF,OAAO/B,IAAIpD,EAAEqjB,OAAO,GAAGrX,EAAE6d,2BAA2BnoB,IAAIqT,EAAEmU,QAAQpiB,MAAMuc,OAAOjgB,EAAE,MAAM4I,EAAE4d,oBAAoB,CAAC,IAAIlV,EAAE3V,EAAEiP,IAAI/Q,EAAEkI,OAAO/B,EAAE4K,IAAI/Q,EAAEomB,OAAO,GAAG3hB,GAAGgT,EAAE,CAAC,IAAI5W,EAAEkQ,EAAEjP,EAAE3B,EAAE4Q,EAAE5K,EAAEqB,EAAEykB,QAAQ/jB,MAAMrH,EAAE2G,EAAEykB,QAAQ7F,OAAOjmB,EAAEqH,EAAEykB,QAAQpiB,MAAM3B,MAAMpG,EAAE,KAAK0F,EAAEykB,QAAQpiB,MAAMuc,OAAOjgB,EAAE,KAAKtG,EAAE,CAACqI,MAAMrH,EAAEulB,OAAOjmB,UAAUsE,IAAI+C,EAAEykB,QAAQ/jB,MAAMpG,EAAE0F,EAAEykB,QAAQ7F,OAAOjgB,EAAEtG,EAAE,CAACqI,MAAMpG,EAAEskB,OAAOjgB,KAAKjG,EAAE,CAACgI,MAAMpG,EAAEskB,OAAOjgB,IAAIuR,EAAEkQ,iBAAiBlQ,GAAGA,EAAE8R,kBAA4ChhB,KAAK,CAACkP,EAAEjP,EAAEsI,IAAI,IAAIzL,EAAE1E,EAAEosB,aAAY,SAASpsB,GAAG,GAAGA,GAAGuF,GAAGtD,EAAE,CAAC,IAAI4B,EAAEsK,EAAE6W,qBAAqB/kB,EAAE,IAAIiB,EAAElC,KAAK6X,EAAEA,EAAE,CAACmO,qBAAqBnhB,GAAG0B,GAAG,CAACF,OAAOrF,KAAKC,EAAE6jB,GAAG5iB,EAAEgd,UAAU6F,MAAK,WAAWnd,EAAEykB,QAAQlqB,EAAElB,GAAGA,EAAE8N,kBAAiB,OAAO/N,GAAG4G,EAAEykB,UAAUzkB,EAAEykB,QAAQ7F,OAAO,EAAE5e,EAAEykB,QAAQ/jB,MAAM,GAAGV,EAAEykB,QAAQrrB,IAAG,CAACiC,IAAI0U,EAAE3W,EAAEosB,aAAY,SAASpsB,GAAGkX,EAAEmU,QAAQrrB,IAAG,IAAIA,EAAE6qB,WAAU,WAAW,IAAI7qB,EAAE,IAAIqsB,sBAAqB,SAASrsB,GAAGA,EAAE,GAAGssB,eAAexV,GAAGA,EAAEkQ,iBAAiBlQ,GAAGA,EAAEwR,mBAAkB,OAAO1hB,EAAEykB,SAASrrB,EAAEuqB,QAAQ3jB,EAAEykB,SAAS,WAAWrrB,EAAEyqB,gBAAe,CAAC3T,IAAI9W,EAAE6qB,WAAU,WAAW,OAAO,WAAW/T,IAAIA,EAAE/I,UAAU5M,EAAE,UAAS,CAAC2V,IAAI,IAAI5C,EAAE,MAAM3O,OAAE,EAAOA,EAAEqa,WAAW5f,EAAE6qB,WAAU,WAAW/T,GAAG5C,IAAI4C,EAAE+K,WAAW/K,EAAE/M,KAAK+M,EAAEmP,gBAAgBnP,EAAE0R,KAAKtU,IAAI4C,EAAEmR,WAAWnR,EAAE/M,KAAK+M,EAAEmP,gBAAgBnP,EAAE2R,MAAMvU,OAAM,CAACA,EAAE4C,IAAI,IAAIhG,EAAE9Q,EAAEosB,aAAY,SAASpsB,GAAG,OAAO6D,EAAEumB,QAAQwB,cAAcpsB,EAAEqX,EAAE,CAAC4U,gBAAgB9U,EAAE+U,aAAahnB,GAAG1E,MAAK,IAAI,MAAM,CAACqF,OAAOuB,EAAEykB,QAAQK,aAAahnB,EAAE+mB,gBAAgB9U,EAAEmC,KAAKhC,EAAEyV,cAAczb,GAAG+I,EAAAA,QAAgB,SAAS7Z,GAAG,IAAIkB,EAAElB,EAAEgH,IAAIzB,EAAEvF,EAAE2Y,SAAS/R,EAAE5G,EAAE4f,WAAW1I,EAAElX,EAAE4Y,cAAcrZ,EAAES,EAAE4jB,OAAO9M,EAAE9W,EAAEglB,qBAAqB9kB,OAAE,IAAS4W,GAAGA,EAAEpX,EAAEO,EAAED,EAAE,CAAC,MAAM,WAAW,aAAa,gBAAgB,SAAS,yBAAyBR,EAAE2B,EAAE,CAAC6F,IAAI9F,EAAEyX,SAASpT,EAAEqa,WAAWhZ,EAAEgd,OAAOrkB,EAAEqZ,cAAc1B,EAAE6N,UAAS,GAAI,CAACC,qBAAqB9kB,IAAIqsB,cAAc,OAAO1oB,EAAEumB,QAAQwB,cAAcpsB,EAAEqX,EAAE,GAAGnX,KAAKma,EAAQ2S,QAAQrrB,EAAE0Y,EAAQ4S,qBAAqB,SAASlnB,EAAE1B,EAAEgT,EAAE5W,GAAG,IAAI2G,EAAE5G,EAAE4qB,SAAS,MAAM1T,EAAEtQ,EAAE,GAAGrH,EAAEqH,EAAE,GAAG,OAAO5G,EAAE6qB,WAAU,WAAW,SAAS7qB,IAAI,GAAGuF,GAAG1B,GAAGgT,GAAGtX,EAAE,MAAMgG,GAAG1B,GAAGgT,EAAE,CAAC,IAAI7W,EAAEuF,EAAEmnB,mBAAmB7oB,GAAG,GAAG7D,EAAE,CAAC,IAAIkB,EAAElB,EAAEmpB,MAAK,SAASnpB,GAAG,OAAOA,EAAEqQ,OAAOwG,UAAI,IAAS5W,GAAGiB,IAAIA,EAAEkP,MAAMnQ,GAAGV,EAAE2B,GAAG,YAAY3B,EAAE,MAAMS,IAAIuF,GAAGA,EAAEue,GAAG5iB,EAAEgd,UAAU2C,MAAK,WAAW7gB,SAAO,CAACuF,IAAI2R,GAAGtI,OAAOuG,KAAKjU,GAAGzB,SAAQ,SAASO,GAAG,YAAYA,GAAG6Z,EAAQpH,eAAezS,IAAI4O,OAAOmH,eAAe8D,EAAQ7Z,EAAE,CAACyW,YAAW,EAAGD,IAAI,WAAW,OAAOtV,EAAElB","sources":["../rive/webpack/universalModuleDefinition","../rive/npm/canvas_advanced/canvas_advanced.mjs","../rive/src/utils/registerTouchInteractions.js","../rive/webpack/bootstrap","../rive/webpack/runtime/define property getters","../rive/webpack/runtime/hasOwnProperty shorthand","../rive/webpack/runtime/make namespace object","../rive/src/rive.ts","../node_modules/rive-react/dist/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rive\"] = factory();\n\telse\n\t\troot[\"rive\"] = factory();\n})(this, function() {\nreturn ","\nvar Rive = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Rive) {\n  Rive = Rive || {};\n\n\nnull;var m;m||(m=typeof Rive !== 'undefined' ? Rive : {});var aa,ba;m.ready=new Promise(function(b,a){aa=b;ba=a});\nfunction ca(){function b(h){const g=d;c=a=0;d=new Map;g.forEach(l=>{try{l(h)}catch(k){console.error(k)}});this.La();e&&e.fb()}let a=0,c=0,d=new Map,e=null,f=null;this.requestAnimationFrame=function(h){a||(a=requestAnimationFrame(b.bind(this)));const g=++c;d.set(g,h);return g};this.cancelAnimationFrame=function(h){d.delete(h);a&&0==d.size&&(cancelAnimationFrame(a),a=0)};this.cb=function(h){f&&(document.body.remove(f),f=null);h||(f=document.createElement(\"div\"),f.style.backgroundColor=\"black\",f.style.position=\n\"fixed\",f.style.right=0,f.style.top=0,f.style.color=\"white\",f.style.padding=\"4px\",f.innerHTML=\"RIVE FPS\",h=function(g){f.innerHTML=\"RIVE FPS \"+g.toFixed(1)},document.body.appendChild(f));e=new function(){let g=0,l=0;this.fb=function(){var k=performance.now();l?(++g,k-=l,1E3<k&&(h(1E3*g/k),g=l=0)):(l=k,g=0)}}};this.$a=function(){f&&(document.body.remove(f),f=null);e=null};this.La=function(){}}\nfunction ea(b){console.assert(!0);const a=new Map;let c=-Infinity;this.push=function(d){d=d+((1<<b)-1)>>b;a.has(d)&&clearTimeout(a.get(d));a.set(d,setTimeout(function(){a.delete(d);0==a.length?c=-Infinity:d==c&&(c=Math.max(...a.keys()),console.assert(c<d))},1E3));c=Math.max(d,c);return c<<b}}\nconst fa=new function(){function b(){if(!a){var t=document.createElement(\"canvas\"),v={alpha:1,depth:0,stencil:0,antialias:0,premultipliedAlpha:1,preserveDrawingBuffer:0,preferLowPowerToHighPerformance:0,failIfMajorPerformanceCaveat:0,enableExtensionsByDefault:1,explicitSwapControl:1,renderViaOffscreenBackBuffer:1};let q=t.getContext(\"webgl2\",v);if(q)c=2;else if(q=t.getContext(\"webgl\",v))c=1;else return console.log(\"No WebGL support. Image mesh will not be drawn.\"),!1;d=Math.min(q.getParameter(q.MAX_RENDERBUFFER_SIZE),\nq.getParameter(q.MAX_TEXTURE_SIZE));function E(I,w,z){w=q.createShader(w);q.shaderSource(w,z);q.compileShader(w);z=q.getShaderInfoLog(w);if(0<z.length)throw z;q.attachShader(I,w)}t=q.createProgram();E(t,q.VERTEX_SHADER,\"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\");\nE(t,q.FRAGMENT_SHADER,\"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\");q.bindAttribLocation(t,0,\"vertex\");q.bindAttribLocation(t,1,\"uv\");q.linkProgram(t);v=q.getProgramInfoLog(t);if(0<v.length)throw v;e=q.getUniformLocation(t,\"mat\");f=q.getUniformLocation(t,\"translate\");q.useProgram(t);q.bindBuffer(q.ARRAY_BUFFER,q.createBuffer());q.enableVertexAttribArray(0);\nq.enableVertexAttribArray(1);q.bindBuffer(q.ELEMENT_ARRAY_BUFFER,q.createBuffer());q.uniform1i(q.getUniformLocation(t,\"image\"),0);q.pixelStorei(q.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0);a=q}return!0}let a=null,c=0,d=0,e=null,f=null,h=0,g=0;this.ob=function(){b();return d};this.Ya=function(t){if(!b())return null;const v=a.createTexture();a.bindTexture(a.TEXTURE_2D,v);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,t);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,\na.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);2==c?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_LINEAR),a.generateMipmap(a.TEXTURE_2D)):a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);return v};const l=new ea(8),k=new ea(8),p=new ea(10),r=new ea(10);this.bb=function(t,v,q,E,I){if(b()){var w=l.push(t),z=k.push(v);if(a.canvas.width!=w||a.canvas.height!=z)a.canvas.width=w,a.canvas.height=z;a.viewport(0,z-v,t,v);a.disable(a.SCISSOR_TEST);\na.clearColor(0,0,0,0);a.clear(a.COLOR_BUFFER_BIT);a.enable(a.SCISSOR_TEST);q.sort((y,da)=>da.Oa-y.Oa);w=p.push(E);h!=w&&(a.bufferData(a.ARRAY_BUFFER,8*w,a.DYNAMIC_DRAW),h=w);w=0;for(var J of q)a.bufferSubData(a.ARRAY_BUFFER,w,J.Aa),w+=4*J.Aa.length;console.assert(w==4*E);for(var P of q)a.bufferSubData(a.ARRAY_BUFFER,w,P.Ra),w+=4*P.Ra.length;console.assert(w==8*E);w=r.push(I);g!=w&&(a.bufferData(a.ELEMENT_ARRAY_BUFFER,2*w,a.DYNAMIC_DRAW),g=w);J=0;for(var X of q)a.bufferSubData(a.ELEMENT_ARRAY_BUFFER,\nJ,X.indices),J+=2*X.indices.length;console.assert(J==2*I);X=0;P=!0;w=J=0;for(const y of q){y.image.va!=X&&(a.bindTexture(a.TEXTURE_2D,y.image.Va||null),X=y.image.va);y.rb?(a.scissor(y.Ea,z-y.Fa-y.Ka,y.yb,y.Ka),P=!0):P&&(a.scissor(0,z-v,t,v),P=!1);q=2/t;const da=-2/v;a.uniform4f(e,y.la[0]*q*y.ra,y.la[1]*da*y.sa,y.la[2]*q*y.ra,y.la[3]*da*y.sa);a.uniform2f(f,y.la[4]*q*y.ra+q*(y.Ea-y.pb*y.ra)-1,y.la[5]*da*y.sa+da*(y.Fa-y.qb*y.sa)+1);a.vertexAttribPointer(0,2,a.FLOAT,!1,0,w);a.vertexAttribPointer(1,2,\na.FLOAT,!1,0,w+4*E);a.drawElements(a.TRIANGLES,y.indices.length,a.UNSIGNED_SHORT,J);w+=4*y.Aa.length;J+=2*y.indices.length}console.assert(w==4*E);console.assert(J==2*I)}};this.canvas=function(){return b()&&a.canvas}};\nRive.onRuntimeInitialized=function(){function b(n){switch(n){case k.srcOver:return\"source-over\";case k.screen:return\"screen\";case k.overlay:return\"overlay\";case k.darken:return\"darken\";case k.lighten:return\"lighten\";case k.colorDodge:return\"color-dodge\";case k.colorBurn:return\"color-burn\";case k.hardLight:return\"hard-light\";case k.softLight:return\"soft-light\";case k.difference:return\"difference\";case k.exclusion:return\"exclusion\";case k.multiply:return\"multiply\";case k.hue:return\"hue\";case k.saturation:return\"saturation\";\ncase k.color:return\"color\";case k.luminosity:return\"luminosity\"}}function a(n){return\"rgba(\"+((16711680&n)>>>16)+\",\"+((65280&n)>>>8)+\",\"+((255&n)>>>0)+\",\"+((4278190080&n)>>>24)/255+\")\"}function c(){0<J.length&&(fa.bb(z.drawWidth(),z.drawHeight(),J,P,X),J=[],X=P=0,z.reset(512,512));for(const n of w){for(const u of n.da)u();n.da=[]}w.clear()}var d=Rive.RenderPaintStyle;const e=Rive.RenderPath,f=Rive.RenderPaint,h=Rive.Renderer,g=Rive.StrokeCap,l=Rive.StrokeJoin,k=Rive.BlendMode,p=d.fill,r=d.stroke,\nt=Rive.FillRule.evenOdd;let v=1;var q=Rive.RenderImage.extend(\"CanvasRenderImage\",{__construct:function(){this.__parent.__construct.call(this);this.va=v;v=v+1&2147483647||1},decode:function(n){let u=Xa;u.total++;var F=this,B=new Image;B.src=URL.createObjectURL(new Blob([n],{type:\"image/png\"}));B.onload=function(){F.Ta=B;F.Va=fa.Ya(B);F.size(B.width,B.height);u.loaded++;if(u.loaded===u.total){const D=u.ready;D&&(D(),u.ready=null)}}}}),E=e.extend(\"CanvasRenderPath\",{__construct:function(){this.__parent.__construct.call(this);\nthis.ga=new Path2D},reset:function(){this.ga=new Path2D},addPath:function(n,u,F,B,D,G,A){var C=this.ga,R=C.addPath;n=n.ga;const K=new DOMMatrix;K.a=u;K.b=F;K.c=B;K.d=D;K.e=G;K.f=A;R.call(C,n,K)},fillRule:function(n){this.Ca=n},moveTo:function(n,u){this.ga.moveTo(n,u)},lineTo:function(n,u){this.ga.lineTo(n,u)},cubicTo:function(n,u,F,B,D,G){this.ga.bezierCurveTo(n,u,F,B,D,G)},close:function(){this.ga.closePath()}}),I=f.extend(\"CanvasRenderPaint\",{color:function(n){this.Da=a(n)},thickness:function(n){this.Wa=\nn},join:function(n){switch(n){case l.miter:this.ua=\"miter\";break;case l.round:this.ua=\"round\";break;case l.bevel:this.ua=\"bevel\"}},cap:function(n){switch(n){case g.butt:this.ta=\"butt\";break;case g.round:this.ta=\"round\";break;case g.square:this.ta=\"square\"}},style:function(n){this.Ua=n},blendMode:function(n){this.Sa=b(n)},linearGradient:function(n,u,F,B){this.oa={Pa:n,Qa:u,Ha:F,Ia:B,za:[]}},radialGradient:function(n,u,F,B){this.oa={Pa:n,Qa:u,Ha:F,Ia:B,za:[],mb:!0}},addStop:function(n,u){this.oa.za.push({color:n,\nstop:u})},completeGradient:function(){},draw:function(n,u,F){let B=this.Ua;var D=this.Da,G=this.oa;n.globalCompositeOperation=this.Sa;if(null!=G){D=G.Pa;var A=G.Qa;const R=G.Ha;var C=G.Ia;const K=G.za;G.mb?(G=R-D,C-=A,D=n.createRadialGradient(D,A,0,D,A,Math.sqrt(G*G+C*C))):D=n.createLinearGradient(D,A,R,C);for(let U=0,L=K.length;U<L;U++)A=K[U],D.addColorStop(A.stop,a(A.color));this.Da=D;this.oa=null}switch(B){case r:n.strokeStyle=D;n.lineWidth=this.Wa;n.lineCap=this.ta;n.lineJoin=this.ua;n.stroke(u);\nbreak;case p:n.fillStyle=D,n.fill(u,F)}}});const w=new Set;let z=null,J=[],P=0,X=0;var y=Rive.CanvasRenderer=h.extend(\"Renderer\",{__construct:function(n){this.__parent.__construct.call(this);this.fa=[1,0,0,1,0,0];this.Z=n.getContext(\"2d\");this.Ba=n;this.da=[]},save:function(){this.fa.push(...this.fa.slice(this.fa.length-6));this.da.push(this.Z.save.bind(this.Z))},restore:function(){const n=this.fa.length-6;if(6>n)throw\"restore() called without matching save().\";this.fa.splice(n);this.da.push(this.Z.restore.bind(this.Z))},\ntransform:function(n,u,F,B,D,G){const A=this.fa,C=A.length-6;A.splice(C,6,A[C]*n+A[C+2]*u,A[C+1]*n+A[C+3]*u,A[C]*F+A[C+2]*B,A[C+1]*F+A[C+3]*B,A[C]*D+A[C+2]*G+A[C+4],A[C+1]*D+A[C+3]*G+A[C+5]);this.da.push(this.Z.transform.bind(this.Z,n,u,F,B,D,G))},rotate:function(n){const u=Math.sin(n);n=Math.cos(n);this.transform(n,u,-u,n,0,0)},_drawPath:function(n,u){this.da.push(u.draw.bind(u,this.Z,n.ga,n.Ca===t?\"evenodd\":\"nonzero\"))},_drawImage:function(n,u,F){var B=n.Ta;if(B){var D=this.Z,G=b(u);this.da.push(function(){D.globalCompositeOperation=\nG;D.globalAlpha=F;D.drawImage(B,0,0);D.globalAlpha=1})}},_getMatrix:function(n){const u=this.fa,F=u.length-6;for(let B=0;6>B;++B)n[B]=u[F+B]},_drawImageMesh:function(n,u,F,B,D,G,A,C,R,K){var U=this.Z.canvas.width,L=this.Z.canvas.height;const pb=R-A,qb=K-C;A=Math.max(A,0);C=Math.max(C,0);R=Math.min(R,U);K=Math.min(K,L);const sa=R-A,ta=K-C;console.assert(sa<=Math.min(pb,U));console.assert(ta<=Math.min(qb,L));if(!(0>=sa||0>=ta)){R=sa<pb||ta<qb;U=K=1;var ia=Math.ceil(sa*K),ja=Math.ceil(ta*U);L=fa.ob();\nia>L&&(K*=L/ia,ia=L);ja>L&&(U*=L/ja,ja=L);z||(z=new m.DynamicRectanizer(L),z.reset(512,512));L=z.addRect(ia,ja);0>L&&(c(),w.add(this),L=z.addRect(ia,ja),console.assert(0<=L));var rb=L&65535,sb=L>>16;J.push({la:this.fa.slice(this.fa.length-6),image:n,Ea:rb,Fa:sb,pb:A,qb:C,yb:ia,Ka:ja,ra:K,sa:U,Aa:new Float32Array(B),Ra:new Float32Array(D),indices:new Uint16Array(G),rb:R,Oa:n.va<<1|(R?1:0)});P+=B.length;X+=G.length;var na=this.Z,Yb=b(u);this.da.push(function(){na.save();na.resetTransform();na.globalCompositeOperation=\nYb;na.globalAlpha=F;na.drawImage(fa.canvas(),rb,sb,ia,ja,A,C,sa,ta);na.restore()})}},_clipPath:function(n){this.da.push(this.Z.clip.bind(this.Z,n.ga,n.Ca===t?\"evenodd\":\"nonzero\"))},clear:function(){w.add(this);this.da.push(this.Z.clearRect.bind(this.Z,0,0,this.Ba.width,this.Ba.height))},flush:function(){},translate:function(n,u){this.transform(1,0,0,1,n,u)}});Rive.makeRenderer=function(n){return new y(n)};Rive.renderFactory={makeRenderPaint:function(){return new I},makeRenderPath:function(){return new E},\nmakeRenderImage:function(){return new q}};let da=Rive.load,Xa=null;Rive.load=function(n){return new Promise(function(u){let F=null;Xa={total:0,loaded:0,ready:function(){u(F)}};F=da(n);0==Xa.total&&u(F)})};d=new ca;Rive.requestAnimationFrame=d.requestAnimationFrame.bind(d);Rive.cancelAnimationFrame=d.cancelAnimationFrame.bind(d);Rive.enableFPSCounter=d.cb.bind(d);Rive.disableFPSCounter=d.$a;d.La=c;Rive.cleanup=function(){z&&z.delete()}};\nvar ha=Object.assign({},m),ka=\"object\"==typeof window,la=\"function\"==typeof importScripts,x=\"\",ma,oa;\nif(ka||la)la?x=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(x=document.currentScript.src),_scriptDir&&(x=_scriptDir),0!==x.indexOf(\"blob:\")?x=x.substr(0,x.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):x=\"\",la&&(oa=b=>{var a=new XMLHttpRequest;a.open(\"GET\",b,!1);a.responseType=\"arraybuffer\";a.send(null);return new Uint8Array(a.response)}),ma=(b,a,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",b,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?\na(d.response):c()};d.onerror=c;d.send(null)};var pa=m.print||console.log.bind(console),qa=m.printErr||console.warn.bind(console);Object.assign(m,ha);ha=null;var ra;m.wasmBinary&&(ra=m.wasmBinary);var noExitRuntime=m.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&ua(\"no native wasm support detected\");var va,wa=!1,xa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ya(b,a,c){var d=a+c;for(c=a;b[c]&&!(c>=d);)++c;if(16<c-a&&b.buffer&&xa)return xa.decode(b.subarray(a,c));for(d=\"\";a<c;){var e=b[a++];if(e&128){var f=b[a++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var h=b[a++]&63;e=224==(e&240)?(e&15)<<12|f<<6|h:(e&7)<<18|f<<12|h<<6|b[a++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}var za,Aa,H,Ba,Ca,Da,M,Ea,Fa;\nfunction Ga(){var b=va.buffer;za=b;m.HEAP8=Aa=new Int8Array(b);m.HEAP16=Ba=new Int16Array(b);m.HEAP32=Da=new Int32Array(b);m.HEAPU8=H=new Uint8Array(b);m.HEAPU16=Ca=new Uint16Array(b);m.HEAPU32=M=new Uint32Array(b);m.HEAPF32=Ea=new Float32Array(b);m.HEAPF64=Fa=new Float64Array(b)}var Ha,Ia=[],Ja=[],Ka=[];function La(){var b=m.preRun.shift();Ia.unshift(b)}var Ma=0,Na=null,Oa=null;\nfunction ua(b){if(m.onAbort)m.onAbort(b);b=\"Aborted(\"+b+\")\";qa(b);wa=!0;b=new WebAssembly.RuntimeError(b+\". Build with -sASSERTIONS for more info.\");ba(b);throw b;}function Pa(){return N.startsWith(\"data:application/octet-stream;base64,\")}var N;N=\"canvas_advanced.wasm\";if(!Pa()){var Qa=N;N=m.locateFile?m.locateFile(Qa,x):x+Qa}function Ra(){var b=N;try{if(b==N&&ra)return new Uint8Array(ra);if(oa)return oa(b);throw\"both async and sync fetching of the wasm failed\";}catch(a){ua(a)}}\nfunction Sa(){if(!ra&&(ka||la)){if(\"function\"==typeof fetch&&!N.startsWith(\"file://\"))return fetch(N,{credentials:\"same-origin\"}).then(function(b){if(!b.ok)throw\"failed to load wasm binary file at '\"+N+\"'\";return b.arrayBuffer()}).catch(function(){return Ra()});if(ma)return new Promise(function(b,a){ma(N,function(c){b(new Uint8Array(c))},a)})}return Promise.resolve().then(function(){return Ra()})}function Ta(b){for(;0<b.length;)b.shift()(m)}\nfunction Ua(b){if(void 0===b)return\"_unknown\";b=b.replace(/[^a-zA-Z0-9_]/g,\"$\");var a=b.charCodeAt(0);return 48<=a&&57>=a?\"_\"+b:b}function Va(b,a){b=Ua(b);return function(){null;return a.apply(this,arguments)}}var O=[{},{value:void 0},{value:null},{value:!0},{value:!1}],Wa=[];\nfunction Ya(b){var a=Error,c=Va(b,function(d){this.name=b;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var Za=void 0;function Q(b){throw new Za(b);}\nvar $a=b=>{b||Q(\"Cannot use deleted val. handle = \"+b);return O[b].value},S=b=>{switch(b){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var a=Wa.length?Wa.pop():O.length;O[a]={ya:1,value:b};return a}},ab=void 0,bb=void 0;function T(b){for(var a=\"\";H[b];)a+=bb[H[b++]];return a}var cb=[];function db(){for(;cb.length;){var b=cb.pop();b.U.ka=!1;b[\"delete\"]()}}var eb=void 0,V={};\nfunction fb(b,a){for(void 0===a&&Q(\"ptr should not be undefined\");b.$;)a=b.na(a),b=b.$;return a}var gb={};function hb(b){b=ib(b);var a=T(b);jb(b);return a}function kb(b,a){var c=gb[b];void 0===c&&Q(a+\" has unknown type \"+hb(b));return c}function lb(){}var mb=!1;function nb(b){--b.count.value;0===b.count.value&&(b.aa?b.ca.ha(b.aa):b.X.V.ha(b.W))}function ob(b,a,c){if(a===c)return b;if(void 0===c.$)return null;b=ob(b,a,c.$);return null===b?null:c.ab(b)}var tb={};\nfunction ub(b,a){a=fb(b,a);return V[a]}var vb=void 0;function wb(b){throw new vb(b);}function xb(b,a){a.X&&a.W||wb(\"makeClassHandle requires ptr and ptrType\");!!a.ca!==!!a.aa&&wb(\"Both smartPtrType and smartPtr must be specified\");a.count={value:1};return yb(Object.create(b,{U:{value:a}}))}\nfunction yb(b){if(\"undefined\"===typeof FinalizationRegistry)return yb=a=>a,b;mb=new FinalizationRegistry(a=>{nb(a.U)});yb=a=>{var c=a.U;c.aa&&mb.register(a,{U:c},a);return a};lb=a=>{mb.unregister(a)};return yb(b)}var zb={};function Ab(b){for(;b.length;){var a=b.pop();b.pop()(a)}}function Bb(b){return this.fromWireType(Da[b>>2])}var Cb={},Db={};\nfunction W(b,a,c){function d(g){g=c(g);g.length!==b.length&&wb(\"Mismatched type converter count\");for(var l=0;l<b.length;++l)Y(b[l],g[l])}b.forEach(function(g){Db[g]=a});var e=Array(a.length),f=[],h=0;a.forEach((g,l)=>{gb.hasOwnProperty(g)?e[l]=gb[g]:(f.push(g),Cb.hasOwnProperty(g)||(Cb[g]=[]),Cb[g].push(()=>{e[l]=gb[g];++h;h===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction Eb(b){switch(b){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+b);}}\nfunction Y(b,a,c={}){if(!(\"argPackAdvance\"in a))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=a.name;b||Q('type \"'+d+'\" must have a positive integer typeid pointer');if(gb.hasOwnProperty(b)){if(c.lb)return;Q(\"Cannot register type '\"+d+\"' twice\")}gb[b]=a;delete Db[b];Cb.hasOwnProperty(b)&&(a=Cb[b],delete Cb[b],a.forEach(e=>e()))}function Fb(b){Q(b.U.X.V.name+\" instance already deleted\")}function Gb(){}\nfunction Hb(b,a,c){if(void 0===b[a].Y){var d=b[a];b[a]=function(){b[a].Y.hasOwnProperty(arguments.length)||Q(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+b[a].Y+\")!\");return b[a].Y[arguments.length].apply(this,arguments)};b[a].Y=[];b[a].Y[d.ja]=d}}\nfunction Ib(b,a,c){m.hasOwnProperty(b)?((void 0===c||void 0!==m[b].Y&&void 0!==m[b].Y[c])&&Q(\"Cannot register public name '\"+b+\"' twice\"),Hb(m,b,b),m.hasOwnProperty(c)&&Q(\"Cannot register multiple overloads of a function with the same number of arguments (\"+c+\")!\"),m[b].Y[c]=a):(m[b]=a,void 0!==c&&(m[b].zb=c))}function Jb(b,a,c,d,e,f,h,g){this.name=b;this.constructor=a;this.ea=c;this.ha=d;this.$=e;this.gb=f;this.na=h;this.ab=g;this.Ma=[]}\nfunction Kb(b,a,c){for(;a!==c;)a.na||Q(\"Expected null or instance of \"+c.name+\", got an instance of \"+a.name),b=a.na(b),a=a.$;return b}function Lb(b,a){if(null===a)return this.wa&&Q(\"null is not a valid \"+this.name),0;a.U||Q('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||Q(\"Cannot pass deleted object as a pointer of type \"+this.name);return Kb(a.U.W,a.U.X.V,this.V)}\nfunction Nb(b,a){if(null===a){this.wa&&Q(\"null is not a valid \"+this.name);if(this.qa){var c=this.xa();null!==b&&b.push(this.ha,c);return c}return 0}a.U||Q('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||Q(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.pa&&a.U.X.pa&&Q(\"Cannot convert argument of type \"+(a.U.ca?a.U.ca.name:a.U.X.name)+\" to parameter type \"+this.name);c=Kb(a.U.W,a.U.X.V,this.V);if(this.qa)switch(void 0===a.U.aa&&Q(\"Passing raw pointer to smart pointer is illegal\"),\nthis.xb){case 0:a.U.ca===this?c=a.U.aa:Q(\"Cannot convert argument of type \"+(a.U.ca?a.U.ca.name:a.U.X.name)+\" to parameter type \"+this.name);break;case 1:c=a.U.aa;break;case 2:if(a.U.ca===this)c=a.U.aa;else{var d=a.clone();c=this.tb(c,S(function(){d[\"delete\"]()}));null!==b&&b.push(this.ha,c)}break;default:Q(\"Unsupporting sharing policy\")}return c}\nfunction Ob(b,a){if(null===a)return this.wa&&Q(\"null is not a valid \"+this.name),0;a.U||Q('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||Q(\"Cannot pass deleted object as a pointer of type \"+this.name);a.U.X.pa&&Q(\"Cannot convert argument of type \"+a.U.X.name+\" to parameter type \"+this.name);return Kb(a.U.W,a.U.X.V,this.V)}\nfunction Pb(b,a,c,d){this.name=b;this.V=a;this.wa=c;this.pa=d;this.qa=!1;this.ha=this.tb=this.xa=this.Na=this.xb=this.sb=void 0;void 0!==a.$?this.toWireType=Nb:(this.toWireType=d?Lb:Ob,this.ba=null)}function Qb(b,a,c){m.hasOwnProperty(b)||wb(\"Replacing nonexistant public symbol\");void 0!==m[b].Y&&void 0!==c?m[b].Y[c]=a:(m[b]=a,m[b].ja=c)}\nfunction Rb(b,a){var c=[];return function(){c.length=0;Object.assign(c,arguments);if(b.includes(\"j\")){var d=m[\"dynCall_\"+b];d=c&&c.length?d.apply(null,[a].concat(c)):d.call(null,a)}else d=Ha.get(a).apply(null,c);return d}}function Z(b,a){b=T(b);var c=b.includes(\"j\")?Rb(b,a):Ha.get(a);\"function\"!=typeof c&&Q(\"unknown function pointer with signature \"+b+\": \"+a);return c}var Sb=void 0;\nfunction Tb(b,a){function c(f){e[f]||gb[f]||(Db[f]?Db[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};a.forEach(c);throw new Sb(b+\": \"+d.map(hb).join([\", \"]));}\nfunction Ub(b,a,c,d,e){var f=a.length;2>f&&Q(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var h=null!==a[1]&&null!==c,g=!1;for(c=1;c<a.length;++c)if(null!==a[c]&&void 0===a[c].ba){g=!0;break}var l=\"void\"!==a[0].name,k=f-2,p=Array(k),r=[],t=[];return function(){arguments.length!==k&&Q(\"function \"+b+\" called with \"+arguments.length+\" arguments, expected \"+k+\" args!\");t.length=0;r.length=h?2:1;r[0]=e;if(h){var v=a[1].toWireType(t,this);r[1]=v}for(var q=0;q<k;++q)p[q]=\na[q+2].toWireType(t,arguments[q]),r.push(p[q]);q=d.apply(null,r);if(g)Ab(t);else for(var E=h?1:2;E<a.length;E++){var I=1===E?v:p[E-2];null!==a[E].ba&&a[E].ba(I)}v=l?a[0].fromWireType(q):void 0;return v}}function Vb(b,a){for(var c=[],d=0;d<b;d++)c.push(M[a+4*d>>2]);return c}\nfunction Wb(b,a,c){b instanceof Object||Q(c+' with invalid \"this\": '+b);b instanceof a.V.constructor||Q(c+' incompatible with \"this\" of type '+b.constructor.name);b.U.W||Q(\"cannot call emscripten binding method \"+c+\" on deleted object\");return Kb(b.U.W,b.U.X.V,a.V)}function Xb(b){4<b&&0===--O[b].ya&&(O[b]=void 0,Wa.push(b))}\nfunction Zb(b,a,c){switch(a){case 0:return function(d){return this.fromWireType((c?Aa:H)[d])};case 1:return function(d){return this.fromWireType((c?Ba:Ca)[d>>1])};case 2:return function(d){return this.fromWireType((c?Da:M)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+b);}}function Mb(b){if(null===b)return\"null\";var a=typeof b;return\"object\"===a||\"array\"===a||\"function\"===a?b.toString():\"\"+b}\nfunction $b(b,a){switch(a){case 2:return function(c){return this.fromWireType(Ea[c>>2])};case 3:return function(c){return this.fromWireType(Fa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+b);}}\nfunction ac(b,a,c){switch(a){case 0:return c?function(d){return Aa[d]}:function(d){return H[d]};case 1:return c?function(d){return Ba[d>>1]}:function(d){return Ca[d>>1]};case 2:return c?function(d){return Da[d>>2]}:function(d){return M[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+b);}}var bc=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;\nfunction cc(b,a){var c=b>>1;for(var d=c+a/2;!(c>=d)&&Ca[c];)++c;c<<=1;if(32<c-b&&bc)return bc.decode(H.subarray(b,c));c=\"\";for(d=0;!(d>=a/2);++d){var e=Ba[b+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c}function dc(b,a,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=a;c=c<2*b.length?c/2:b.length;for(var e=0;e<c;++e)Ba[a>>1]=b.charCodeAt(e),a+=2;Ba[a>>1]=0;return a-d}function ec(b){return 2*b.length}\nfunction fc(b,a){for(var c=0,d=\"\";!(c>=a/4);){var e=Da[b+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}function gc(b,a,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=a;c=d+c-4;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var h=b.charCodeAt(++e);f=65536+((f&1023)<<10)|h&1023}Da[a>>2]=f;a+=4;if(a+4>c)break}Da[a>>2]=0;return a-d}\nfunction hc(b){for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);55296<=d&&57343>=d&&++c;a+=4}return a}var ic={};function jc(b){var a=ic[b];return void 0===a?T(b):a}var kc=[];function lc(b){var a=kc.length;kc.push(b);return a}function mc(b,a){for(var c=Array(b),d=0;d<b;++d)c[d]=kb(M[a+4*d>>2],\"parameter \"+d);return c}var nc=[],oc=[null,[],[]];Za=m.BindingError=Ya(\"BindingError\");m.count_emval_handles=function(){for(var b=0,a=5;a<O.length;++a)void 0!==O[a]&&++b;return b};\nm.get_first_emval=function(){for(var b=5;b<O.length;++b)if(void 0!==O[b])return O[b];return null};ab=m.PureVirtualError=Ya(\"PureVirtualError\");for(var pc=Array(256),qc=0;256>qc;++qc)pc[qc]=String.fromCharCode(qc);bb=pc;m.getInheritedInstanceCount=function(){return Object.keys(V).length};m.getLiveInheritedInstances=function(){var b=[],a;for(a in V)V.hasOwnProperty(a)&&b.push(V[a]);return b};m.flushPendingDeletes=db;m.setDelayFunction=function(b){eb=b;cb.length&&eb&&eb(db)};vb=m.InternalError=Ya(\"InternalError\");\nGb.prototype.isAliasOf=function(b){if(!(this instanceof Gb&&b instanceof Gb))return!1;var a=this.U.X.V,c=this.U.W,d=b.U.X.V;for(b=b.U.W;a.$;)c=a.na(c),a=a.$;for(;d.$;)b=d.na(b),d=d.$;return a===d&&c===b};Gb.prototype.clone=function(){this.U.W||Fb(this);if(this.U.ma)return this.U.count.value+=1,this;var b=yb,a=Object,c=a.create,d=Object.getPrototypeOf(this),e=this.U;b=b(c.call(a,d,{U:{value:{count:e.count,ka:e.ka,ma:e.ma,W:e.W,X:e.X,aa:e.aa,ca:e.ca}}}));b.U.count.value+=1;b.U.ka=!1;return b};\nGb.prototype[\"delete\"]=function(){this.U.W||Fb(this);this.U.ka&&!this.U.ma&&Q(\"Object already scheduled for deletion\");lb(this);nb(this.U);this.U.ma||(this.U.aa=void 0,this.U.W=void 0)};Gb.prototype.isDeleted=function(){return!this.U.W};Gb.prototype.deleteLater=function(){this.U.W||Fb(this);this.U.ka&&!this.U.ma&&Q(\"Object already scheduled for deletion\");cb.push(this);1===cb.length&&eb&&eb(db);this.U.ka=!0;return this};Pb.prototype.hb=function(b){this.Na&&(b=this.Na(b));return b};\nPb.prototype.Ga=function(b){this.ha&&this.ha(b)};Pb.prototype.argPackAdvance=8;Pb.prototype.readValueFromPointer=Bb;Pb.prototype.deleteObject=function(b){if(null!==b)b[\"delete\"]()};\nPb.prototype.fromWireType=function(b){function a(){return this.qa?xb(this.V.ea,{X:this.sb,W:c,ca:this,aa:b}):xb(this.V.ea,{X:this,W:b})}var c=this.hb(b);if(!c)return this.Ga(b),null;var d=ub(this.V,c);if(void 0!==d){if(0===d.U.count.value)return d.U.W=c,d.U.aa=b,d.clone();d=d.clone();this.Ga(b);return d}d=this.V.gb(c);d=tb[d];if(!d)return a.call(this);d=this.pa?d.Xa:d.pointerType;var e=ob(c,this.V,d.V);return null===e?a.call(this):this.qa?xb(d.V.ea,{X:d,W:e,ca:this,aa:b}):xb(d.V.ea,{X:d,W:e})};\nSb=m.UnboundTypeError=Ya(\"UnboundTypeError\");\nvar sc={l:function(b,a,c){b=T(b);a=kb(a,\"wrapper\");c=$a(c);var d=[].slice,e=a.V,f=e.ea,h=e.$.ea,g=e.$.constructor;b=Va(b,function(){e.$.Ma.forEach(function(k){if(this[k]===h[k])throw new ab(\"Pure virtual function \"+k+\" must be implemented in JavaScript\");}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&Q(\"Pass correct 'this' to __construct\");var k=g.implement.apply(void 0,[this].concat(d.call(arguments)));\nlb(k);var p=k.U;k.notifyOnDestruction();p.ma=!0;Object.defineProperties(this,{U:{value:p}});yb(this);k=p.W;k=fb(e,k);V.hasOwnProperty(k)?Q(\"Tried to register registered instance: \"+k):V[k]=this};f.__destruct=function(){this===f&&Q(\"Pass correct 'this' to __destruct\");lb(this);var k=this.U.W;k=fb(e,k);V.hasOwnProperty(k)?delete V[k]:Q(\"Tried to unregister unregistered instance: \"+k)};b.prototype=Object.create(f);for(var l in c)b.prototype[l]=c[l];return S(b)},I:function(b){var a=zb[b];delete zb[b];\nvar c=a.xa,d=a.ha,e=a.Ja,f=e.map(h=>h.kb).concat(e.map(h=>h.vb));W([b],f,h=>{var g={};e.forEach((l,k)=>{var p=h[k],r=l.ib,t=l.jb,v=h[k+e.length],q=l.ub,E=l.wb;g[l.eb]={read:I=>p.fromWireType(r(t,I)),write:(I,w)=>{var z=[];q(E,I,v.toWireType(z,w));Ab(z)}}});return[{name:a.name,fromWireType:function(l){var k={},p;for(p in g)k[p]=g[p].read(l);d(l);return k},toWireType:function(l,k){for(var p in g)if(!(p in k))throw new TypeError('Missing field:  \"'+p+'\"');var r=c();for(p in g)g[p].write(r,k[p]);null!==\nl&&l.push(d,r);return r},argPackAdvance:8,readValueFromPointer:Bb,ba:d}]})},x:function(){},B:function(b,a,c,d,e){var f=Eb(c);a=T(a);Y(b,{name:a,fromWireType:function(h){return!!h},toWireType:function(h,g){return g?d:e},argPackAdvance:8,readValueFromPointer:function(h){if(1===c)var g=Aa;else if(2===c)g=Ba;else if(4===c)g=Da;else throw new TypeError(\"Unknown boolean type size: \"+a);return this.fromWireType(g[h>>f])},ba:null})},c:function(b,a,c,d,e,f,h,g,l,k,p,r,t){p=T(p);f=Z(e,f);g&&(g=Z(h,g));k&&(k=\nZ(l,k));t=Z(r,t);var v=Ua(p);Ib(v,function(){Tb(\"Cannot construct \"+p+\" due to unbound types\",[d])});W([b,a,c],d?[d]:[],function(q){q=q[0];if(d){var E=q.V;var I=E.ea}else I=Gb.prototype;q=Va(v,function(){if(Object.getPrototypeOf(this)!==w)throw new Za(\"Use 'new' to construct \"+p);if(void 0===z.ia)throw new Za(p+\" has no accessible constructor\");var P=z.ia[arguments.length];if(void 0===P)throw new Za(\"Tried to invoke ctor of \"+p+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+\nObject.keys(z.ia).toString()+\") parameters instead!\");return P.apply(this,arguments)});var w=Object.create(I,{constructor:{value:q}});q.prototype=w;var z=new Jb(p,q,w,t,E,f,g,k);E=new Pb(p,z,!0,!1);I=new Pb(p+\"*\",z,!1,!1);var J=new Pb(p+\" const*\",z,!1,!0);tb[b]={pointerType:I,Xa:J};Qb(v,q);return[E,I,J]})},h:function(b,a,c,d,e,f,h){var g=Vb(c,d);a=T(a);f=Z(e,f);W([],[b],function(l){function k(){Tb(\"Cannot call \"+p+\" due to unbound types\",g)}l=l[0];var p=l.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\nvar r=l.V.constructor;void 0===r[a]?(k.ja=c-1,r[a]=k):(Hb(r,a,p),r[a].Y[c-1]=k);W([],g,function(t){t=Ub(p,[t[0],null].concat(t.slice(1)),null,f,h);void 0===r[a].Y?(t.ja=c-1,r[a]=t):r[a].Y[c-1]=t;return[]});return[]})},n:function(b,a,c,d,e,f,h,g){a=T(a);f=Z(e,f);W([],[b],function(l){l=l[0];var k=l.name+\".\"+a,p={get:function(){Tb(\"Cannot access \"+k+\" due to unbound types\",[c])},enumerable:!0,configurable:!0};p.set=g?()=>{Tb(\"Cannot access \"+k+\" due to unbound types\",[c])}:()=>{Q(k+\" is a read-only property\")};\nObject.defineProperty(l.V.constructor,a,p);W([],[c],function(r){r=r[0];var t={get:function(){return r.fromWireType(f(d))},enumerable:!0};g&&(g=Z(h,g),t.set=v=>{var q=[];g(d,r.toWireType(q,v));Ab(q)});Object.defineProperty(l.V.constructor,a,t);return[]});return[]})},k:function(b,a,c,d,e,f){0<a||ua();var h=Vb(a,c);e=Z(d,e);W([],[b],function(g){g=g[0];var l=\"constructor \"+g.name;void 0===g.V.ia&&(g.V.ia=[]);if(void 0!==g.V.ia[a-1])throw new Za(\"Cannot register multiple constructors with identical number of parameters (\"+\n(a-1)+\") for class '\"+g.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");g.V.ia[a-1]=()=>{Tb(\"Cannot construct \"+g.name+\" due to unbound types\",h)};W([],h,function(k){k.splice(1,0,null);g.V.ia[a-1]=Ub(l,k,null,e,f);return[]});return[]})},a:function(b,a,c,d,e,f,h,g){var l=Vb(c,d);a=T(a);f=Z(e,f);W([],[b],function(k){function p(){Tb(\"Cannot call \"+r+\" due to unbound types\",l)}k=k[0];var r=k.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\ng&&k.V.Ma.push(a);var t=k.V.ea,v=t[a];void 0===v||void 0===v.Y&&v.className!==k.name&&v.ja===c-2?(p.ja=c-2,p.className=k.name,t[a]=p):(Hb(t,a,r),t[a].Y[c-2]=p);W([],l,function(q){q=Ub(r,q,k,f,h);void 0===t[a].Y?(q.ja=c-2,t[a]=q):t[a].Y[c-2]=q;return[]});return[]})},b:function(b,a,c,d,e,f,h,g,l,k){a=T(a);e=Z(d,e);W([],[b],function(p){p=p[0];var r=p.name+\".\"+a,t={get:function(){Tb(\"Cannot access \"+r+\" due to unbound types\",[c,h])},enumerable:!0,configurable:!0};t.set=l?()=>{Tb(\"Cannot access \"+r+\" due to unbound types\",\n[c,h])}:()=>{Q(r+\" is a read-only property\")};Object.defineProperty(p.V.ea,a,t);W([],l?[c,h]:[c],function(v){var q=v[0],E={get:function(){var w=Wb(this,p,r+\" getter\");return q.fromWireType(e(f,w))},enumerable:!0};if(l){l=Z(g,l);var I=v[1];E.set=function(w){var z=Wb(this,p,r+\" setter\"),J=[];l(k,z,I.toWireType(J,w));Ab(J)}}Object.defineProperty(p.V.ea,a,E);return[]});return[]})},A:function(b,a){a=T(a);Y(b,{name:a,fromWireType:function(c){var d=$a(c);Xb(c);return d},toWireType:function(c,d){return S(d)},\nargPackAdvance:8,readValueFromPointer:Bb,ba:null})},j:function(b,a,c,d){function e(){}c=Eb(c);a=T(a);e.values={};Y(b,{name:a,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,h){return h.value},argPackAdvance:8,readValueFromPointer:Zb(a,c,d),ba:null});Ib(a,e)},i:function(b,a,c){var d=kb(b,\"enum\");a=T(a);b=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:Va(d.name+\"_\"+a,function(){})}});b.values[c]=d;b[a]=d},r:function(b,\na,c){c=Eb(c);a=T(a);Y(b,{name:a,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:$b(a,c),ba:null})},q:function(b,a,c,d,e,f){var h=Vb(a,c);b=T(b);e=Z(d,e);Ib(b,function(){Tb(\"Cannot call \"+b+\" due to unbound types\",h)},a-1);W([],h,function(g){Qb(b,Ub(b,[g[0],null].concat(g.slice(1)),null,e,f),a-1);return[]})},g:function(b,a,c,d,e){a=T(a);-1===e&&(e=4294967295);e=Eb(c);var f=g=>g;if(0===d){var h=32-8*c;f=g=>g<<h>>>h}c=a.includes(\"unsigned\")?\nfunction(g,l){return l>>>0}:function(g,l){return l};Y(b,{name:a,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:ac(a,e,0!==d),ba:null})},d:function(b,a,c){function d(f){f>>=2;var h=M;return new e(za,h[f+1],h[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][a];c=T(c);Y(b,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{lb:!0})},s:function(b,a){a=T(a);var c=\"std::string\"===a;Y(b,{name:a,fromWireType:function(d){var e=\nM[d>>2],f=d+4;if(c)for(var h=f,g=0;g<=e;++g){var l=f+g;if(g==e||0==H[l]){h=h?ya(H,h,l-h):\"\";if(void 0===k)var k=h;else k+=String.fromCharCode(0),k+=h;h=l+1}}else{k=Array(e);for(g=0;g<e;++g)k[g]=String.fromCharCode(H[f+g]);k=k.join(\"\")}jb(d);return k},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var f,h=\"string\"==typeof e;h||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||Q(\"Cannot pass non-string to std::string\");var g;if(c&&h)for(f=g=0;f<\ne.length;++f){var l=e.charCodeAt(f);127>=l?g++:2047>=l?g+=2:55296<=l&&57343>=l?(g+=4,++f):g+=3}else g=e.length;f=g;g=rc(4+f+1);l=g+4;M[g>>2]=f;if(c&&h){if(h=l,l=f+1,f=H,0<l){l=h+l-1;for(var k=0;k<e.length;++k){var p=e.charCodeAt(k);if(55296<=p&&57343>=p){var r=e.charCodeAt(++k);p=65536+((p&1023)<<10)|r&1023}if(127>=p){if(h>=l)break;f[h++]=p}else{if(2047>=p){if(h+1>=l)break;f[h++]=192|p>>6}else{if(65535>=p){if(h+2>=l)break;f[h++]=224|p>>12}else{if(h+3>=l)break;f[h++]=240|p>>18;f[h++]=128|p>>12&63}f[h++]=\n128|p>>6&63}f[h++]=128|p&63}}f[h]=0}}else if(h)for(h=0;h<f;++h)k=e.charCodeAt(h),255<k&&(jb(l),Q(\"String has UTF-16 code units that do not fit in 8 bits\")),H[l+h]=k;else for(h=0;h<f;++h)H[l+h]=e[h];null!==d&&d.push(jb,g);return g},argPackAdvance:8,readValueFromPointer:Bb,ba:function(d){jb(d)}})},p:function(b,a,c){c=T(c);if(2===a){var d=cc;var e=dc;var f=ec;var h=()=>Ca;var g=1}else 4===a&&(d=fc,e=gc,f=hc,h=()=>M,g=2);Y(b,{name:c,fromWireType:function(l){for(var k=M[l>>2],p=h(),r,t=l+4,v=0;v<=k;++v){var q=\nl+4+v*a;if(v==k||0==p[q>>g])t=d(t,q-t),void 0===r?r=t:(r+=String.fromCharCode(0),r+=t),t=q+a}jb(l);return r},toWireType:function(l,k){\"string\"!=typeof k&&Q(\"Cannot pass non-string to C++ string type \"+c);var p=f(k),r=rc(4+p+a);M[r>>2]=p>>g;e(k,r+4,p+a);null!==l&&l.push(jb,r);return r},argPackAdvance:8,readValueFromPointer:Bb,ba:function(l){jb(l)}})},K:function(b,a,c,d,e,f){zb[b]={name:T(a),xa:Z(c,d),ha:Z(e,f),Ja:[]}},J:function(b,a,c,d,e,f,h,g,l,k){zb[b].Ja.push({eb:T(a),kb:c,ib:Z(d,e),jb:f,vb:h,\nub:Z(g,l),wb:k})},C:function(b,a){a=T(a);Y(b,{nb:!0,name:a,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},m:function(b,a,c){b=$a(b);a=kb(a,\"emval::as\");var d=[],e=S(d);M[c>>2]=e;return a.toWireType(d,b)},t:function(b,a,c,d,e){b=kc[b];a=$a(a);c=jc(c);var f=[];M[d>>2]=S(f);return b(a,c,f,e)},f:function(b,a,c,d){b=kc[b];a=$a(a);c=jc(c);b(a,c,null,d)},L:Xb,e:function(b,a){var c=mc(b,a),d=c[0];a=d.name+\"_$\"+c.slice(1).map(function(h){return h.name}).join(\"_\")+\"$\";var e=nc[a];if(void 0!==\ne)return e;var f=Array(b-1);e=lc((h,g,l,k)=>{for(var p=0,r=0;r<b-1;++r)f[r]=c[r+1].readValueFromPointer(k+p),p+=c[r+1].argPackAdvance;h=h[g].apply(h,f);for(r=0;r<b-1;++r)c[r+1].Za&&c[r+1].Za(f[r]);if(!d.nb)return d.toWireType(l,h)});return nc[a]=e},D:function(b){b=jc(b);return S(m[b])},H:function(b,a){b=$a(b);a=$a(a);return S(b[a])},E:function(b){4<b&&(O[b].ya+=1)},G:function(b){return S(jc(b))},F:function(b){var a=$a(b);Ab(a);Xb(b)},u:function(b,a){b=kb(b,\"_emval_take_value\");b=b.readValueFromPointer(a);\nreturn S(b)},v:function(){ua(\"\")},o:function(b){var a=H.length;b>>>=0;if(2147483648<b)return!1;for(var c=1;4>=c;c*=2){var d=a*(1+.2/c);d=Math.min(d,b+100663296);var e=Math;d=Math.max(b,d);e=e.min.call(e,2147483648,d+(65536-d%65536)%65536);a:{try{va.grow(e-za.byteLength+65535>>>16);Ga();var f=1;break a}catch(h){}f=void 0}if(f)return!0}return!1},z:function(){return 52},w:function(){return 70},y:function(b,a,c,d){for(var e=0,f=0;f<c;f++){var h=M[a>>2],g=M[a+4>>2];a+=8;for(var l=0;l<g;l++){var k=H[h+\nl],p=oc[b];0===k||10===k?((1===b?pa:qa)(ya(p,0)),p.length=0):p.push(k)}e+=g}M[d>>2]=e;return 0}};\n(function(){function b(e){m.asm=e.exports;va=m.asm.M;Ga();Ha=m.asm.S;Ja.unshift(m.asm.N);Ma--;m.monitorRunDependencies&&m.monitorRunDependencies(Ma);0==Ma&&(null!==Na&&(clearInterval(Na),Na=null),Oa&&(e=Oa,Oa=null,e()))}function a(e){b(e.instance)}function c(e){return Sa().then(function(f){return WebAssembly.instantiate(f,d)}).then(function(f){return f}).then(e,function(f){qa(\"failed to asynchronously prepare wasm: \"+f);ua(f)})}var d={a:sc};Ma++;m.monitorRunDependencies&&m.monitorRunDependencies(Ma);\nif(m.instantiateWasm)try{return m.instantiateWasm(d,b)}catch(e){return qa(\"Module.instantiateWasm callback failed with error: \"+e),!1}(function(){return ra||\"function\"!=typeof WebAssembly.instantiateStreaming||Pa()||N.startsWith(\"file://\")||\"function\"!=typeof fetch?c(a):fetch(N,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(a,function(f){qa(\"wasm streaming compile failed: \"+f);qa(\"falling back to ArrayBuffer instantiation\");return c(a)})})})().catch(ba);\nreturn{}})();m.___wasm_call_ctors=function(){return(m.___wasm_call_ctors=m.asm.N).apply(null,arguments)};var jb=m._free=function(){return(jb=m._free=m.asm.O).apply(null,arguments)},rc=m._malloc=function(){return(rc=m._malloc=m.asm.P).apply(null,arguments)},ib=m.___getTypeName=function(){return(ib=m.___getTypeName=m.asm.Q).apply(null,arguments)};m.__embind_initialize_bindings=function(){return(m.__embind_initialize_bindings=m.asm.R).apply(null,arguments)};\nm.dynCall_jiji=function(){return(m.dynCall_jiji=m.asm.T).apply(null,arguments)};var tc;Oa=function uc(){tc||vc();tc||(Oa=uc)};\nfunction vc(){function b(){if(!tc&&(tc=!0,m.calledRun=!0,!wa)){Ta(Ja);aa(m);if(m.onRuntimeInitialized)m.onRuntimeInitialized();if(m.postRun)for(\"function\"==typeof m.postRun&&(m.postRun=[m.postRun]);m.postRun.length;){var a=m.postRun.shift();Ka.unshift(a)}Ta(Ka)}}if(!(0<Ma)){if(m.preRun)for(\"function\"==typeof m.preRun&&(m.preRun=[m.preRun]);m.preRun.length;)La();Ta(Ia);0<Ma||(m.setStatus?(m.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){m.setStatus(\"\")},1);b()},1)):b())}}\nif(m.preInit)for(\"function\"==typeof m.preInit&&(m.preInit=[m.preInit]);0<m.preInit.length;)m.preInit.pop()();vc();\n\n\n  return Rive.ready\n}\n);\n})();\nexport default Rive;","/**\n * Registers mouse move/up/down callback handlers on the canvas to send meaningful coordinates to\n * the state machine pointer move/up/down functions based on cursor interaction\n */\nexport const registerTouchInteractions = ({\n  canvas,\n  artboard,\n  stateMachines = [],\n  renderer,\n  rive,\n  fit,\n  alignment,\n}) => {\n  if (!canvas || !stateMachines.length || !renderer || !rive || !artboard) {\n    return null;\n  }\n\n  const mouseCallback = (event) => {\n    const boundingRect = event.currentTarget.getBoundingClientRect();\n\n    const canvasX = event.clientX - boundingRect.left;\n    const canvasY = event.clientY - boundingRect.top;\n    const forwardMatrix = rive.computeAlignment(\n      fit,\n      alignment,\n      {\n        minX: 0,\n        minY: 0,\n        maxX: boundingRect.width,\n        maxY: boundingRect.height,\n      },\n      artboard.bounds\n    );\n    let invertedMatrix = new rive.Mat2D();\n    forwardMatrix.invert(invertedMatrix);\n    const canvasCoordinatesVector = new rive.Vec2D(canvasX, canvasY);\n    const transformedVector = rive.mapXY(\n      invertedMatrix,\n      canvasCoordinatesVector\n    );\n    const transformedX = transformedVector.x();\n    const transformedY = transformedVector.y();\n\n    transformedVector.delete();\n    invertedMatrix.delete();\n    canvasCoordinatesVector.delete();\n    forwardMatrix.delete();\n\n    switch (event.type) {\n      // Pointer moving/hovering on the canvas\n      case \"mouseover\":\n      case \"mouseout\":\n      case \"mousemove\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerMove(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click initiated but not released yet on the canvas\n      case \"mousedown\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerDown(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click released on the canvas\n      case \"mouseup\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerUp(transformedX, transformedY);\n        }\n        break;\n      }\n      default:\n    }\n  };\n  const callback = mouseCallback.bind(this);\n  canvas.addEventListener(\"mouseover\", callback);\n  canvas.addEventListener(\"mouseout\", callback);\n  canvas.addEventListener(\"mousemove\", callback);\n  canvas.addEventListener(\"mousedown\", callback);\n  canvas.addEventListener(\"mouseup\", callback);\n  return () => {\n    canvas.removeEventListener(\"mouseover\", callback);\n    canvas.removeEventListener(\"mouseout\", callback);\n    canvas.removeEventListener(\"mousemove\", callback);\n    canvas.removeEventListener(\"mousedown\", callback);\n    canvas.removeEventListener(\"mouseup\", callback);\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as rc from \"./rive_advanced.mjs\";\nimport * as packageData from \"package.json\";\nimport { registerTouchInteractions } from \"./utils\";\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\n\n/**\n * Type for artboard bounds\n */\nexport type Bounds = rc.AABB;\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = \"cover\",\n  Contain = \"contain\",\n  Fill = \"fill\",\n  FitWidth = \"fitWidth\",\n  FitHeight = \"fitHeight\",\n  None = \"none\",\n  ScaleDown = \"scaleDown\",\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = \"center\",\n  TopLeft = \"topLeft\",\n  TopCenter = \"topCenter\",\n  TopRight = \"topRight\",\n  CenterLeft = \"centerLeft\",\n  CenterRight = \"centerRight\",\n  BottomLeft = \"bottomLeft\",\n  BottomCenter = \"bottomCenter\",\n  BottomRight = \"bottomRight\",\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit;\n  alignment?: Alignment;\n  minX?: number;\n  minY?: number;\n  maxX?: number;\n  maxY?: number;\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    console.warn(\n      \"This function is deprecated: please use `new Layout({})` instead\"\n    );\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY,\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft)\n      alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter)\n      alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight)\n      alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft)\n      alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight)\n      alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft)\n      alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter)\n      alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight)\n      alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;\n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL = `https://unpkg.com/${packageData.name}@${packageData.version}/rive.wasm`;\n\n  // Class is never instantiated\n  private constructor() {}\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: () => RuntimeLoader.wasmURL,\n    }).then((rive: rc.RiveCanvas) => {\n      RuntimeLoader.runtime = rive;\n      // Fire all the callbacks\n      while (RuntimeLoader.callBackQueue.length > 0) {\n        RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n      }\n    });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive))\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(\n    private animation: rc.LinearAnimationInstance,\n    private artboard: rc.Artboard,\n    runtime: rc.RiveCanvas,\n    public playing: boolean\n  ) {\n    this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n    return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n    this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  /**\n   * Apply interpolated keyframe values to the artboard. This should be called after calling\n   * .advance() on an animation instance so that new values are applied to properties.\n   *\n   * Note: This does not advance the artboard, which updates all objects on the artboard\n   * @param mix - Mix value for the animation from 0 to 1\n   */\n  public apply(mix: number) {\n    this.instance.apply(mix);\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n\n  /**\n   * Deletes the backing Wasm animation instance; once this is called, this\n   * animation is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n  constructor(\n    public readonly type: StateMachineInputType,\n    private runtimeInput: rc.SMIInput\n  ) {}\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nclass StateMachine {\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(\n    private stateMachine: rc.StateMachineInstance,\n    runtime: rc.RiveCanvas,\n    public playing: boolean,\n    private artboard: rc.Artboard\n  ) {\n    this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Advances the state machine instance by a given time.\n   * @param time - the time to advance the animation by in seconds\n   */\n  public advance(time: number) {\n    this.instance.advance(time);\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input\n   */\n  private mapRuntimeInput(\n    input: rc.SMIInput,\n    runtime: rc.RiveCanvas\n  ): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(\n        StateMachineInputType.Boolean,\n        input.asBool()\n      );\n    } else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(\n        StateMachineInputType.Number,\n        input.asNumber()\n      );\n    } else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(\n        StateMachineInputType.Trigger,\n        input.asTrigger()\n      );\n    }\n  }\n\n  /**\n   * Deletes the backing Wasm state machine instance; once this is called, this\n   * state machine is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = []\n  ) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(\n    animatables: string | string[],\n    playing: boolean,\n    fireEvent = true\n  ): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach((a) => (a.playing = playing));\n      this.stateMachines.forEach((m) => (m.playing = playing));\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map((a) => a.name);\n      const instancedMachineNames = this.stateMachines.map((m) => m.name);\n      for (const i in animatables) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n        } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if (anim) {\n            const newAnimation = new Animation(\n              anim,\n              this.artboard,\n              this.runtime,\n              playing\n            );\n            // Display the first frame of the specified animation\n            newAnimation.advance(0);\n            newAnimation.apply(1.0);\n            this.animations.push(newAnimation);\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              const newStateMachine = new StateMachine(\n                sm,\n                this.runtime,\n                playing,\n                this.artboard\n              );\n              this.stateMachines.push(newStateMachine);\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n  /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n  public pause(animatables: string[]): string[] {\n    return this.add(animatables, false);\n  }\n\n  /**\n   * Set time of named animations\n   * @param animations names of the animations to scrub\n   * @param value time scrub value, a floating point number to which the playhead is jumped\n   * @returns a list of names of the animations that were scrubbed\n   */\n  public scrub(animatables: string[], value: number): string[] {\n    const forScrubbing = this.animations.filter((a) =>\n      animatables.includes(a.name)\n    );\n    forScrubbing.forEach((a) => (a.scrubTo = value));\n    return forScrubbing.map((a) => a.name);\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations\n      .filter((a) => a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n  public get paused(): string[] {\n    return this.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => !m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    // Stop everything\n    if (animatables.length === 0) {\n      removedNames = this.animations\n        .map((a) => a.name)\n        .concat(this.stateMachines.map((m) => m.name));\n      // Clean up before emptying the arrays\n      this.animations.forEach((a) => a.cleanup());\n      this.stateMachines.forEach((m) => m.cleanup());\n      // Empty out the arrays\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter((a) =>\n        animatables.includes(a.name)\n      );\n\n      animationsToRemove.forEach((a) => {\n        a.cleanup();\n        this.animations.splice(this.animations.indexOf(a), 1);\n      });\n      const machinesToRemove = this.stateMachines.filter((m) =>\n        animatables.includes(m.name)\n      );\n      machinesToRemove.forEach((m) => {\n        m.cleanup();\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1);\n      });\n      removedNames = animationsToRemove\n        .map((a) => a.name)\n        .concat(machinesToRemove.map((m) => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return (\n      this.animations.reduce((acc, curr) => acc || curr.playing, false) ||\n      this.stateMachines.reduce((acc, curr) => acc || curr.playing, false)\n    );\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return (\n      !this.isPlaying &&\n      (this.animations.length > 0 || this.stateMachines.length > 0)\n    );\n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n  public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if (this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add(\n          [(instancedName = this.artboard.animationByIndex(0).name)],\n          playing,\n          fireEvent\n        );\n      } else if (this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add(\n          [(instancedName = this.artboard.stateMachineByIndex(0).name)],\n          playing,\n          fireEvent\n        );\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter((a) => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      } else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop },\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong },\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter((sm) => sm.playing)) {\n      statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load = \"load\",\n  LoadError = \"loaderror\",\n  Play = \"play\",\n  Pause = \"pause\",\n  Stop = \"stop\",\n  Loop = \"loop\",\n  Draw = \"draw\",\n  StateChange = \"statechange\",\n}\n\n// Event fired by Rive\nexport interface Event {\n  type: EventType;\n  data?: string | string[] | LoopEvent;\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = \"oneshot\", // has value 0 in runtime\n  Loop = \"loop\", // has value 1 in runtime\n  PingPong = \"pingpong\", // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType;\n  callback: EventCallback;\n}\n\n/**\n * FPS Reporting through callbacks sent to the WASM runtime\n */\nexport type FPSCallback = (fps: number) => void;\n\n// Manages Rive events and listeners\nclass EventManager {\n  constructor(private listeners: EventListener[] = []) {}\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter((e) => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach((listener) => listener.callback(event));\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action?: VoidCallback;\n  event?: Event;\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) {}\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      if (task?.action) {\n        task.action();\n      }\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas; // canvas is required\n  src?: string; // one of src or buffer is required\n  buffer?: ArrayBuffer; // one of src or buffer is required\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  layout?: Layout;\n  autoplay?: boolean;\n  useOffscreenRenderer?: boolean;\n  onLoad?: EventCallback;\n  onLoadError?: EventCallback;\n  onPlay?: EventCallback;\n  onPause?: EventCallback;\n  onStop?: EventCallback;\n  onLoop?: EventCallback;\n  onStateChange?: EventCallback;\n  /**\n   * @deprecated Use `onLoad()` instead\n   */\n  onload?: EventCallback;\n  /**\n   * @deprecated Use `onLoadError()` instead\n   */\n  onloaderror?: EventCallback;\n  /**\n   * @deprecated Use `onPoad()` instead\n   */\n  onplay?: EventCallback;\n  /**\n   * @deprecated Use `onPause()` instead\n   */\n  onpause?: EventCallback;\n  /**\n   * @deprecated Use `onStop()` instead\n   */\n  onstop?: EventCallback;\n  /**\n   * @deprecated Use `onLoop()` instead\n   */\n  onloop?: EventCallback;\n  /**\n   * @deprecated Use `onStateChange()` instead\n   */\n  onstatechange?: EventCallback;\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string;\n  buffer?: ArrayBuffer;\n  autoplay?: boolean;\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  useOffscreenRenderer?: boolean;\n}\n\n// Interface ot Rive.reset function\nexport interface RiveResetParameters {\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  autoplay?: boolean;\n}\n\nexport class Rive {\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // Flag to indicate if the layout has changed; used by the renderer to know\n  // when to align\n  private _updateLayout = true;\n\n  // The runtime renderer\n  private renderer: rc.Renderer;\n\n  /**\n   * Flag to active/deactivate renderer\n   */\n  private isRendererActive = true;\n\n  // Tracks if a Rive file is loaded\n  private loaded = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // place to clear up event listeners\n  private eventCleanup: VoidCallback | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    \"Rive source file or data buffer required\";\n\n  // Durations to generate a frame for the last second. Used for performance profiling.\n  public durations: number[] = [];\n  public frameTimes: number[] = [];\n  public frameCount = 0;\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onLoad) this.on(EventType.Load, params.onLoad);\n    if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n    if (params.onPlay) this.on(EventType.Play, params.onPlay);\n    if (params.onPause) this.on(EventType.Pause, params.onPause);\n    if (params.onStop) this.on(EventType.Stop, params.onStop);\n    if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n    if (params.onStateChange)\n      this.on(EventType.StateChange, params.onStateChange);\n\n    /**\n     * @deprecated Use camelCase'd versions instead.\n     */\n    if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n    if (params.onloaderror && !params.onLoadError)\n      this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n    if (params.onpause && !params.onPause)\n      this.on(EventType.Pause, params.onpause);\n    if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange && !params.onStateChange)\n      this.on(EventType.StateChange, params.onstatechange);\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard,\n      useOffscreenRenderer: params.useOffscreenRenderer,\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn(\n      \"This function is deprecated: please use `new Rive({})` instead\"\n    );\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({\n    src,\n    buffer,\n    animations,\n    stateMachines,\n    artboard,\n    autoplay = false,\n    useOffscreenRenderer = false,\n  }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance()\n      .then((runtime) => {\n        this.runtime = runtime;\n\n        // Get the canvas where you want to render the animation and create a renderer\n        this.renderer = this.runtime.makeRenderer(\n          this.canvas,\n          useOffscreenRenderer\n        );\n\n        // Initial size adjustment based on devicePixelRatio if no width/height are\n        // specified explicitly\n        if (!(this.canvas.width || this.canvas.height)) {\n          this.resizeDrawingSurfaceToCanvas();\n        }\n\n        // Load Rive data from a source uri or a data buffer\n        this.initData(\n          artboard,\n          startingAnimationNames,\n          startingStateMachineNames,\n          autoplay\n        )\n          .then(() => {\n            const activeStateMachineInstances = (\n              this.animator.stateMachines || []\n            )\n              .filter((sm) => sm.playing)\n              .map((sm) => sm.instance);\n            this.eventCleanup = registerTouchInteractions({\n              canvas: this.canvas,\n              artboard: this.artboard,\n              stateMachines: activeStateMachineInstances,\n              renderer: this.renderer,\n              rive: this.runtime,\n              fit: this._layout.runtimeFit(this.runtime),\n              alignment: this._layout.runtimeAlignment(this.runtime),\n            });\n          })\n          .catch((e) => {\n            console.error(e);\n          });\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(new Uint8Array(this.buffer));\n\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(\n        artboardName,\n        animationNames,\n        stateMachineNames,\n        autoplay\n      );\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? \"buffer\",\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = \"Problem loading file; may be corrupt!\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): void {\n    // Fetch the artboard\n    const rootArtboard = artboardName\n      ? this.file.artboardByName(artboardName)\n      : this.file.defaultArtboard();\n\n    // Check we have a working artboard\n    if (!rootArtboard) {\n      const msg = \"Invalid artboard name or no default artboard\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    this.artboard = rootArtboard;\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = \"Artboard has no animations\";\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(\n      this.runtime,\n      this.artboard,\n      this.eventManager\n    );\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.add(instanceNames, autoplay, false);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      },\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed.\n   * Used for debugging purposes\n   */\n  private renderSecondTimer = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    const before = performance.now();\n\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += time - this.lastRenderTime;\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // - Advance non-paused animations by the elapsed number of seconds\n    // - Advance any animations that require scrubbing\n    // - Advance to the first frame even when autoplay is false\n    const activeAnimations = this.animator.animations\n      .filter((a) => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first) => (first.needsScrub ? -1 : 1));\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.apply(1.0);\n    }\n\n    // - Advance non-paused state machines by the elapsed number of seconds\n    // - Advance to the first frame even when autoplay is false\n    const activeStateMachines = this.animator.stateMachines.filter(\n      (a) => a.playing\n    );\n    for (const stateMachine of activeStateMachines) {\n      stateMachine.advance(elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    const { renderer } = this;\n    // Canvas must be wiped to prevent artifacts\n    renderer.clear();\n    renderer.save();\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    this.artboard.draw(renderer);\n\n    renderer.restore();\n    renderer.flush();\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Add duration to create frame to durations array\n    this.frameCount++;\n    const after = performance.now();\n    this.frameTimes.push(after);\n    this.durations.push(after - before);\n    while (this.frameTimes[0] <= after - 1000) {\n      this.frameTimes.shift();\n      this.durations.shift();\n    }\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    const { renderer, runtime, _layout, artboard } = this;\n    // Align things up safe in the knowledge we can restore if changed\n    renderer.align(\n      _layout.runtimeFit(runtime),\n      _layout.runtimeAlignment(runtime),\n      {\n        minX: _layout.minX,\n        minY: _layout.minY,\n        maxX: _layout.maxX,\n        maxY: _layout.maxY,\n      },\n      artboard.bounds\n    );\n  }\n\n  public get fps() {\n    return this.durations.length;\n  }\n\n  public get frameTime() {\n    if (this.durations.length === 0) {\n      return 0;\n    }\n    return (\n      this.durations.reduce((a, b) => a + b, 0) / this.durations.length\n    ).toFixed(4);\n  }\n\n  /**\n   * Cleans up all Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances,\n   * renderer instance, file and runtime.\n   *\n   * Once this is called, you will need to initialise a new instance of the\n   * Rive class\n   */\n  public cleanup() {\n    // Stop the renderer if it hasn't already been stopped.\n    this.stopRendering();\n    // Clean up any artboard, animation or state machine instances.\n    this.cleanupInstances();\n    // Delete the renderer\n    this.renderer.delete();\n    // Delete the rive file\n    this.file.delete();\n  }\n\n  /**\n   * Cleans up any Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances.\n   *\n   * Once this is called, things will need to be reinitialized or bad things\n   * might happen.\n   */\n  public cleanupInstances() {\n    if (this.eventCleanup !== null) {\n      this.eventCleanup();\n    }\n    // Delete all animation and state machine instances\n    this.stop();\n    if (this.artboard) {\n      this.artboard.delete();\n      this.artboard = null;\n    }\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.scrub(animationNames, value),\n      });\n      return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n  }\n\n  /**\n   * Resets the animation\n   * @param artboard the name of the artboard, or default if none given\n   * @param animations the names of animations for playback\n   * @param stateMachines the names of state machines for playback\n   * @param autoplay whether to autoplay when reset, defaults to false\n   *\n   */\n  public reset(params?: RiveResetParameters): void {\n    // Get the current artboard, animations, state machines, and playback states\n    const artBoardName = params?.artboard;\n    const animationNames = mapToStringArray(params?.animations);\n    const stateMachineNames = mapToStringArray(params?.stateMachines);\n    const autoplay = params?.autoplay ?? false;\n\n    // Stop everything and clean up\n    this.cleanupInstances();\n\n    // Reinitialize an artboard instance with the state\n    this.initArtboard(\n      artBoardName,\n      animationNames,\n      stateMachineNames,\n      autoplay\n    );\n    this.taskQueue.process();\n  }\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /**\n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height,\n    });\n  }\n\n  /**\n   * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n   * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n   * and resize the layout to match the new drawing surface afterwards.\n   * Useful function for consumers to include in a window resize listener\n   */\n  public resizeDrawingSurfaceToCanvas() {\n    if (this.canvas instanceof HTMLCanvasElement && !!window) {\n      const { width, height } = this.canvas.getBoundingClientRect();\n      const dpr = window.devicePixelRatio || 1;\n      this.canvas.width = dpr * width;\n      this.canvas.height = dpr * height;\n      this.startRendering();\n      this.resizeToCanvas();\n    }\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  /**\n   * Returns the name of the active artboard\n   */\n  public get activeArtboard(): string {\n    return this.artboard ? this.artboard.name : \"\";\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(\n      (m) => m.name === name\n    );\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => m.playing)\n      .map((m) => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations.filter((a) => a.playing).map((a) => a.name);\n  }\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => !m.playing)\n      .map((m) => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      if (this.runtime.cancelAnimationFrame) {\n        this.runtime.cancelAnimationFrame(this.frameRequestId);\n      } else {\n        cancelAnimationFrame(this.frameRequestId);\n      }\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && this.artboard && !this.frameRequestId) {\n      if (this.runtime.requestAnimationFrame) {\n        this.frameRequestId = this.runtime.requestAnimationFrame(\n          this.draw.bind(this)\n        );\n      } else {\n        this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Enables frames-per-second (FPS) reporting for the runtime\n   * If no callback is provided, Rive will append a fixed-position div at the top-right corner of\n   * the page with the FPS reading\n   * @param fpsCallback - Callback from the runtime during the RAF loop that supplies the FPS value\n   */\n  public enableFPSCounter(fpsCallback?: FPSCallback) {\n    this.runtime.enableFPSCounter(fpsCallback);\n  }\n\n  /**\n   * Disables frames-per-second (FPS) reporting for the runtime\n   */\n  public disableFPSCounter() {\n    this.runtime.disableFPSCounter();\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n        const instance = new this.runtime.StateMachineInstance(\n          stateMachine,\n          artboard\n        );\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({ name: input.name, type: input.type });\n        }\n        artboardContents.stateMachines.push({\n          name: name,\n          inputs: inputContents,\n        });\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n};\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nconst mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === \"string\") {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n};\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n};\n\n// #endregion\n","Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"react\"),t=require(\"@rive-app/canvas\");function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var r=n(e),i=function(){return i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},i.apply(this,arguments)};function a(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n}var u=function(){function e(){}return e.prototype.observe=function(){},e.prototype.unobserve=function(){},e.prototype.disconnect=function(){},e}();var o=globalThis.ResizeObserver||u,c=void 0!==globalThis.ResizeObserver,s=!c;function f(t){var n=e.useState({width:0,height:0}),r=n[0],i=n[1];e.useEffect(function(){if(\"undefined\"!=typeof window){var e=function(){i({width:window.innerWidth,height:window.innerHeight})};return s&&(e(),window.addEventListener(\"resize\",e)),function(){return window.removeEventListener(\"resize\",e)}}},[]);var a,u,f,l=e.useRef(new o((a=function(e){c&&i({width:e[e.length-1].contentRect.width,height:e[e.length-1].contentRect.height})},u=0,f=0,function(){for(var e=this,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];clearTimeout(f),f=window.setTimeout(function(){return a.apply(e,t)},u)})));return e.useEffect(function(){var e=l.current;return t.current&&c&&e.observe(t.current),function(){e.disconnect(),t.current&&c&&e.unobserve(t.current)}},[t,l]),r}function l(){var e=\"undefined\"!=typeof window&&\"number\"==typeof window.devicePixelRatio?window.devicePixelRatio:1;return Math.min(Math.max(1,e),3)}function d(e){var t=e.setContainerRef,n=e.setCanvasRef,u=e.className,o=void 0===u?\"\":u,c=e.style,s=a(e,[\"setContainerRef\",\"setCanvasRef\",\"className\",\"style\"]),f=i({width:\"100%\",height:\"100%\"},c);return r.default.createElement(\"div\",i({ref:t,className:o},!o&&{style:f}),r.default.createElement(\"canvas\",i({ref:n,style:{verticalAlign:\"top\",width:0,height:0}},s)))}var h={useDevicePixelRatio:!0,fitCanvasToArtboardHeight:!1,useOffscreenRenderer:!0};function v(n,a){void 0===a&&(a={});var u=e.useRef(null),o=e.useRef(null),c=e.useState(null),s=c[0],v=c[1],p=e.useState({height:0,width:0}),w=p[0],g=p[1],y=e.useState({height:0,width:0}),b=y[0],m=y[1],R=f(o),O=function(){var t=l(),n=e.useState(t),r=n[0],i=n[1];return e.useEffect(function(){if(\"undefined\"!=typeof window&&\"matchMedia\"in window){var e=function(){var e=l();i(e)},t=window.matchMedia(\"screen and (resolution: \".concat(r,\"dppx)\"));return t.addEventListener(\"change\",e),function(){t.removeEventListener(\"change\",e)}}},[r]),r}(),E=Boolean(n),x=function(e){return Object.assign({},h,e)}(a);function C(){if(o.current){var e=function(){var e,t,n,r,i=null!==(t=null===(e=o.current)||void 0===e?void 0:e.clientWidth)&&void 0!==t?t:0,a=null!==(r=null===(n=o.current)||void 0===n?void 0:n.clientHeight)&&void 0!==r?r:0;if(s&&x.fitCanvasToArtboardHeight){var u=s.bounds;return{width:i,height:i*(u.maxY/u.maxX)}}return{width:i,height:a}}(),t=e.width,n=e.height;if(u.current&&s){var r=t!==w.width||n!==w.height;if(x.fitCanvasToArtboardHeight&&r&&(o.current.style.height=n+\"px\"),x.useDevicePixelRatio){var i=t*O!==b.width||n*O!==b.height;if(r||i){var a=O*t,c=O*n;u.current.width=a,u.current.height=c,u.current.style.width=t+\"px\",u.current.style.height=n+\"px\",m({width:a,height:c})}}else r&&(u.current.width=t,u.current.height=n,m({width:t,height:n}));g({width:t,height:n}),s.startRendering()}s&&s.resizeToCanvas()}}e.useEffect(function(){s&&C()},[s,R,O]);var P=e.useCallback(function(e){if(e&&n&&E){var r=x.useOffscreenRenderer,a=new t.Rive(i(i({useOffscreenRenderer:r},n),{canvas:e}));a.on(t.EventType.Load,function(){u.current?v(a):a.cleanup()})}else null===e&&u.current&&(u.current.height=0,u.current.width=0);u.current=e},[E]),j=e.useCallback(function(e){o.current=e},[]);e.useEffect(function(){var e=new IntersectionObserver(function(e){e[0].isIntersecting?s&&s.startRendering():s&&s.stopRendering()});return u.current&&e.observe(u.current),function(){e.disconnect()}},[s]),e.useEffect(function(){return function(){s&&(s.cleanup(),v(null))}},[s]);var M=null==n?void 0:n.animations;e.useEffect(function(){s&&M&&(s.isPlaying?(s.stop(s.animationNames),s.play(M)):s.isPaused&&(s.stop(s.animationNames),s.pause(M)))},[M,s]);var T=e.useCallback(function(e){return r.default.createElement(d,i({setContainerRef:j,setCanvasRef:P},e))},[]);return{canvas:u.current,setCanvasRef:P,setContainerRef:j,rive:s,RiveComponent:T}}exports.default=function(e){var t=e.src,n=e.artboard,u=e.animations,o=e.stateMachines,c=e.layout,s=e.useOffscreenRenderer,f=void 0===s||s,l=a(e,[\"src\",\"artboard\",\"animations\",\"stateMachines\",\"layout\",\"useOffscreenRenderer\"]),d=v({src:t,artboard:n,animations:u,layout:c,stateMachines:o,autoplay:!0},{useOffscreenRenderer:f}).RiveComponent;return r.default.createElement(d,i({},l))},exports.useRive=v,exports.useStateMachineInput=function(n,r,i,a){var u=e.useState(null),o=u[0],c=u[1];return e.useEffect(function(){function e(){if(n&&r&&i||c(null),n&&r&&i){var e=n.stateMachineInputs(r);if(e){var t=e.find(function(e){return e.name===i});void 0!==a&&t&&(t.value=a),c(t||null)}}else c(null)}e(),n&&n.on(t.EventType.Play,function(){e()})},[n]),o},Object.keys(t).forEach(function(e){\"default\"===e||exports.hasOwnProperty(e)||Object.defineProperty(exports,e,{enumerable:!0,get:function(){return t[e]}})});\n"],"names":["factory","Rive","m","aa","ca","b","h","g","c","d","forEach","l","console","error","k","this","La","e","a","f","requestAnimationFrame","set","cancelAnimationFrame","delete","cb","innerHTML","fb","$a","ea","assert","push","has","ready","ba","fa","t","v","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","preferLowPowerToHighPerformance","failIfMajorPerformanceCaveat","enableExtensionsByDefault","explicitSwapControl","renderViaOffscreenBackBuffer","q","log","E","I","w","shaderSource","compileShader","z","attachShader","getParameter","MAX_TEXTURE_SIZE","bindAttribLocation","linkProgram","useProgram","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","uniform1i","getUniformLocation","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","ob","Ya","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_WRAP_T","p","r","bb","viewport","disable","SCISSOR_TEST","clearColor","clear","COLOR_BUFFER_BIT","enable","sort","y","J","X","P","image","va","rb","da","uniform4f","uniform2f","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","canvas","onRuntimeInitialized","n","srcOver","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","color","luminosity","__construct","__parent","call","decode","u","total","F","B","src","type","onload","Ta","Va","size","width","loaded","D","ga","reset","addPath","C","R","K","fillRule","Ca","moveTo","lineTo","cubicTo","bezierCurveTo","close","closePath","Da","thickness","Wa","join","miter","round","bevel","cap","butt","square","style","Ua","blendMode","Sa","linearGradient","oa","Pa","Qa","Ha","Ia","za","radialGradient","mb","addStop","stop","completeGradient","draw","G","globalCompositeOperation","A","U","lineWidth","lineCap","lineJoin","stroke","Z","Ba","save","slice","length","bind","restore","splice","transform","rotate","_drawPath","_drawImage","globalAlpha","drawImage","_getMatrix","_drawImageMesh","L","pb","qb","sa","ta","ia","ja","sb","la","Ea","Fa","yb","Ka","ra","Aa","Ra","indices","Oa","na","Yb","resetTransform","_clipPath","clip","add","clearRect","flush","translate","makeRenderer","renderFactory","makeRenderPaint","makeRenderPath","makeRenderImage","Xa","load","Promise","enableFPSCounter","disableFPSCounter","cleanup","ma","ha","ka","x","open","responseType","send","Uint8Array","response","onerror","pa","qa","Object","assign","wasmBinary","wa","xa","ya","Ga","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","Ja","unshift","N","Ma","Na","ua","startsWith","apply","O","value","name","message","prototype","constructor","toString","Za","Q","S","ab","T","H","db","eb","V","$","gb","hb","jb","kb","lb","nb","count","tb","vb","wb","xb","create","unregister","zb","Ab","pop","Bb","fromWireType","Cb","Db","W","hasOwnProperty","Eb","Y","Fb","Gb","Hb","arguments","Ib","Jb","Kb","Lb","Nb","Ob","Pb","Qb","Sb","Tb","Ub","Vb","Wb","Xb","Zb","Mb","$b","ac","M","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","nc","oc","count_emval_handles","get_first_emval","qc","getInheritedInstanceCount","keys","getLiveInheritedInstances","flushPendingDeletes","setDelayFunction","isAliasOf","clone","isDeleted","deleteLater","argPackAdvance","readValueFromPointer","deleteObject","sc","defineProperty","notifyOnDestruction","defineProperties","__destruct","read","write","toWireType","TypeError","pointerType","get","enumerable","configurable","j","values","i","s","ArrayBuffer","ib","ub","o","grow","asm","monitorRunDependencies","instance","credentials","then","arrayBuffer","catch","resolve","WebAssembly","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","tc","rc","vc","postRun","preRun","setTimeout","setStatus","__embind_initialize_bindings","dynCall_jiji","registerTouchInteractions","artboard","stateMachines","renderer","rive","fit","alignment","minX","minY","maxX","maxY","forwardMatrix","invertedMatrix","canvasCoordinatesVector","transformedVector","stateMachine","undefined","__webpack_module_cache__","moduleId","exports","__webpack_modules__","__webpack_require__","definition","obj","prop","Fit","Alignment","StateMachineInputType","params","Contain","Center","Layout","_a","warn","cachedRuntimeFit","Cover","cover","contain","Fill","fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","RuntimeLoader","_rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__","locateFile","wasmURL","runtime","callBackQueue","shift","callback","isLoading","loadRuntime","getInstance","url","package_json__WEBPACK_IMPORTED_MODULE_1__","animation","playing","loopCount","scrubTo","LinearAnimationInstance","Animation","time","loopValue","advance","mix","EventType","LoopType","runtimeInput","StateMachineInput","Trigger","fire","inputs","StateMachineInstance","initInputs","StateMachine","names","stateChangedCount","stateChangedNameByIndex","inputCount","input","mapRuntimeInput","SMIInput","bool","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","eventManager","animations","Animator","animatables","fireEvent","mapToStringArray","instancedAnimationNames","map","instancedMachineNames","aIndex","indexOf","mIndex","anim","animationByName","newAnimation","sm","stateMachineByName","newStateMachine","Play","data","Pause","paused","forScrubbing","filter","includes","concat","removedNames","animationsToRemove","_this","machinesToRemove","Stop","reduce","acc","curr","isPlaying","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","_i","Loop","PingPong","statesChanged","StateChange","listeners","EventManager","listener","currentListener","remove","event","getListeners","queue","TaskQueueManager","task","action","_updateLayout","isRendererActive","readyForPlaying","eventCleanup","durations","frameTimes","frameCount","renderSecondTimer","buffer","layout","onLoad","on","Load","onLoadError","LoadError","onPlay","onPause","onStop","onLoop","onStateChange","onloaderror","onplay","onpause","onstop","onloop","onstatechange","taskQueue","init","autoplay","useOffscreenRenderer","_b","_c","Error","missingErrorMessage","startingAnimationNames","startingStateMachineNames","awaitInstance","height","resizeDrawingSurfaceToCanvas","initData","activeStateMachineInstances","animator","_layout","runtimeFit","runtimeAlignment","artboardName","animationNames","stateMachineNames","loadRiveFile","_d","file","initArtboard","process","drawFrame","msg","reject","instanceNames","rootArtboard","artboardByName","defaultArtboard","atLeastOne","startRendering","onSecond","before","performance","now","frameRequestId","lastRenderTime","elapsedTime","activeAnimations_1","needsScrub","first","didLoop","activeStateMachines_1","alignRenderer","handleLooping","handleStateChanges","after","isPaused","isStopped","align","bounds","toFixed","stopRendering","cleanupInstances","play","pause","scrub","artBoardName","resizeToCanvas","copyWith","HTMLCanvasElement","window","getBoundingClientRect","dpr","devicePixelRatio","find","removeAll","fpsCallback","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","name_1","inputContents","req","Request","fetch","Array","Testing","module","require","default","getOwnPropertySymbols","propertyIsEnumerable","observe","unobserve","disconnect","globalThis","ResizeObserver","useState","useEffect","innerWidth","innerHeight","addEventListener","removeEventListener","useRef","contentRect","clearTimeout","current","Math","min","max","setContainerRef","setCanvasRef","className","createElement","ref","verticalAlign","useDevicePixelRatio","fitCanvasToArtboardHeight","matchMedia","clientWidth","clientHeight","useCallback","IntersectionObserver","isIntersecting","RiveComponent","useRive","useStateMachineInput","stateMachineInputs"],"sourceRoot":""}