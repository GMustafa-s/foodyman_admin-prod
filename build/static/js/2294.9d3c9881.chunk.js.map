{"version":3,"file":"static/js/2294.9d3c9881.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","helpers/formatSortType.js","../node_modules/qrcode.react/lib/esm/index.js","views/seller-views/booking-table/table-qrcode.js","views/seller-views/booking-table/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import { DownloadOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\n\nconst baseUrl = 'https://qr-code-rho-bay.vercel.app';\n\nconst TableQrCode = ({ table }) => {\n  const { settings } = useSelector((state) => state.globalSettings);\n  const { t } = useTranslation();\n  const qrRef = useRef();\n  const params = new URLSearchParams({\n    shop_id: table.shop_section.shop_id,\n    table_id: table.id,\n    chair_count: table.chair_count,\n    name: table.name,\n  });\n  const qrCodeType =\n    !!settings?.qrcode_type && settings.qrcode_type !== 'w1'\n      ? settings.qrcode_type\n      : '';\n  const url = `${\n    settings?.qrcode_base_url || baseUrl\n  }${qrCodeType}?${params.toString()}`;\n  const downloadQRCode = (e) => {\n    e.preventDefault();\n    let canvas = qrRef.current.querySelector('canvas');\n    let image = canvas.toDataURL('image/png');\n    let anchor = document.createElement('a');\n    anchor.href = image;\n    anchor.download = `qr-code.png`;\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n  };\n  return (\n    <form onSubmit={downloadQRCode}>\n      <div className='flex flex-column'>\n        <div className='w-100'>\n          <div ref={qrRef}>\n            <QRCodeCanvas\n              size={500}\n              id='qrCode'\n              includeMargin\n              value={url}\n              style={{ width: '100%', aspectRatio: '1/1', height: '100%' }}\n              bgColor={'#fff'}\n              level={'H'}\n            />\n          </div>\n        </div>\n        <Button\n          htmlType='submit'\n          disabled={!table}\n          icon={<DownloadOutlined />}\n          type='primary'\n        >\n          {t('download')}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default TableQrCode;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n  QrcodeOutlined,\n} from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport CustomModal from '../../../components/modal';\nimport { Context } from '../../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  addMenu,\n  disableRefetch,\n  setMenuData,\n} from '../../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport DeleteButton from '../../../components/delete-button';\nimport FilterColumns from '../../../components/filter-column';\nimport useDidUpdate from '../../../helpers/useDidUpdate';\nimport formatSortType from '../../../helpers/formatSortType';\nimport { fetchBookingTable } from '../../../redux/slices/booking-tables';\nimport sellerBookingTable from '../../../services/seller/booking-table';\nimport { Button, Card, Modal, Space, Table, Tooltip } from 'antd';\nimport TableQrCode from './table-qrcode';\n\nconst BookingTables = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [text, setText] = useState(null);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const data = activeMenu?.data;\n\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    search: data?.search ? data.search : undefined,\n    perPage: data?.perPage || 10,\n    page: data?.page || 1,\n    deleted_at: data?.role === 'deleted_at' ? data?.role : null,\n  };\n\n  const { tables, meta, loading } = useSelector(\n    (state) => state.bookingTable,\n    shallowEqual,\n  );\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        id: 'booking-table-edit',\n        url: `seller/booking/table/${row.id}`,\n        name: t('booking.table.edit'),\n      }),\n    );\n    navigate(`/seller/booking/table/${row.id}`);\n  };\n\n  const goToClone = (row) => {\n    dispatch(\n      addMenu({\n        id: 'booking-table-clone',\n        url: `seller/booking/table/clone/${row.id}`,\n        name: t('booking.table.clone'),\n      }),\n    );\n    navigate(`/seller/booking/table/clone/${row.id}`);\n  };\n\n  const goToAddBox = () => {\n    dispatch(\n      addMenu({\n        id: 'booking-table-add',\n        url: 'seller/booking/table/add',\n        name: t('booking.table.add'),\n      }),\n    );\n    navigate('/seller/booking/table/add');\n  };\n\n  const openQrCode = (row) => {\n    setSelectedTable(row);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n      sorter: true,\n    },\n    {\n      title: t('name'),\n      dataIndex: 'name',\n      key: 'name',\n      is_show: true,\n      render: (_, row) => row?.name,\n    },\n    {\n      title: t('sected.zone'),\n      key: 'name',\n      is_show: true,\n      render: (_, row) => row.shop_section?.translation?.title,\n    },\n    {\n      title: t('chair.count'),\n      dataIndex: 'chair_count',\n      key: 'chair_count',\n      is_show: true,\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => goToEdit(row)}\n              disabled={row.deleted_at}\n            />\n            <Button\n              icon={<CopyOutlined />}\n              onClick={() => goToClone(row)}\n              disabled={row.deleted_at}\n            />\n            <DeleteButton\n              disabled={row.deleted_at}\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setId([row.id]);\n                setIsModalVisible(true);\n                setText(true);\n              }}\n            />\n            <Tooltip title={t('show.qrcode')}>\n              <Button\n                icon={<QrcodeOutlined />}\n                onClick={() => openQrCode(row)}\n                disabled={row.deleted_at}\n              />\n            </Tooltip>\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const brandDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        })),\n      ),\n    };\n    sellerBookingTable\n      .delete(params)\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchBookingTable(paramsData));\n        setIsModalVisible(false);\n        setText(null);\n        setId(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, perPage, page, column, sort },\n      }),\n    );\n  }\n\n  useDidUpdate(() => {\n    dispatch(fetchBookingTable(paramsData));\n  }, [activeMenu.data]);\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchBookingTable(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  return (\n    <>\n      <Card className='p-0'>\n        <Space wrap className='justify-content-end w-100'>\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n          <Button\n            type='primary'\n            icon={<PlusCircleOutlined />}\n            onClick={goToAddBox}\n          >\n            {t('add.booking.table')}\n          </Button>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      </Card>\n\n      <Card title={t('booking.tables')}>\n        <Table\n          scroll={{ x: true }}\n          rowSelection={rowSelection}\n          columns={columns?.filter((item) => item.is_show)}\n          dataSource={tables}\n          pagination={{\n            pageSize: meta?.per_page,\n            page: meta?.current_page,\n            total: meta?.total,\n          }}\n          rowKey={(record) => record.id}\n          onChange={onChangePagination}\n          loading={loading}\n        />\n      </Card>\n      <CustomModal\n        click={brandDelete}\n        text={text ? t('delete') : t('all.delete')}\n        setText={setId}\n        loading={loadingBtn}\n      />\n      <Modal\n        width={400}\n        visible={!!selectedTable}\n        footer={null}\n        onCancel={() => setSelectedTable(null)}\n      >\n        <TableQrCode table={selectedTable} />\n      </Modal>\n    </>\n  );\n};\n\nexport default BookingTables;\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","formatSortType","qrcodegen","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","qrcodegen2","_QrCode","constructor","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","static","text","ecl","segs","QrSegment","makeSegments","encodeSegments","data","seg","makeBytes","dataUsedBits","minVersion","arguments","length","undefined","maxVersion","boostEcl","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","Math","min","padByte","forEach","getModule","x","y","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","degree","root","reedSolomonMultiply","divisor","_","factor","shift","coef","z","n","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","digits","isNumeric","parseInt","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","QRCodeCanvas","_a","level","bgColor","fgColor","otherProps","imgSrc","src","_canvas","useRef","_image","isImgLoaded","setIsImageLoaded","useEffect","current","canvas","ctx","getContext","encodeText","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","React","display","onLoad","ref","table","settings","useSelector","state","globalSettings","qrRef","params","URLSearchParams","shop_id","shop_section","table_id","id","chair_count","name","qrCodeType","qrcode_type","url","qrcode_base_url","toString","onSubmit","preventDefault","querySelector","toDataURL","anchor","document","createElement","href","download","body","appendChild","click","removeChild","aspectRatio","htmlType","DownloadOutlined","BookingTables","dispatch","useDispatch","navigate","useNavigate","setIsModalVisible","useContext","Context","setId","loadingBtn","setLoadingBtn","setText","selectedTable","setSelectedTable","activeMenu","shallowEqual","paramsData","sort","column","search","perPage","page","deleted_at","role","tables","meta","loading","bookingTable","sorter","render","_row$shop_section","_row$shop_section$tra","translation","EditOutlined","addMenu","goToEdit","CopyOutlined","goToClone","QrcodeOutlined","openQrCode","useDidUpdate","fetchBookingTable","refetch","disableRefetch","rowSelection","selectedRowKeys","_Fragment","Card","wrap","allDelete","PlusCircleOutlined","goToAddBox","FilterColumns","Table","scroll","filter","dataSource","pagination","pageSize","per_page","current_page","rowKey","record","field","order","setMenuData","CustomModal","brandDelete","assign","index","sellerBookingTable","then","finally","Modal","footer","onCancel","TableQrCode","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}