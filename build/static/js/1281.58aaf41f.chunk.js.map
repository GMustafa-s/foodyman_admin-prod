{"version":3,"file":"static/js/1281.58aaf41f.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","helpers/formatSortType.js","views/shop-ads/shop-ads-status-modal.js","views/shop-ads/index.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Form, Modal, Row, Select } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport shopAdsService from 'services/shop-ads';\nimport { disableRefetch } from '../../redux/slices/menu';\nimport { fetchShopAds } from 'redux/slices/shop-ads';\nimport { toast } from 'react-toastify';\n\nconst allStatuses = ['new', 'approved', 'canceled'];\n\nexport default function ShopAdsStatusModal({ data, handleCancel, paramsData }) {\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [shopAdData, setShopAdData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [fetchingShopAds, setFetchingShopAds] = useState(false);\n\n  useEffect(() => {\n    setFetchingShopAds(true);\n    shopAdsService\n      .getById(data?.id)\n      .then((res) => {\n        let shopAd = res.data;\n\n        const data = {\n          ads_package_id: shopAd?.ads_package_id,\n          banner_id: shopAd?.banner_id,\n          active: shopAd?.active,\n          position_page: shopAd?.position_page,\n        };\n\n        setShopAdData(data);\n      })\n      .catch((error) => toast.error(error.message))\n      .finally(() => setFetchingShopAds(false));\n  }, [data?.id]);\n\n  const onFinish = (values) => {\n    setLoading(true);\n\n    const params = { ...values };\n\n    console.log('shopAdData => ', shopAdData);\n\n    !fetchingShopAds &&\n      shopAdsService\n        .update(data.id, { ...shopAdData, status: params?.status })\n        .then(() => {\n          handleCancel();\n          dispatch(fetchShopAds(paramsData));\n          dispatch(disableRefetch(activeMenu));\n        })\n        .finally(() => setLoading(false));\n  };\n\n  return (\n    <Modal\n      visible={!!data}\n      title={data.title}\n      onCancel={handleCancel}\n      footer={[\n        <Button type='primary' onClick={() => form.submit()} loading={loading}>\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel}>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form\n        form={form}\n        layout='vertical'\n        onFinish={onFinish}\n        initialValues={{ status: data.status }}\n      >\n        <Row gutter={12}>\n          <Col span={24}>\n            <Form.Item\n              label={t('status')}\n              name={'status'}\n              rules={[{ required: true, message: t('required') }]}\n            >\n              <Select>\n                {allStatuses.map((item) => (\n                  <Select.Option key={item}>{t(item)}</Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Button, Table, Card, Space, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { fetchShopAds } from 'redux/slices/shop-ads';\nimport { Context } from '../../context/context';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport FilterColumns from 'components/filter-column';\nimport { addMenu, disableRefetch, setMenuData } from 'redux/slices/menu';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport DeleteButton from '../../components/delete-button';\nimport { useNavigate } from 'react-router-dom';\nimport CustomModal from 'components/modal';\nimport ShopAdsStatusModal from './shop-ads-status-modal';\nimport shopAdsService from 'services/shop-ads';\nimport formatSortType from '../../helpers/formatSortType';\nimport moment from 'moment';\n\nexport default function ShopAds() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const {\n    shopAdsList,\n    loading: listLoading,\n    meta,\n  } = useSelector((state) => state.shopAds, shallowEqual);\n  const { setIsModalVisible } = useContext(Context);\n\n  const [id, setId] = useState(null);\n  const [text, setText] = useState(null);\n  const [active, setActive] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [shopAdsDetails, setShopAdsDetails] = useState(null);\n\n  const data = activeMenu.data;\n\n  const paramsData = {\n    search: data?.serach,\n    perPage: data?.perPage,\n    page: data?.page,\n    sort: data?.sort,\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchShopAds(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchShopAds(paramsData));\n  }, [activeMenu.data]);\n\n  const onChangePagination = (pagination, filter, sorter) => {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      }),\n    );\n  };\n\n  const shopAdsDelete = () => {\n    setLoading(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        })),\n      ),\n    };\n\n    shopAdsService\n      .delete(params)\n      .then(() => {\n        setIsModalVisible(false);\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchShopAds(paramsData));\n        setText(null);\n        setActive(false);\n      })\n      .finally(() => {\n        setLoading(false);\n        setId(null);\n      });\n  };\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        id: 'shop-ads',\n        url: `shop-ads/${row.id}`,\n        name: t('edit.shop.ads'),\n      }),\n    );\n    navigate(`/shop-ads/${row.id}`);\n  };\n\n  const goToTransactions = () => {\n    dispatch(\n      addMenu({\n        id: 'transactions',\n        url: `transactions`,\n        name: t('transactions'),\n      }),\n    );\n    navigate(`/transactions`);\n  };\n\n  const handleActive = () => {\n    setLoading(true);\n    shopAdsService\n      .setActive(id)\n      .then(() => {\n        setIsModalVisible(false);\n        dispatch(fetchShopAds(paramsData));\n        toast.success(t('successfully.updated'));\n        setActive(false);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      is_show: true,\n      sorter: (a, b) => a.id - b.id,\n    },\n    {\n      title: t('shop'),\n      dataIndex: 'title',\n      is_show: true,\n      render: (_, row) => {\n        return <span>{row?.shop?.translation?.title}</span>;\n      },\n    },\n    {\n      title: t('expire.at'),\n      dataIndex: 'expire_at',\n      is_show: true,\n      render: (_, row) => (\n        <>\n          {row?.expired_at ? (\n            moment(row?.expired_at).format('YYYY-MM-DD HH:mm')\n          ) : (\n            <span>{t('not.expired')}</span>\n          )}\n        </>\n      ),\n    },\n    {\n      title: t('status'),\n      is_show: true,\n      dataIndex: 'status',\n      key: 'status',\n      render: (status, row) => (\n        <div>\n          {status === 'new' ? (\n            <Tag color='blue'>{t(status)}</Tag>\n          ) : status === 'canceled' ? (\n            <Tag color='error'>{t(status)}</Tag>\n          ) : (\n            <Tag color='cyan'>{t(status)}</Tag>\n          )}\n          {!row.deleted_at ? (\n            <EditOutlined onClick={() => setShopAdsDetails(row)} />\n          ) : (\n            ''\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('transaction'),\n      dataIndex: 'transaction',\n      is_show: true,\n      render: (transaction, row) => {\n        return (\n          <>\n            {!!transaction ? (\n              <Button onClick={goToTransactions} color='cyan'>\n                {row?.transaction?.status}\n              </Button>\n            ) : (\n              <Button color='error'>{t('not.paid')}</Button>\n            )}\n          </>\n        );\n      },\n    },\n    {\n      title: t('options'),\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => goToEdit(row)}\n              disabled={row.deleted_at}\n            />\n            <DeleteButton\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setIsModalVisible(true);\n                setId([row.id]);\n                setText(true);\n                setActive(false);\n              }}\n              disabled={row.deleted_at}\n            />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  return (\n    <>\n      <Card className='p-0'>\n        <Space wrap size={[14, 20]}>\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      </Card>\n      <Card>\n        <Table\n          scroll={{ x: true }}\n          dataSource={shopAdsList}\n          columns={columns?.filter((item) => item?.is_show)}\n          rowSelection={rowSelection}\n          rowKey={(record) => record.id}\n          loading={loading || listLoading}\n          pagination={{\n            pageSize: meta.per_page,\n            page: meta.current_page,\n            total: meta.total,\n          }}\n          onChange={onChangePagination}\n        />\n      </Card>\n      {shopAdsDetails && (\n        <ShopAdsStatusModal\n          data={shopAdsDetails}\n          handleCancel={() => setShopAdsDetails(null)}\n          paramsData={paramsData}\n        />\n      )}\n      <CustomModal\n        click={active ? handleActive : shopAdsDelete}\n        text={\n          active ? t('set.active.advert') : text ? t('delete') : t('all.delete')\n        }\n        setText={setId}\n        setActive={setActive}\n      />\n    </>\n  );\n}\n","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","formatSortType","allStatuses","ShopAdsStatusModal","data","handleCancel","paramsData","activeMenu","useSelector","state","shallowEqual","form","Form","dispatch","useDispatch","shopAdData","setShopAdData","loading","setLoading","fetchingShopAds","setFetchingShopAds","useEffect","shopAdsService","id","then","res","shopAd","ads_package_id","banner_id","active","position_page","catch","error","message","finally","Modal","onCancel","footer","submit","layout","onFinish","values","params","console","log","status","fetchShopAds","disableRefetch","initialValues","Row","gutter","Col","span","label","name","rules","required","Select","ShopAds","navigate","useNavigate","shopAdsList","listLoading","meta","shopAds","setIsModalVisible","useContext","Context","setId","text","setText","setActive","shopAdsDetails","setShopAdsDetails","search","serach","perPage","page","sort","refetch","useDidUpdate","goToTransactions","addMenu","url","rowSelection","selectedRowKeys","sorter","a","b","render","_","row","_row$shop","_row$shop$translation","shop","translation","_Fragment","expired_at","moment","format","Tag","color","deleted_at","EditOutlined","transaction","_row$transaction","goToEdit","Card","wrap","allDelete","length","FilterColumns","Table","scroll","x","dataSource","filter","rowKey","record","pagination","pageSize","per_page","current_page","total","onChangePagination","current","field","column","order","setMenuData","CustomModal","click","handleActive","shopAdsDelete","Object","assign","index","ref","React","AntdIcon","_objectSpread","TableOutlinedSvg","displayName"],"sourceRoot":""}