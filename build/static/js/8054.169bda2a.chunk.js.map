{"version":3,"file":"static/js/8054.169bda2a.chunk.js","mappings":"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","sources":["components/filter-column.js","components/search-input.js","helpers/formatSortType.js","helpers/numberToPrice.js","views/deliveryman-orders/index.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport default function SearchInput({\n  handleChange,\n  defaultValue,\n  resetSearch,\n  ...props\n}) {\n  const [searchTerm, setSearchTerm] = useState(defaultValue);\n\n  const debounceSearch = useMemo(() => {\n    const loadOptions = (value) => {\n      handleChange(value);\n    };\n    return debounce(loadOptions, 800);\n  }, [handleChange]);\n\n  useEffect(() => {\n    setSearchTerm(defaultValue);\n  }, [resetSearch, defaultValue]);\n\n  return (\n    <Input\n      value={searchTerm}\n      onChange={(event) => {\n        setSearchTerm(event.target.value);\n        debounceSearch(event.target.value);\n      }}\n      prefix={<SearchOutlined />}\n      {...props}\n    />\n  );\n}\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import { store } from 'redux/store';\n\nexport default function numberToPrice(number = 0, symbol, position) {\n  const defaultCurrency = store.getState()?.currency?.defaultCurrency;\n  const price = Number(number)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  const currencySymbol = symbol || defaultCurrency?.symbol || '$';\n  const currencyPosition = position || defaultCurrency?.position || 'before';\n\n  return currencyPosition === 'after'\n    ? `${price} ${currencySymbol}`\n    : `${currencySymbol} ${price}`;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Space, Table, Card, Tabs } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { addMenu, disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport { fetchDeliverymanOrders } from '../../redux/slices/orders';\nimport formatSortType from '../../helpers/formatSortType';\nimport SearchInput from '../../components/search-input';\nimport numberToPrice from '../../helpers/numberToPrice';\nimport FilterColumns from '../../components/filter-column';\nimport moment from \"moment\";\n\nconst { TabPane } = Tabs;\n\nconst statuses = ['accepted', 'ready', 'on_a_way', 'delivered', 'canceled'];\n\nexport default function DeliverymanOrders() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { defaultCurrency } = useSelector(\n    (state) => state.currency,\n    shallowEqual\n  );\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [role, setRole] = useState('accepted');\n  const immutable = activeMenu.data?.role || role;\n  const data = activeMenu?.data;\n  const paramsData = {\n    search: data?.search,\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n    user_id: data?.userId,\n    status: immutable,\n  };\n\n  const goToShow = (row) => {\n    dispatch(\n      addMenu({\n        url: `deliveryman/order/details/${row.id}`,\n        id: 'order_details',\n        name: t('order.details'),\n      })\n    );\n    navigate(`/deliveryman/order/details/${row.id}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('client'),\n      dataIndex: 'user',\n      key: 'user',\n      is_show: true,\n      render: (user) => (\n        <div>\n          {user.firstname} {user.lastname}\n        </div>\n      ),\n    },\n    {\n      title: t('number.of.products'),\n      dataIndex: 'order_details_count',\n      key: 'rate',\n      is_show: true,\n      render: (order_details_count) => (\n        <div className='text-lowercase'>\n          {order_details_count || 0} {t('products')}\n        </div>\n      ),\n    },\n    {\n      title: t('amount'),\n      dataIndex: 'details',\n      key: 'price',\n      is_show: true,\n      render: (_, row) => {\n        return numberToPrice(row?.total_price, defaultCurrency.symbol);\n      },\n    },\n    {\n      title: t('payment.type'),\n      dataIndex: 'transaction',\n      key: 'transaction',\n      is_show: true,\n      render: (transaction) => t(transaction?.payment_system?.tag) || '-',\n    },\n    {\n      title: 'created.at',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (_, row) => moment(row?.created_at).format('YYYY-MM-DD HH:mm')\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button icon={<EyeOutlined />} onClick={() => goToShow(row)} />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const { orders, meta, loading, params } = useSelector(\n    (state) => state.orders,\n    shallowEqual\n  );\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      })\n    );\n  }\n\n  useDidUpdate(() => {\n    dispatch(fetchDeliverymanOrders(paramsData));\n  }, [activeMenu?.data]);\n\n  useEffect(() => {\n    if (activeMenu?.refetch) {\n      dispatch(fetchDeliverymanOrders(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu?.refetch]);\n\n  const handleFilter = (items) => {\n    const data = activeMenu.data;\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, ...items },\n      })\n    );\n  };\n\n  return (\n    <Card\n      title={t('orders')}\n      extra={\n        <Space wrap>\n          <SearchInput\n            placeholder={t('search')}\n            handleChange={(e) => handleFilter({ search: e })}\n            defaultValue={activeMenu.data?.search}\n            resetSearch={!activeMenu.data?.search}\n          />\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Tabs\n        onChange={(key) => {\n          handleFilter({ role: key, page: 1 });\n          setRole(key);\n        }}\n        type='card'\n        activeKey={immutable}\n      >\n        {statuses.map((item) => (\n          <TabPane tab={t(item)} key={item} />\n        ))}\n      </Tabs>\n      <Table\n        scroll={{ x: true }}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={orders}\n        loading={loading}\n        pagination={{\n          pageSize: params.perPage,\n          page: params.page,\n          total: meta.total,\n          defaultCurrent: params.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n      />\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["Text","Typography","_ref","columns","setColumns","style","size","iconOnly","t","useTranslation","open","setOpen","useState","menu","_jsx","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","onClick","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","Button","icon","TableOutlined","SearchInput","handleChange","defaultValue","resetSearch","props","searchTerm","setSearchTerm","debounceSearch","useMemo","debounce","value","useEffect","Input","event","target","prefix","SearchOutlined","formatSortType","type","numberToPrice","_store$getState","_store$getState$curre","number","arguments","length","undefined","symbol","position","defaultCurrency","store","currency","price","Number","toFixed","replace","currencySymbol","currencyPosition","TabPane","Tabs","statuses","DeliverymanOrders","_activeMenu$data","_activeMenu$data2","_activeMenu$data3","dispatch","useDispatch","navigate","useNavigate","useSelector","state","shallowEqual","activeMenu","role","setRole","immutable","data","paramsData","search","sort","column","perPage","page","user_id","userId","status","sorter","render","user","firstname","lastname","order_details_count","_","row","total_price","transaction","_transaction$payment_","payment_system","tag","moment","created_at","format","EyeOutlined","addMenu","url","id","name","goToShow","orders","meta","loading","params","useDidUpdate","fetchDeliverymanOrders","refetch","disableRefetch","handleFilter","items","setMenuData","Card","extra","wrap","placeholder","e","FilterColumns","activeKey","tab","Table","scroll","x","filter","dataSource","pagination","pageSize","total","defaultCurrent","rowKey","record","current","field","order","ref","React","AntdIcon","_objectSpread","TableOutlinedSvg","displayName"],"sourceRoot":""}