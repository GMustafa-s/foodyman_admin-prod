{"version":3,"file":"static/js/2076.568da995.chunk.js","mappings":"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","sources":["components/chart-widget.js","components/filter-column.js","components/report/chart.js","components/search.js","constants/ChartConstant.js","helpers/numberToPrice.js","views/report-orders/index.js","../node_modules/@ant-design/icons-svg/es/asn/LineChartOutlined.js","../node_modules/@ant-design/icons/es/icons/LineChartOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\nimport ApexChart from 'react-apexcharts';\nimport ReactResizeDetector from 'react-resize-detector';\nimport {\n  apexAreaChartDefaultOption,\n  apexBarChartDefaultOption,\n  apexLineChartDefaultOption,\n  apexPieChartDefaultOption,\n} from '../constants/ChartConstant';\n\nconst DIR_RTL = 'rtl';\n\nconst titleStyle = {\n  position: 'absolute',\n  zIndex: '1',\n};\n\nconst extraStyle = {\n  position: 'absolute',\n  zIndex: '1',\n  right: '0',\n  top: '-2px',\n};\n\nconst getChartTypeDefaultOption = (type) => {\n  switch (type) {\n    case 'line':\n      return apexLineChartDefaultOption;\n    case 'bar':\n      return apexBarChartDefaultOption;\n    case 'area':\n      return apexAreaChartDefaultOption;\n    case 'pie':\n      return apexPieChartDefaultOption;\n    default:\n      return apexLineChartDefaultOption;\n  }\n};\n\nconst ChartWidget = ({\n  title,\n  series,\n  width,\n  height,\n  xAxis,\n  customOptions,\n  card,\n  type,\n  extra,\n  direction,\n  bodyClass,\n}) => {\n  let options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)));\n\n  const isMobile = window.innerWidth < 768;\n  const setLegendOffset = () => {\n    if (chartRef.current) {\n      const lengend = chartRef.current.querySelectorAll(\n        'div.apexcharts-legend'\n      )[0];\n      lengend.style.marginRight = `${\n        isMobile ? 0 : extraRef.current?.offsetWidth\n      }px`;\n      if (direction === DIR_RTL) {\n        lengend.style.right = 'auto';\n        lengend.style.left = '0';\n      }\n      if (isMobile) {\n        lengend.style.position = 'relative';\n        lengend.style.top = 0;\n        lengend.style.justifyContent = 'start';\n        lengend.style.padding = 0;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setLegendOffset();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const extraRef = useRef(null);\n  const chartRef = useRef();\n\n  options.xaxis = {\n    categories: xAxis,\n  };\n  if (customOptions) {\n    options = { ...options, ...customOptions };\n  }\n\n  const onResize = () => {\n    setTimeout(() => {\n      setLegendOffset();\n    }, 600);\n  };\n\n  const renderChart = () => (\n    <ReactResizeDetector onResize={onResize()}>\n      <div\n        style={direction === DIR_RTL ? { direction: 'ltr' } : {}}\n        className='chartRef'\n        ref={chartRef}\n      >\n        <ApexChart\n          options={options}\n          type={type}\n          series={series}\n          width={width}\n          height={height}\n        />\n      </div>\n    </ReactResizeDetector>\n  );\n\n  return (\n    <>\n      {card ? (\n        <Card>\n          <div className={`position-relative ${bodyClass}`}>\n            {<div style={!isMobile ? titleStyle : {}}>{title}</div> && (\n              <h4\n                className='font-weight-bold'\n                style={!isMobile ? titleStyle : {}}\n              >\n                {title}\n              </h4>\n            )}\n            {extra && (\n              <div ref={extraRef} style={!isMobile ? extraStyle : {}}>\n                {extra}\n              </div>\n            )}\n            {renderChart()}\n          </div>\n        </Card>\n      ) : (\n        renderChart()\n      )}\n    </>\n  );\n};\n\nChartWidget.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  series: PropTypes.array.isRequired,\n  xAxis: PropTypes.array,\n  customOptions: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  card: PropTypes.bool,\n  type: PropTypes.string,\n  extra: PropTypes.element,\n  bodyClass: PropTypes.string,\n};\n\nChartWidget.defaultProps = {\n  series: [],\n  height: 300,\n  width: '100%',\n  card: true,\n  type: 'line',\n};\n\nexport default ChartWidget;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import { Card, Col, Row, Space, Typography, Divider, Select } from 'antd';\nimport React, { useMemo } from 'react';\nimport { LineChartOutlined, BarChartOutlined } from '@ant-design/icons';\nimport ChartWidget from '../chart-widget';\nimport { COLORS } from '../../constants/ChartConstant';\nimport { useTranslation } from 'react-i18next';\nimport { useContext } from 'react';\nimport { ReportContext } from '../../context/report';\nconst { Title } = Typography;\n\nconst ReportChart = ({ reportData = {} }) => {\n  const { by_time, options, handleByTime, chart_type, setChartType } =\n    useContext(ReportContext);\n  const { t } = useTranslation();\n  const categories = useMemo(\n    () => reportData?.chart?.map((item) => item.time),\n    [reportData?.chart]\n  );\n\n  const chartData = useMemo(() => {\n    if (Boolean(reportData.charts)) {\n      return reportData.charts.map((item) => {\n        return {\n          name: item.translation.title,\n          data: item.stocks?.map(\n            (item) =>\n              item.total_order_quantity ||\n              item.avg_quantity ||\n              item.quantity ||\n              item.count ||\n              item.price ||\n              item.order_details_sum_quantity ||\n              0\n          ) || [],\n        };\n      });\n    } else\n      return [\n        {\n          name: t('orders'),\n          data: reportData?.chart?.map(\n            (item) => \n              parseInt(item.count ||\n              item.total_price ||\n              item.quantity ||\n              item.price ||\n              item.products_count ||\n              item.order_details_avg_quantity ||\n              item.order_details_avg_total_price ||\n              item.order_details_sum_quantity ||\n              item.avg_price ||\n              item.avg_quantity ||\n              0, 10)\n          ) || [],\n        },\n      ];\n  }, [reportData?.chart]);\n\n  return (\n    <Row gutter={24}>\n      <Col span={24}>\n        <Card>\n          <Row gutter={24} className='w-100'>\n            <div className='d-flex justify-content-between w-100'>\n              <Space size='large' className='d-flex'>\n                <Title level={3} className='mb-0'>\n                  {t('item.sold')}\n                </Title>\n              </Space>\n\n              <div className='d-flex'>\n                <Select\n                  style={{ width: 100 }}\n                  onChange={handleByTime}\n                  options={options}\n                  defaultValue={by_time}\n                />\n\n                <Divider type='vertical' style={{ height: '100%' }} />\n                <Space>\n                  <LineChartOutlined\n                    style={{\n                      fontSize: '22px',\n                      cursor: 'pointer',\n                      color: chart_type === 'area' ? 'green' : '',\n                    }}\n                    onClick={() => setChartType('area')}\n                  />\n                  <BarChartOutlined\n                    style={{\n                      fontSize: '22px',\n                      cursor: 'pointer',\n                      color: chart_type === 'bar' ? 'green' : '',\n                    }}\n                    onClick={() => setChartType('bar')}\n                  />\n                </Space>\n              </div>\n            </div>\n          </Row>\n          <Divider />\n          <ChartWidget\n            type={chart_type || \"area\"}\n            card={false}\n            series={chartData}\n            xAxis={categories}\n            height={280}\n            customOptions={{\n              colors: [\n                COLORS[1],\n                COLORS[2],\n                COLORS[3],\n                COLORS[4],\n                COLORS[5],\n                COLORS[6],\n                COLORS[0],\n              ],\n              legend: {\n                show: false,\n              },\n              stroke: {\n                width: 2.5,\n                curve: 'smooth',\n              },\n            }}\n          />\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ReportChart;\n","import React, { useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Select, Spin } from 'antd';\n\nexport const DebounceSelect = ({\n  fetchOptions,\n  debounceTimeout = 400,\n  onClear,\n  ...props\n}) => {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  const fetchOnFocus = () => {\n      debounceFetcher('');\n  };\n\n  return (\n    <Select\n      showSearch\n      allowClear\n      labelInValue={true}\n      filterOption={false}\n      onSearch={debounceFetcher}\n      onClear={() => {\n        debounceFetcher('');\n        !!onClear && onClear();\n      }}\n      notFoundContent={fetching ? <Spin size='small' /> : 'no results'}\n      {...props}\n      options={options}\n      onFocus={fetchOnFocus}\n    />\n  );\n};\n","export const COLOR_1 = '#3e82f7'; // blue\r\nexport const COLOR_2 = '#04d182'; // cyan\r\nexport const COLOR_3 = '#ff6b72'; // volcano\r\nexport const COLOR_4 = '#ffc107'; // gold\r\nexport const COLOR_5 = '#a461d8'; // purple\r\nexport const COLOR_6 = '#fa8c16'; // orange\r\nexport const COLOR_7 = '#17bcff'; // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n  COLOR_1,\r\n  COLOR_2,\r\n  COLOR_3,\r\n  COLOR_4,\r\n  COLOR_5,\r\n  COLOR_6,\r\n  COLOR_7,\r\n];\r\n\r\nexport const COLORS_LIGHT = [\r\n  COLOR_1_LIGHT,\r\n  COLOR_2_LIGHT,\r\n  COLOR_3_LIGHT,\r\n  COLOR_4_LIGHT,\r\n  COLOR_5_LIGHT,\r\n  COLOR_6_LIGHT,\r\n  COLOR_7_LIGHT,\r\n];\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    width: 3,\r\n    curve: 'smooth',\r\n    lineCap: 'round',\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return (\r\n        val +\r\n        ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\r\n        ''\r\n      );\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  grid: {\r\n    xaxis: {\r\n      lines: {\r\n        show: true,\r\n      },\r\n    },\r\n    yaxis: {\r\n      lines: {\r\n        show: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexAreaChartDefaultOption = { ...apexLineChartDefaultOption };\r\n\r\nexport const apexBarChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  plotOptions: {\r\n    bar: {\r\n      horizontal: false,\r\n      columnWidth: '25px',\r\n      startingShapre: 'rounded',\r\n      endingShape: 'rounded',\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    show: true,\r\n    width: 6,\r\n    curve: 'smooth',\r\n    colors: ['transparent'],\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    inverseOrder: true,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return (\r\n        val +\r\n        ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\r\n        ''\r\n      );\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  fill: {\r\n    opacity: 1,\r\n  },\r\n  tooltip: {\r\n    y: {\r\n      formatter: (val) => `${val}`,\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexPieChartDefaultOption = {\r\n  colors: [...COLORS],\r\n  plotOptions: {\r\n    pie: {\r\n      size: 200,\r\n      donut: {\r\n        labels: {\r\n          show: true,\r\n          total: {\r\n            show: false,\r\n            showAlways: true,\r\n            label: '',\r\n            fontSize: '18px',\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 'bold',\r\n            color: '#1a3353',\r\n            formatter: function (w) {\r\n              return w.globals.seriesTotals.reduce((a, b) => {\r\n                return a + b;\r\n              }, 0) + 'Orders count';\r\n            },\r\n          },\r\n        },\r\n        size: '100%',\r\n      },\r\n    },\r\n  },\r\n  labels: [],\r\n  dataLabels: {\r\n    enabled: true,\r\n  },\r\n  legend: {\r\n    show: true,\r\n  }\r\n};\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n  chart: {\r\n    type: 'line',\r\n    sparkline: {\r\n      enabled: true,\r\n    },\r\n  },\r\n  stroke: {\r\n    width: 2,\r\n    curve: 'smooth',\r\n  },\r\n  tooltip: {\r\n    fixed: {\r\n      enabled: false,\r\n    },\r\n    x: {\r\n      show: false,\r\n    },\r\n    y: {\r\n      title: {\r\n        formatter: function (seriesName) {\r\n          return '';\r\n        },\r\n      },\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n  },\r\n};\r\n","import { store } from 'redux/store';\n\nexport default function numberToPrice(number = 0, symbol, position) {\n  const defaultCurrency = store.getState()?.currency?.defaultCurrency;\n  const price = Number(number)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  const currencySymbol = symbol || defaultCurrency?.symbol || '$';\n  const currencyPosition = position || defaultCurrency?.position || 'before';\n\n  return currencyPosition === 'after'\n    ? `${price} ${currencySymbol}`\n    : `${currencySymbol} ${price}`;\n}\n","import {\n  Card,\n  Col,\n  Row,\n  Space,\n  Typography,\n  Table,\n  Tag,\n  DatePicker,\n  Spin,\n  Menu,\n  Dropdown,\n} from 'antd';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { addMenu, disableRefetch } from '../../redux/slices/menu';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport ReportChart from '../../components/report/chart';\nimport moment from 'moment';\nimport { ReportContext } from '../../context/report';\nimport FilterColumns from '../../components/filter-column';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  fetchOrderProduct,\n  fetchOrderProductChart,\n} from '../../redux/slices/report/order';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport numberToPrice from '../../helpers/numberToPrice';\nimport { DebounceSelect } from 'components/search';\nimport shopService from 'services/restaurant';\nconst { Text, Title } = Typography;\nconst { RangePicker } = DatePicker;\n\nconst ReportOrder = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { date_from, date_to, by_time, chart, handleChart, handleDateRange } =\n    useContext(ReportContext);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const {\n    loading,\n    chartData: reportData,\n    productList: reportProducts,\n  } = useSelector((state) => state.orderReport, shallowEqual);\n  const { defaultCurrency } = useSelector(\n    (state) => state.currency,\n    shallowEqual,\n  );\n  const [selectedShop, setSelectedShop] = useState();\n\n  const [columns, setColumns] = useState([\n    {\n      title: 'Order #',\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n      render: (_, data) => <a onClick={() => goToShow(data)}>#{data.id}</a>,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'items_sold',\n      key: 'items_sold',\n      is_show: true,\n      render: (_, row) => <Tag>{row.status}</Tag>,\n    },\n    {\n      title: 'Customer',\n      dataIndex: 'user_firstname',\n      key: 'user_firstname',\n      is_show: true,\n      render: (_, data) => <>{`${data.firstname} ${data.lastname}`}</>,\n    },\n    {\n      title: 'Customer type',\n      key: 'user_active',\n      dataIndex: 'user_active',\n      is_show: true,\n      render: (_, data) => {\n        const status = Boolean(data.active);\n        return (\n          <Tag color={status ? 'green' : 'red'} key={data.id}>\n            {status ? 'Active' : 'Inactive'}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: 'Product(s)',\n      key: 'category',\n      dataIndex: 'category',\n      is_show: true,\n      render: (_, data) => {\n        if (data.products?.length > 1) {\n          return (\n            <>\n              <p>{data.products[0]}</p>\n\n              <Dropdown\n                overlay={\n                  <Menu>\n                    {data.products\n                      ?.slice(1, data.products.length)\n                      .map((item, key) => (\n                        <Menu.Item key={key}>{item}</Menu.Item>\n                      ))}\n                  </Menu>\n                }\n              >\n                <Tag style={{ cursor: 'pointer' }}>{`+ ${\n                  data.products?.length - 1\n                } more`}</Tag>\n              </Dropdown>\n            </>\n          );\n        } else {\n          return <>{data.products[0]}</>;\n        }\n      },\n    },\n    {\n      title: 'Item sold',\n      key: 'item_sold',\n      dataIndex: 'item_sold',\n      sorter: (a, b) => Number(a.quantity) - Number(b.quantity),\n\n      is_show: true,\n      render: (_, data) => {\n        return Number(data.quantity);\n      },\n    },\n    {\n      title: 'Net sales',\n      key: 'price',\n      dataIndex: 'price',\n      is_show: true,\n      sorter: (a, b) => a.price - b.price,\n      render: (_, data) => {\n        return (\n          <>\n            {numberToPrice(\n              data.price,\n              defaultCurrency?.symbol,\n              defaultCurrency?.position,\n            )}\n          </>\n        );\n      },\n    },\n  ]);\n\n  const performance = [\n    {\n      label: 'Item sold',\n      value: 'quantity',\n      price: false,\n      qty: 'quantity',\n    },\n    {\n      label: 'Net sales',\n      value: 'price',\n      price: true,\n      qty: 'price',\n    },\n    {\n      label: 'Avg Order price',\n      value: 'avg_price',\n      price: true,\n      qty: 'avg_price',\n    },\n    {\n      label: 'Orders',\n      value: 'count',\n      price: false,\n      qty: 'count',\n    },\n  ];\n\n  const goToShow = (row) => {\n    dispatch(\n      addMenu({\n        url: `order/details/${row.id}`,\n        id: 'order_details',\n        name: t('order.details'),\n      }),\n    );\n    navigate(`/order/details/${row.id}`);\n  };\n\n  const fetchReport = () => {\n    if (performance.find((item) => item.value === chart)) {\n      const data = {\n        date_from,\n        date_to,\n        type: by_time,\n        chart,\n        shop_id: selectedShop?.value,\n      };\n      dispatch(fetchOrderProductChart(data));\n    }\n  };\n\n  const fetchProduct = (page, perPage) => {\n    dispatch(\n      fetchOrderProduct({\n        date_from,\n        date_to,\n        by_time,\n        chart,\n        page,\n        perPage,\n        shop_id: selectedShop?.value,\n      }),\n    );\n  };\n\n  useEffect(() => {\n    handleChart(performance[0].value);\n  }, []);\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      fetchProduct();\n      fetchReport();\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    fetchProduct();\n  }, [date_to, by_time, chart, date_from, selectedShop?.value]);\n\n  useDidUpdate(() => {\n    fetchReport();\n  }, [date_to, by_time, chart, date_from, selectedShop?.value]);\n\n  const onChangePagination = (pagination) => {\n    const { pageSize: perPage, current: page } = pagination;\n    fetchProduct(page, perPage);\n  };\n\n  async function fetchUserShopList(search) {\n    const params = { search, active: 1 };\n    return shopService.get(params).then((res) =>\n      res.data.map((item) => ({\n        label: item.translation ? item.translation.title : 'no name',\n        value: item.id,\n      })),\n    );\n  }\n\n  return (\n    <Spin size='large' spinning={loading}>\n      <Row gutter={24} className='mb-3'>\n        <Col span={12}>\n          <Space size='large'>\n            <RangePicker\n              defaultValue={[moment(date_from), moment(date_to)]}\n              onChange={handleDateRange}\n            />\n            <DebounceSelect\n              style={{ width: '200px' }}\n              value={selectedShop}\n              onClear={() => setSelectedShop(undefined)}\n              onSelect={(value) => setSelectedShop(value)}\n              fetchOptions={fetchUserShopList}\n              placeholder={t('select.shop')}\n            />\n          </Space>\n        </Col>\n      </Row>\n      <Row gutter={24} className='report-products'>\n        {performance?.map((item, key) => (\n          <Col\n            span={6}\n            key={item.label}\n            onClick={() => handleChart(item.value)}\n          >\n            <Card className={chart === item.value && 'active'}>\n              <Row className='mb-5'>\n                <Col>\n                  <Text>{item.label}</Text>\n                </Col>\n              </Row>\n              <Row gutter={24}>\n                <Col span={18}>\n                  <Title level={2}>\n                    {!item.price\n                      ? reportData[item.qty]\n                      : numberToPrice(\n                          reportData[item.qty],\n                          defaultCurrency?.symbol,\n                          defaultCurrency?.position,\n                        )}\n                  </Title>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      <ReportChart reportData={reportData} chart_data='price_avg' />\n      <Row gutter={24}>\n        <Col span={24}>\n          <Card>\n            <Space className='d-flex justify-content-between'>\n              <Text level={3}>Orders</Text>\n              <Space className='d-flex justify-content-end'>\n                <Tag color='geekblue'>{t('compare')}</Tag>\n                <FilterColumns columns={columns} setColumns={setColumns} />\n              </Space>\n            </Space>\n\n            <Table\n              columns={columns?.filter((item) => item.is_show)}\n              dataSource={reportProducts?.data}\n              rowKey={(row) => row.id}\n              loading={loading}\n              pagination={{\n                pageSize: reportProducts?.per_page,\n                page: reportProducts?.current_page || 1,\n                total: reportProducts?.total,\n                defaultCurrent: 1,\n              }}\n              onChange={onChangePagination}\n              scroll={{ x: 1200 }}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </Spin>\n  );\n};\n\nexport default ReportOrder;\n","// This icon file is generated automatically.\nvar LineChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM305.8 637.7c3.1 3.1 8.1 3.1 11.3 0l138.3-137.6L583 628.5c3.1 3.1 8.2 3.1 11.3 0l275.4-275.3c3.1-3.1 3.1-8.2 0-11.3l-39.6-39.6a8.03 8.03 0 00-11.3 0l-230 229.9L461.4 404a8.03 8.03 0 00-11.3 0L266.3 586.7a8.03 8.03 0 000 11.3l39.5 39.7z\" } }] }, \"name\": \"line-chart\", \"theme\": \"outlined\" };\nexport default LineChartOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LineChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/LineChartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LineChartOutlined = function LineChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LineChartOutlinedSvg\n  }));\n};\n\nLineChartOutlined.displayName = 'LineChartOutlined';\nexport default /*#__PURE__*/React.forwardRef(LineChartOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["titleStyle","position","zIndex","extraStyle","right","top","ChartWidget","_ref","title","series","width","height","xAxis","customOptions","card","type","extra","direction","bodyClass","options","JSON","parse","stringify","apexLineChartDefaultOption","apexBarChartDefaultOption","apexAreaChartDefaultOption","apexPieChartDefaultOption","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","_extraRef$current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","left","justifyContent","padding","useEffect","useRef","xaxis","categories","renderChart","_jsx","ReactResizeDetector","onResize","setTimeout","children","className","ref","ApexChart","_Fragment","Card","_jsxs","defaultProps","Text","Typography","columns","setColumns","size","iconOnly","t","useTranslation","open","setOpen","useState","menu","Menu","map","item","key","Space","Switch","defaultChecked","onClick","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","Button","icon","TableOutlined","Title","reportData","by_time","handleByTime","chart_type","setChartType","useContext","ReportContext","useMemo","_reportData$chart","chart","time","chartData","_reportData$chart2","Boolean","charts","_item$stocks","name","translation","data","stocks","total_order_quantity","avg_quantity","quantity","count","price","order_details_sum_quantity","parseInt","total_price","products_count","order_details_avg_quantity","order_details_avg_total_price","avg_price","Row","gutter","Col","span","level","Select","defaultValue","Divider","LineChartOutlined","fontSize","cursor","color","BarChartOutlined","colors","COLORS","legend","show","stroke","curve","DebounceSelect","fetchOptions","debounceTimeout","onClear","props","fetching","setFetching","setOptions","debounceFetcher","debounce","value","then","newOptions","showSearch","allowClear","labelInValue","filterOption","onSearch","notFoundContent","Spin","onFocus","fetchOnFocus","zoom","enabled","toolbar","dataLabels","lineCap","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","seriesIndex","dataPointIndex","grid","lines","yaxis","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","pie","donut","labels","total","showAlways","label","fontFamily","fontWeight","seriesTotals","reduce","a","b","numberToPrice","_store$getState","_store$getState$curre","number","arguments","length","undefined","symbol","defaultCurrency","store","currency","Number","toFixed","replace","currencySymbol","currencyPosition","RangePicker","DatePicker","ReportOrder","dispatch","useDispatch","navigate","useNavigate","date_from","date_to","handleChart","handleDateRange","activeMenu","useSelector","state","shallowEqual","loading","productList","reportProducts","orderReport","selectedShop","setSelectedShop","render","_","goToShow","id","row","Tag","status","firstname","lastname","active","_data$products","_data$products2","_data$products3","products","slice","sorter","performance","qty","addMenu","url","fetchReport","find","shop_id","fetchOrderProductChart","fetchProduct","page","perPage","fetchOrderProduct","refetch","disableRefetch","useDidUpdate","spinning","moment","onSelect","async","search","params","shopService","res","placeholder","ReportChart","chart_data","FilterColumns","Table","filter","dataSource","rowKey","pagination","pageSize","per_page","current_page","defaultCurrent","scroll","x","React","AntdIcon","_objectSpread","LineChartOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}