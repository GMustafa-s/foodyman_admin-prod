{"version":3,"file":"static/js/6728.e34b9079.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","helpers/formatSortType.js","views/blog/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  CloudUploadOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport { Button, Card, Image, Space, Switch, Table, Tabs, Tooltip } from 'antd';\nimport { toast } from 'react-toastify';\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addMenu, disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport { fetchBlogs } from '../../redux/slices/blog';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport formatSortType from '../../helpers/formatSortType';\nimport blogService from '../../services/blog';\nimport { useTranslation } from 'react-i18next';\nimport DeleteButton from '../../components/delete-button';\nimport FilterColumns from '../../components/filter-column';\nimport { IMG_URL } from '../../configs/app-global';\nimport moment from 'moment';\n\nconst roles = ['published', 'deleted_at'];\nconst { TabPane } = Tabs;\n\nexport default function Blogs() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `blog/${row.uuid}`,\n        id: 'blog_edit',\n        name: t('edit.blog'),\n      })\n    );\n    navigate(`/blog/${row.uuid}`);\n  };\n\n  const goToClone = (row) => {\n    dispatch(\n      addMenu({\n        url: `blog/clone/${row.uuid}`,\n        id: 'blog_clone',\n        name: t('clone.blog'),\n      })\n    );\n    navigate(`/blog/clone/${row.uuid}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('title'),\n      dataIndex: 'translation',\n      key: 'translation',\n      render: (translation) => translation?.title,\n      is_show: true,\n    },\n    {\n      title: t('image'),\n      dataIndex: 'img',\n      render: (img, row) => {\n        return (\n          <Image\n            width={150}\n            height={100}\n            src={!row.deleted_at ? IMG_URL + img : 'https://fakeimg.pl/640x360'}\n            placeholder\n            className='rounded'\n            style={{ objectFit: 'contain' }}\n          />\n        );\n      },\n      is_show: true,\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (createdAt, row) => (\n        <span>{moment(createdAt).format('MMM DD YYYY hh:mm A')}</span>\n      ),\n    },\n    {\n      title: t('published.at'),\n      dataIndex: 'published_at',\n      key: 'published_at',\n      is_show: true,\n      render: (publishedAt) => {\n        return (\n          <div>\n            {publishedAt ? (\n              moment(publishedAt).format('MMM DD YYYY')\n            ) : (\n              <span>{t('unpublished')}</span>\n            )}\n          </div>\n        );\n      },\n    },\n    {\n      title: t('active'),\n      dataIndex: 'active',\n      key: 'active',\n      render: (active, row) => (\n        <Switch\n          disabled={row.deleted_at}\n          checked={active}\n          onChange={() => {\n            setId(row.uuid);\n            setIsDelete(false);\n            setIsPublish(false);\n            setIsModalVisible(true);\n          }}\n        />\n      ),\n      is_show: true,\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      render: (_, row) => {\n        return (\n          <Space>\n            <Tooltip title={t('publish')}>\n              <Button\n                disabled={row?.deleted_at || row?.published_at || !row.active}\n                icon={<CloudUploadOutlined />}\n                onClick={() => {\n                  setId(row.uuid);\n                  setIsDelete(false);\n                  setIsPublish(true);\n                  setIsModalVisible(true);\n                }}\n              />\n            </Tooltip>\n\n            <Button\n              disabled={row.deleted_at}\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => goToEdit(row)}\n            />\n            <Button\n              icon={<CopyOutlined />}\n              onClick={() => goToClone(row)}\n              disabled={row.deleted_at}\n            />\n            <DeleteButton\n              disabled={row.deleted_at}\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setId([row.id]);\n                setIsDelete(true);\n                setIsPublish(false);\n                setIsModalVisible(true);\n              }}\n            />\n          </Space>\n        );\n      },\n      is_show: true,\n    },\n  ]);\n\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [isDelete, setIsDelete] = useState(false);\n  const [isPublish, setIsPublish] = useState(false);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [role, setRole] = useState('published');\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const immutable = activeMenu.data?.role || role;\n  const { blogs, meta, loading, params } = useSelector(\n    (state) => state.blog,\n    shallowEqual\n  );\n  const data = activeMenu.data;\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n    status: immutable === 'deleted_at' ? undefined : immutable,\n    deleted_at: immutable === 'deleted_at' ? immutable : undefined,\n  };\n\n  const blogDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n\n    blogService\n      .delete(params)\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchBlogs());\n        setIsModalVisible(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const blogSetActive = () => {\n    setLoadingBtn(true);\n    blogService\n      .setActive(id)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        dispatch(fetchBlogs());\n        setIsModalVisible(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const blogPublish = () => {\n    setLoadingBtn(true);\n    blogService\n      .publish(id)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        dispatch(fetchBlogs());\n        setIsModalVisible(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchBlogs(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchBlogs(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      })\n    );\n  }\n\n  const goToAddBlog = () => {\n    dispatch(\n      addMenu({\n        id: 'blogs',\n        url: 'blog/add',\n        name: t('add.blog'),\n      })\n    );\n    navigate('/blog/add');\n  };\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n    }\n  };\n\n  const handleFilter = (items) => {\n    const data = activeMenu.data;\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, ...items },\n      })\n    );\n  };\n\n  return (\n    <Card\n      title={t('blogs')}\n      extra={\n        <Space wrap>\n          {immutable !== 'deleted_at' && (\n            <>\n              <Button\n                type='primary'\n                icon={<PlusCircleOutlined />}\n                onClick={goToAddBlog}\n              >\n                {t('add.blog')}\n              </Button>\n              <DeleteButton size='' onClick={allDelete}>\n                {t('delete.selected')}\n              </DeleteButton>\n            </>\n          )}\n\n          <FilterColumns setColumns={setColumns} columns={columns} />\n        </Space>\n      }\n    >\n      <Tabs\n        className='mt-3'\n        activeKey={immutable}\n        onChange={(key) => {\n          handleFilter({ role: key, page: 1 });\n          setRole(key);\n        }}\n        type='card'\n      >\n        {roles.map((item) => (\n          <TabPane tab={t(item)} key={item} />\n        ))}\n      </Tabs>\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns.filter((column) => column.is_show)}\n        dataSource={blogs}\n        pagination={{\n          pageSize: params.perPage,\n          page: activeMenu.data?.page || 1,\n          total: meta.total,\n          defaultCurrent: activeMenu.data?.page,\n          current: activeMenu.data?.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n      <CustomModal\n        click={isPublish ? blogPublish : isDelete ? blogDelete : blogSetActive}\n        text={\n          isPublish\n            ? t('publish.blog')\n            : isDelete\n            ? t('delete.blog')\n            : t('set.active.blog')\n        }\n        loading={loadingBtn}\n      />\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","formatSortType","roles","TabPane","Tabs","Blogs","_activeMenu$data","_activeMenu$data2","_activeMenu$data3","_activeMenu$data4","dispatch","useDispatch","navigate","useNavigate","sorter","render","translation","img","row","Image","width","height","src","deleted_at","IMG_URL","placeholder","objectFit","createdAt","moment","format","publishedAt","active","setId","uuid","setIsDelete","setIsPublish","setIsModalVisible","_","published_at","CloudUploadOutlined","EditOutlined","addMenu","url","id","name","goToEdit","CopyOutlined","goToClone","useContext","Context","isDelete","isPublish","loadingBtn","setLoadingBtn","role","setRole","activeMenu","useSelector","state","shallowEqual","immutable","data","blogs","meta","loading","params","blog","paramsData","sort","column","perPage","page","status","undefined","useEffect","refetch","fetchBlogs","disableRefetch","useDidUpdate","rowSelection","selectedRowKeys","Card","extra","wrap","_Fragment","PlusCircleOutlined","goToAddBlog","allDelete","length","FilterColumns","activeKey","items","setMenuData","handleFilter","tab","Table","scroll","x","filter","dataSource","pagination","pageSize","total","defaultCurrent","current","rowKey","record","field","order","CustomModal","click","blogPublish","blogService","then","finally","blogDelete","Object","assign","index","blogSetActive","text","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}