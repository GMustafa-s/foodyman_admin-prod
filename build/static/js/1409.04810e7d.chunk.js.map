{"version":3,"file":"static/js/1409.04810e7d.chunk.js","mappings":"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","sources":["components/language-list.js","helpers/getAddressFromLocation.js","components/map.js","helpers/getDefaultLocation.js","helpers/getMapApiKey.js","helpers/getTranslationFields.js","views/seller-views/branch/branch-add.js","views/seller-views/branch/branch-form.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Radio } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { setDefaultLanguage, setLangugages } from 'redux/slices/formLang';\nimport languagesService from 'services/languages';\n\nconst LanguageList = () => {\n  const dispatch = useDispatch();\n  const { languages, defaultLang } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n\n  const fetchLanguages = () => {\n    languagesService.getAllActive().then(({ data }) => {\n      dispatch(setLangugages(data));\n      dispatch(setDefaultLanguage(data.find((item) => !!item?.default).locale));\n    });\n  };\n\n  useEffect(() => {\n    fetchLanguages();\n  }, []);\n\n  const onChangeLanguage = ({ target: { value } }) => {\n    dispatch(setDefaultLanguage(value));\n  };\n\n  return (\n    <>\n      <Radio.Group\n        value={defaultLang}\n        onChange={onChangeLanguage}\n        className='float-right'\n        buttonStyle='solid'\n      >\n        {languages?.map((item) => {\n          return (\n            <Radio.Button value={item.locale} key={item.id}>\n              {item.title}\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </>\n  );\n};\n\nexport default LanguageList;\n","import axios from 'axios';\nimport { MAP_API_KEY } from 'configs/app-global';\n\nexport default async function getAddressFromLocation(\n  location,\n  key = MAP_API_KEY\n) {\n  let params = {\n    latlng: `${location?.lat},${location?.lng}`,\n    key,\n  };\n  return axios\n    .get(`https://maps.googleapis.com/maps/api/geocode/json`, { params })\n    .then(({ data }) => data.results[0]?.formatted_address)\n    .catch((error) => {\n      return 'not found';\n    });\n}\n","import React, { useEffect, useState } from 'react';\nimport { GoogleApiWrapper, Map, Marker } from 'google-maps-react';\nimport pinIcon from 'assets/images/pin.png';\nimport getAddressFromLocation from 'helpers/getAddressFromLocation';\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport getMapApiKey from 'helpers/getMapApiKey';\n\nconst mapApiKey = getMapApiKey();\n\nfunction GoogleMap(props) {\n  const [loc, setLoc] = useState();\n  const { t } = useTranslation();\n\n  const onClickMap = async (t, map, coord) => {\n    const { latLng } = coord;\n    const location = {\n      lat: latLng.lat(),\n      lng: latLng.lng(),\n    };\n    props.setLocation(location);\n    const address = await getAddressFromLocation(location, mapApiKey);\n    props.setAddress(address);\n  };\n\n  const handleSubmit = async (event) => {\n    const location = {\n      lat: event?.lat,\n      lng: event?.lng,\n    };\n    props.setLocation(location);\n    const address = await getAddressFromLocation(location, mapApiKey);\n    props.setAddress(address);\n  };\n\n  const currentLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      function (position) {\n        const location = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n        setLoc(location);\n      },\n      function (error) {\n        toast.warning(t('turn.on.gps'));\n      },\n    );\n  };\n\n  useEffect(() => {\n    currentLocation();\n    // eslint-disable-next-line\n  }, []);\n\n  const markers = [\n    {\n      lat: Number(props?.location?.lat) || 0,\n      lng: Number(props?.location?.lng) || 0,\n    },\n  ];\n\n  var bounds = new props.google.maps.LatLngBounds();\n  for (var i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i]);\n  }\n  return (\n    <div className='map-container' style={{ height: 400, width: '100%' }}>\n      <button\n        className='map-button'\n        type='button'\n        onClick={() => {\n          currentLocation();\n          if (loc) {\n            handleSubmit(loc);\n          }\n        }}\n      >\n        <BiCurrentLocation />\n      </button>\n      <Map\n        cursor={'pointer'}\n        onClick={onClickMap}\n        google={props.google}\n        defaultZoom={12}\n        zoom={10}\n        className='clickable'\n        initialCenter={props.location}\n        center={props.location}\n        // bounds={bounds}\n      >\n        <Marker\n          position={props.location}\n          icon={{\n            url: pinIcon,\n            scaledSize: new props.google.maps.Size(32, 32),\n          }}\n          className='marker'\n        />\n      </Map>\n    </div>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: mapApiKey,\n  libraries: ['places', 'geometry'],\n})(GoogleMap);\n","import { LAT, LNG } from 'configs/app-global';\n\nexport default function getDefaultLocation(settings) {\n  if (!settings?.location) {\n    return {\n      lat: 47.4143302506288,\n      lng: 8.532059477976883,\n    };\n  }\n  const location = settings.location.split(', ');\n  return {\n    lat: Number(location?.[0]),\n    lng: Number(location?.[1]),\n  };\n}\n","import { store } from 'redux/store';\nimport { MAP_API_KEY } from 'configs/app-global';\n\nconst getMapApiKey = () => {\n  const { google_map_key } = store.getState()?.globalSettings?.settings;\n\n  return google_map_key || MAP_API_KEY;\n};\n\nexport default getMapApiKey;\n","export default function getTranslationFields(\n  languages,\n  values,\n  field = 'title',\n) {\n  const list = languages?.map((item) => ({\n    [item?.locale]: !values[`${field}[${item?.locale}]`]\n      ? undefined\n      : values[`${field}[${item?.locale}]`],\n  }));\n  return Object.assign({}, ...list);\n}\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from 'redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport getTranslationFields from 'helpers/getTranslationFields';\nimport LanguageList from 'components/language-list';\nimport { fetchBranch } from 'redux/slices/branch';\nimport branchService from 'services/seller/branch';\nimport BranchForm from './branch-form';\n\nconst SellerBranchAdd = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      data.open_time = JSON.stringify(data?.open_time);\n      data.close_time = JSON.stringify(data?.close_time);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (values) => {\n    const body = {\n      title: getTranslationFields(languages, values, 'title'),\n      address: {\n        address: values.address,\n        office: null,\n        house: null,\n        floor: null,\n      },\n      location: {\n        longitude: values.location.lng,\n        latitude: values.location.lat,\n      },\n    };\n    const nextUrl = 'seller/branch';\n\n    return branchService.create(body).then(() => {\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchBranch({}));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.branch')} className='h-100' extra={<LanguageList />}>\n      <BranchForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n};\n\nexport default SellerBranchAdd;\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Input, Row } from 'antd';\nimport Map from 'components/map';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport getDefaultLocation from 'helpers/getDefaultLocation';\nimport { usePlacesWidget } from 'react-google-autocomplete';\nimport { MAP_API_KEY } from 'configs/app-global';\n\nexport default function BranchForm({ form, handleSubmit }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { languages, defaultLang } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n  const { settings } = useSelector(\n    (state) => state.globalSettings,\n    shallowEqual,\n  );\n  const { google_map_key } = useSelector(\n    (state) => state.globalSettings.settings,\n    shallowEqual,\n  );\n  const { ref } = usePlacesWidget({\n    apiKey: google_map_key || MAP_API_KEY,\n    onPlaceSelected: (place) => {\n      const location = {\n        lat: place?.geometry.location.lat(),\n        lng: place?.geometry.location.lng(),\n      };\n      setLocation(location);\n      form.setFieldsValue({\n        [`address[${defaultLang}]`]: place?.formatted_address,\n      });\n    },\n  });\n\n  //states\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [location, setLocation] = useState(\n    activeMenu?.data?.mapCoordinates ?? getDefaultLocation(settings),\n  );\n\n  //submit form\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    const payload = {\n      ...values,\n      location,\n    };\n    handleSubmit(payload).finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Form\n      name='branch-form'\n      layout='vertical'\n      onFinish={onFinish}\n      form={form}\n      initialValues={{ ...activeMenu.data }}\n      className='d-flex flex-column h-100'\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          {languages.map((item, idx) => (\n            <Form.Item\n              key={'title' + idx}\n              label={t('title')}\n              name={`title[${item.locale}]`}\n              rules={[\n                {\n                  required: item.locale === defaultLang,\n                  message: t('required'),\n                },\n              ]}\n              hidden={item.locale !== defaultLang}\n            >\n              <Input />\n            </Form.Item>\n          ))}\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label={t('address')}\n            name={`address`}\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <input className='address-input' ref={ref} placeholder={''} />\n          </Form.Item>\n        </Col>\n        <Col span={24}>\n          <Map\n            location={location}\n            setLocation={setLocation}\n            setAddress={(value) => form.setFieldsValue({ address: value })}\n          />\n        </Col>\n      </Row>\n      <div className='flex-grow-1 d-flex flex-column justify-content-end'>\n        <div className='pb-5'>\n          <Button type='primary' htmlType='submit' loading={loadingBtn}>\n            {t('submit')}\n          </Button>\n        </div>\n      </div>\n    </Form>\n  );\n}\n"],"names":["LanguageList","dispatch","useDispatch","languages","defaultLang","useSelector","state","formLang","shallowEqual","useEffect","languagesService","then","_ref","data","setLangugages","setDefaultLanguage","find","item","default","locale","_jsx","_Fragment","children","Radio","value","onChange","_ref2","target","className","buttonStyle","map","title","id","async","getAddressFromLocation","location","key","arguments","length","undefined","MAP_API_KEY","params","latlng","lat","lng","axios","_data$results$","results","formatted_address","catch","error","mapApiKey","getMapApiKey","GoogleApiWrapper","apiKey","libraries","props","_props$location","_props$location2","loc","setLoc","useState","t","useTranslation","currentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","toast","markers","Number","bounds","google","maps","LatLngBounds","i","extend","_jsxs","style","height","width","type","onClick","event","setLocation","address","setAddress","handleSubmit","BiCurrentLocation","Map","cursor","coord","latLng","defaultZoom","zoom","initialCenter","center","Marker","icon","url","pinIcon","scaledSize","Size","getDefaultLocation","settings","split","_store$getState","_store$getState$globa","google_map_key","store","globalSettings","getTranslationFields","values","field","list","Object","assign","SellerBranchAdd","activeMenu","menu","form","Form","navigate","useNavigate","getFieldsValue","open_time","JSON","stringify","close_time","setMenuData","Card","extra","BranchForm","body","office","house","floor","nextUrl","branchService","batch","removeFromMenu","fetchBranch","_activeMenu$data$mapC","_activeMenu$data","ref","usePlacesWidget","onPlaceSelected","place","geometry","setFieldsValue","loadingBtn","setLoadingBtn","mapCoordinates","name","layout","onFinish","payload","finally","initialValues","Row","gutter","Col","span","idx","label","rules","required","message","hidden","Input","placeholder","Button","htmlType","loading"],"sourceRoot":""}