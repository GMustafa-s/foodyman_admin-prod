{"version":3,"file":"static/js/8705.a983a678.chunk.js","mappings":"8MAGA,MAgBA,EAhBqBA,KAAO,IAADC,EAAAC,EAAAC,EACzB,MAAMC,EAA2B,QAAnBH,EAAGI,EAAAA,EAAAA,kBAAgB,IAAAJ,GAAgB,QAAhBC,EAAhBD,EAAkBK,sBAAc,IAAAJ,GAAU,QAAVC,EAAhCD,EAAkCK,gBAAQ,IAAAJ,OAA1B,EAAhBA,EAA4CC,SAC7D,GAAY,OAARA,QAAQ,IAARA,GAAAA,EAAUI,OAAQ,CACpB,MAAMC,EAAwB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MAAM,KACtC,MAAO,CACLC,IAAKC,WAAwB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAgB,IAChCI,IAAKD,WAAwB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAgB,KAIpC,MAAO,CACLE,IAAKG,EAAAA,GACLD,IAAKE,EAAAA,K,eCFT,MAAMC,GAAYhB,EAAAA,EAAAA,KACZiB,EAAgBC,IAyItB,GAAeC,EAAAA,EAAAA,kBAAiB,CAC9BC,OAAQJ,EACRK,UAAW,CAAC,WAFd,EAvIwBC,IAAW,IAADC,EAAAC,EAChC,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAASV,IAC9BW,EAASC,IAAcF,EAAAA,EAAAA,UAC5BL,EAAMQ,eAAiBR,EAAMQ,eAAiB,KAEzCC,EAAQC,IAAaL,EAAAA,EAAAA,YAAWL,EAAMQ,iBACtCG,EAAOC,IAAYP,EAAAA,EAAAA,UAAS,MACnCL,EAAMa,SAASJ,IAuCfK,EAAAA,EAAAA,YAAU,KACRF,GAAS,KACR,IASH,MAAMG,EAAUf,EAAMQ,eAAeQ,KAAKC,IAAI,CAC5C5B,IAAK6B,OAAOD,EAAK5B,KAAO,KACxBE,IAAK2B,OAAOD,EAAK1B,KAAO,SAI1B,IADA,IAAI4B,EAAS,IAAInB,EAAMoB,OAAOC,KAAKC,aAAanB,GACvCoB,EAAI,EAAGA,EAAIR,EAAQ7B,OAAQqC,IAClCJ,EAAOK,OAAOT,EAAQQ,IAQxB,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAASC,SAAA,EACnEC,EAAAA,EAAAA,KAAA,UACEL,UAAU,aACVM,KAAK,SACLC,QAASA,KAvCbC,UAAUC,YAAYC,oBAAmB,SAAUC,GACjDjC,EAAU,CACRf,IAAKgD,EAASC,OAAOC,SACrBhD,IAAK8C,EAASC,OAAOE,gBAsCnBV,UAEFC,EAAAA,EAAAA,KAACU,EAAAA,IAAiB,OAEpBhB,EAAAA,EAAAA,MAACiB,EAAAA,IAAG,CACFC,QAjBU,CACdC,QAAS,GACTC,QAAS,IAgBLC,OAAO,UACPb,QA7EUA,CAACc,EAAG/B,EAAKgC,KACvBpC,GAAS,GACT,MAAM,OAAEqC,GAAWD,EACb3D,EAAM4D,EAAO5D,MACbE,EAAM0D,EAAO1D,MACfkB,GACFF,EAAW,IACXP,EAAMkD,kBAAkB,CAAC,CAAE7D,IAAAA,EAAKE,IAAAA,KAChCa,EAAU,CAAEf,IAAAA,EAAKE,IAAAA,IACjBmB,GAAU,IAEVV,EAAMkD,mBAAmBC,GAAS,IAAIA,EAAM,CAAE9D,IAAAA,EAAKE,IAAAA,OAmEjDsD,QAAS,GACTD,QAAS,EACTxB,OAAQpB,EAAMoB,OACdgC,cAAezD,EACfQ,OAAQA,EACRkD,QA1CN,SAAwBC,EAAGtC,GACzBA,EAAIuC,WAAW,CACbC,gBAAiB,YACjBC,eAAgB,UAwCdtC,OAAQR,GAASQ,EACjBO,UAAU,YAAWI,SAAA,CAEA,QAFA7B,EAEpBD,EAAMQ,sBAAc,IAAAP,OAAA,EAApBA,EAAsBe,KAAI,CAACC,EAAMyC,KAChC3B,EAAAA,EAAAA,KAAC4B,EAAAA,OAAM,CACL1B,QAAU2B,GA1EFA,CAAAA,IAAO,IAADC,EAAAC,EACtBpD,IAAiB,OAALV,QAAK,IAALA,IAAAA,EAAOQ,kBAEM,QAAvBqD,EAAA7D,EAAMQ,eAAe,UAAE,IAAAqD,OAAA,EAAvBA,EAAyBxE,QAAkB,QAAfyE,EAAKF,EAAEvB,gBAAQ,IAAAyB,OAAA,EAAVA,EAAYzE,MAC7CW,EAAMQ,eAAetB,OAAS,IAE9BqB,EAAWP,EAAMQ,gBACjBR,EAAM+D,YAAY/D,EAAMQ,gBACxBE,GAAU,GACVE,GAAS,KAiEaoD,CAASJ,GAEzBvB,SAAUpB,EACVgD,KAAM,CACJC,IAAK,uEACLC,WAAY,IAAInE,EAAMoB,OAAOC,KAAK+C,KAAK,GAAI,KAE7C1C,UAAU,UANLgC,KAUA,OAAPpD,QAAO,IAAPA,GAAAA,EAASpB,QAWT6C,EAAAA,EAAAA,KAACsC,EAAAA,QAAO,CAENC,KAAMtE,EAAMQ,eACZ+D,YAAY,QACZC,cAAe,GACfC,aAAc,EACdC,UAAU,QACVC,YAAa,KAND,OAAPrE,QAAO,IAAPA,OAAO,EAAPA,EAASpB,SAXhB6C,EAAAA,EAAAA,KAAC6C,EAAAA,SAAQ,CAEPN,KAAMtE,EAAMQ,eACZ+D,YAAY,QACZC,cAAe,GACfC,aAAc,EACdC,UAAU,QACVC,YAAa,KANY,QAMPzE,EANbF,EAAMQ,sBAAc,IAAAN,OAAA,EAApBA,EAAsBhB,kB,gBC/HxB,SAAS2F,EAAUC,GAAQ,IAADC,EAAAC,EACvC,IACIC,EAAsB,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOI,MAAM,EADb,GAGjBC,EAAwB,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOM,YAAY,KACtCC,EAAmB,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOI,MAJJ,EAI0BC,EAAmB,GAClEE,EAAyB,QAAdN,EAAGM,SAAW,IAAAN,OAAA,EAAXA,EAAaO,QAAQ,KAAM,KACzC,IAAIC,EAA8B,OAALT,QAAK,IAALA,OAAK,EAALA,EAAOI,MAAMC,EAAmB,EAAGL,EAAM5F,QAEtE,OAAqB,OAAd+F,QAAc,IAAdA,GAAmC,QAArBD,EAAdC,EAAgBO,OAAOH,UAAY,IAAAL,OAArB,EAAdA,EAAqCQ,OAAOD,G,2WCDrD,MAwGA,EAxGwBE,IAAkB,IAAjB,QAAEC,GAASD,EAClC,MAAM,EAAE1C,IAAM4C,EAAAA,EAAAA,MACPC,GAAQC,EAAAA,EAAAA,WAERrF,EAAgBsF,IAAqBzF,EAAAA,EAAAA,UAAS,KAC9C0F,EAAOlF,IAAYR,EAAAA,EAAAA,UAAS,OAC5B2F,EAASC,IAAc5F,EAAAA,EAAAA,WAAS,IAChC6F,EAAYC,IAAiB9F,EAAAA,EAAAA,WAAS,IA2B7CS,EAAAA,EAAAA,YAAU,KAzBoBsF,IAAAA,EA0BxBV,IA1BwBU,EA2BLV,EA1BvBO,GAAW,GACXI,EAAAA,EAAAA,oBACuBD,GACpBE,MAAMC,IAAS,IAADC,EACbV,OACeW,IAAbF,EAAIG,KACQ,QADUF,EAClBD,EAAIG,YAAI,IAAAF,OAAA,EAARA,EAAUxF,KAAKC,IAAI,CACjB5B,IAAS,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAO,GACZ1B,IAAS,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAO,OAEd,OAGP0F,OAAOC,IACsB,MAAxBA,EAAIC,SAASC,QACfC,EAAAA,GAAAA,UAEFC,QAAQC,IAAI,MAAOL,MAEpBM,SAAQ,KACPjB,GAAW,SAQd,CAACP,IAkCJ,OACE3D,EAAAA,EAAAA,KAACoF,EAAAA,EAAI,CAACnB,QAASA,EAAQlE,UACrBL,EAAAA,EAAAA,MAACoE,EAAAA,EAAI,CAACuB,OAAO,WAAWxB,KAAMA,EAAM5B,SAlCvBA,KACf,IAAK0B,EAEH,YADAqB,EAAAA,GAAAA,MAAYhE,EAAE,eAGhB,GAAIvC,EAAetB,OAAS,EAE1B,YADA6H,EAAAA,GAAAA,QAAchE,EAAE,uBAIlB,IAAKgD,EAEH,YADAgB,EAAAA,GAAAA,QAAchE,EAAE,uBAGlB,MAAMsE,EAAO,CACX3B,QAAAA,EACA4B,QAAS9G,EAAeQ,KAAKC,IAAI,CAC/B,EAAGA,EAAK5B,IACR,EAAG4B,EAAK1B,SAGZ4G,GAAc,GACdE,EAAAA,EAAAA,+BACkCgB,GAC/Bf,MAAK,KACJS,EAAAA,GAAAA,QAAchE,EAAE,4BAEjBmE,SAAQ,KACPf,GAAc,OAMuCrE,SAAA,EACrDL,EAAAA,EAAAA,MAAC8F,EAAAA,EAAG,CAACC,OAAQ,GAAG1F,SAAA,EACdC,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,KAAM,GAAG5F,UACZC,EAAAA,EAAAA,KAAA,OACE4F,IAAKC,EACLC,IAAK9E,EAAE,WACPpB,MAAO,CAAEmG,OAAQ,gBAGrB/F,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,KAAM,GAAG5F,UACZC,EAAAA,EAAAA,KAACgG,EAAAA,EAAc,CACbvH,eAAgBA,EAChB0C,kBAAmB4C,EACnBjF,SAAUA,UAIhBkB,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CACLhG,KAAK,UACLiG,SAAS,SACTjC,QAASE,EACTxE,UAAU,OAAMI,SAEfiB,EAAE,iBCtFP,QAAEmF,GAAYC,EAAAA,EAuHpB,EArHiBC,KAAO,IAADC,EAAAC,EACrB,MAAM,EAAEvF,IAAM4C,EAAAA,EAAAA,MACPC,GAAQC,EAAAA,EAAAA,WACT,WAAE0C,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,IACpDC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,OACV/C,EAASC,IAAc5F,EAAAA,EAAAA,WAAS,IAChC2I,EAAKC,IAAU5I,EAAAA,EAAAA,UAAS,SACxB6I,EAAOC,IAAY9I,EAAAA,EAAAA,UAAS,KAC5B+F,EAAIgD,IAAS/I,EAAAA,EAAAA,UAAS,MACvBgJ,EAAiB,OAAVd,QAAU,IAAVA,GAAgB,QAANF,EAAVE,EAAY7B,YAAI,IAAA2B,OAAN,EAAVA,EAAkBgB,MACzB,OAAEC,IAAWC,EAAAA,EAAAA,MAoDnBzI,EAAAA,EAAAA,YAAU,KACM,OAAVyH,QAAU,IAAVA,GAAAA,EAAYiB,SAnDIV,CAAAA,IACpB7C,GAAW,GACXI,EAAAA,EAAAA,QACWyC,GACRxC,MAAMC,IAAS,IAADkD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtD,EAAAuD,EACb,MAAMrD,EAAOH,EAAIG,KACXsD,EAAU,IACXtD,EACHwC,MAAOxC,EAAKuD,KAAMC,EAAAA,EAAAA,GAAYxD,EAAKuD,KAAO,IAE5CrB,GAASuB,EAAAA,EAAAA,IAAY,CAAE5B,WAAAA,EAAY7B,KAAMsD,KACzCpE,EAAKwE,eAAe,CAClBC,UAAW3D,EAAK2D,UAChBC,SAAU5D,EAAK4D,SACfxF,MAAOwE,GAASzE,EAAAA,EAAAA,GAAU6B,EAAK5B,OAAS4B,EAAK5B,MAC7CyF,MAAO7D,EAAK6D,MACZC,SAAUC,GAAAA,CAAO/D,EAAK8D,UACtBE,OAAQhE,EAAKgE,OACbC,sBAAuBjE,EAAKiE,sBAC5BC,SAAUlE,EAAKkE,SACfC,QAC8B,IAA5BnE,EAAKoE,YAAY5L,OACbwH,EAAKoE,YAAY9J,KAAKO,IAAC,IAAAwJ,EAAAC,EAAAC,EAAA,MAAM,CAC3BC,MAAa,QAARH,EAAExJ,EAAE4J,YAAI,IAAAJ,GAAa,QAAbC,EAAND,EAAQK,mBAAW,IAAAJ,OAAb,EAANA,EAAqBK,MAC5BC,MAAa,QAARL,EAAE1J,EAAE4J,YAAI,IAAAF,OAAA,EAANA,EAAQ7E,YAEjBK,EACN8E,QAAS,CACPL,MAAW,OAAJxE,QAAI,IAAJA,GAAa,QAAT+C,EAAJ/C,EAAM6E,eAAO,IAAA9B,GAAa,QAAbC,EAAbD,EAAe2B,mBAAW,IAAA1B,OAAtB,EAAJA,EAA4B2B,MACnCC,MAAW,OAAJ5E,QAAI,IAAJA,GAAa,QAATiD,EAAJjD,EAAM6E,eAAO,IAAA5B,OAAT,EAAJA,EAAevD,GACtBoF,IAAS,OAAJ9E,QAAI,IAAJA,GAAa,QAATkD,EAAJlD,EAAM6E,eAAO,IAAA3B,OAAT,EAAJA,EAAexD,IAEtBqF,SAAc,OAAJ/E,QAAI,IAAJA,IAAAA,EAAM+E,QAChBC,UAC0B,KAAb,QAAX7B,EAAAnD,EAAKiF,cAAM,IAAA9B,OAAA,EAAXA,EAAa3K,QACL,OAAJwH,QAAI,IAAJA,GAAY,QAARoD,EAAJpD,EAAMiF,cAAM,IAAA7B,OAAR,EAAJA,EAAc9I,KAAK4K,IAAK,CACtBV,MAAY,OAALU,QAAK,IAALA,OAAK,EAALA,EAAOC,KACdP,MAAY,OAALM,QAAK,IAALA,OAAK,EAALA,EAAOxF,YAEhBK,IAER0C,EAASzC,EAAKuD,IAAM,EAACC,EAAAA,EAAAA,GAAYxD,EAAKuD,MAAQ,IAC9Cb,EAAc,QAAT5C,EAACD,EAAIG,YAAI,IAAAF,GAAsB,QAAtBuD,EAARvD,EAAUsF,4BAAoB,IAAA/B,OAAtB,EAARA,EAAgC3D,OAEvCc,SAAQ,KACPjB,GAAW,GACX2C,GAASmD,EAAAA,EAAAA,IAAexD,QAKHyD,CAAalD,KAErC,CAAW,OAAVP,QAAU,IAAVA,OAAU,EAAVA,EAAYiB,UAIhB,OACEzH,EAAAA,EAAAA,KAACoF,EAAAA,EAAI,CAACkE,MAAOtI,EAAE,iBAAiBjB,SAC5BkE,GAuCAjE,EAAAA,EAAAA,KAACkK,EAAAA,EAAO,KAtCRxK,EAAAA,EAAAA,MAAC0G,EAAAA,EAAI,CACH+D,UAAWlD,EACXmD,SAPUX,GAAQvC,EAAOuC,GAQzBY,YAAY,OACZC,KAAK,QAAOvK,SAAA,EAEZC,EAAAA,EAAAA,KAACmG,EAAO,CAAYc,IAAKjG,EAAE,aAAajB,UACtCC,EAAAA,EAAAA,KAACuK,EAAAA,EAAY,CACX5F,KAAgB,OAAV6B,QAAU,IAAVA,OAAU,EAAVA,EAAY7B,KAClBd,KAAMA,EACNsD,MAAOA,EACPC,SAAUA,EACVoD,YAAa,UANJ,QASH,SAATlD,IACCtH,EAAAA,EAAAA,KAACmG,EAAO,CAAac,IAAKjG,EAAE,UAAUjB,UACpCC,EAAAA,EAAAA,KAACyK,EAAAA,EAAU,CAAC9F,KAAgB,OAAV6B,QAAU,IAAVA,OAAU,EAAVA,EAAY7B,QADnB,SAIL,gBAAT2C,IACC5H,EAAAA,EAAAA,MAAAgL,EAAAA,SAAA,CAAA3K,SAAA,EACEC,EAAAA,EAAAA,KAACmG,EAAO,CAAgBc,IAAKjG,EAAE,eAAejB,UAC5CC,EAAAA,EAAAA,KAAC2K,EAAAA,EAAqB,CAACtG,GAAIA,EAAIM,KAAM6B,EAAW7B,QADrC,aAGb3E,EAAAA,EAAAA,KAACmG,EAAO,CAAuBc,IAAKjG,EAAE,oBAAoBjB,UACxDC,EAAAA,EAAAA,KAAC4K,EAAe,CAACjH,QAAwB,QAAjB4C,EAAEC,EAAW7B,YAAI,IAAA4B,OAAA,EAAfA,EAAiBlC,MADhC,uBAKjBrE,EAAAA,EAAAA,KAACmG,EAAO,CAAcc,IAAKjG,EAAE,UAAUjB,UACrCC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAa,CAAClG,KAAgB,OAAV6B,QAAU,IAAVA,OAAU,EAAVA,EAAY7B,QADtB,WAGb3E,EAAAA,EAAAA,KAACmG,EAAO,CAAgBc,IAAKjG,EAAE,YAAYjB,UACzCC,EAAAA,EAAAA,KAAC8K,EAAAA,EAAY,CAACnG,KAAgB,OAAV6B,QAAU,IAAVA,OAAU,EAAVA,EAAY7B,QADrB,mB","sources":["helpers/getDefaultCenter.js","components/drawing-map.js","components/hideEmail.js","views/user/deliveryman-zone.js","views/user/user-edit.js"],"sourcesContent":["import { store } from 'redux/store';\nimport { LAT, LNG } from 'configs/app-global';\n\nconst getMapApiKey = () => {\n  const location = store.getState()?.globalSettings?.settings?.location;\n  if (location?.length) {\n    const splitLocation = location?.split(',');\n    return {\n      lat: parseFloat(splitLocation?.[0]),\n      lng: parseFloat(splitLocation?.[1]),\n    };\n  }\n\n  return {\n    lat: LAT,\n    lng: LNG,\n  };\n};\n\nexport default getMapApiKey;\n","import {\n  GoogleApiWrapper,\n  Map,\n  Marker,\n  Polygon,\n  Polyline,\n} from 'google-maps-react';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport getMapApiKey from 'helpers/getMapApiKey';\nimport getDefaultCenter from 'helpers/getDefaultCenter';\n\nconst mapApiKey = getMapApiKey();\nconst defaultCenter = getDefaultCenter();\n\nconst DrawingManager = (props) => {\n  const [center, setCenter] = useState(defaultCenter);\n  const [polygon, setPolygon] = useState(\n    props.triangleCoords ? props.triangleCoords : [],\n  );\n  const [finish, setFinish] = useState(!!props.triangleCoords);\n  const [focus, setFocus] = useState(null);\n  props.setMerge(finish);\n\n  const onClick = (t, map, cord) => {\n    setFocus(false);\n    const { latLng } = cord;\n    const lat = latLng.lat();\n    const lng = latLng.lng();\n    if (finish) {\n      setPolygon([]);\n      props.settriangleCoords([{ lat, lng }]);\n      setCenter({ lat, lng });\n      setFinish(false);\n    } else {\n      props.settriangleCoords((prev) => [...prev, { lat, lng }]);\n    }\n  };\n\n  const onFinish = (e) => {\n    setFinish(!!props?.triangleCoords);\n    if (\n      props.triangleCoords[0]?.lat === e.position?.lat &&\n      props.triangleCoords.length > 1\n    ) {\n      setPolygon(props.triangleCoords);\n      props.setLocation(props.triangleCoords);\n      setFinish(true);\n      setFocus(true);\n    }\n  };\n\n  const currentLocation = () => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setCenter({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    });\n  };\n\n  useEffect(() => {\n    setFocus(true);\n  }, []);\n\n  function handleMapReady(_, map) {\n    map.setOptions({\n      draggableCursor: 'crosshair',\n      draggingCursor: 'grab',\n    });\n  }\n\n  const markers = props.triangleCoords.map((item) => ({\n    lat: Number(item.lat || '0'),\n    lng: Number(item.lng || '0'),\n  }));\n  // eslint-disable-next-line no-undef\n  var bounds = new props.google.maps.LatLngBounds(center);\n  for (var i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i]);\n  }\n\n  const OPTIONS = {\n    minZoom: 15,\n    maxZoom: 15,\n  };\n\n  return (\n    <div className='map-container' style={{ height: 500, width: '100%' }}>\n      <button\n        className='map-button'\n        type='button'\n        onClick={() => {\n          currentLocation();\n        }}\n      >\n        <BiCurrentLocation />\n      </button>\n      <Map\n        options={OPTIONS}\n        cursor='pointer'\n        onClick={onClick}\n        maxZoom={16}\n        minZoom={2}\n        google={props.google}\n        initialCenter={defaultCenter}\n        center={center}\n        onReady={handleMapReady}\n        bounds={focus && bounds}\n        className='clickable'\n      >\n        {props.triangleCoords?.map((item, idx) => (\n          <Marker\n            onClick={(e) => onFinish(e)}\n            key={idx}\n            position={item}\n            icon={{\n              url: 'https://upload.wikimedia.org/wikipedia/commons/9/94/Circle-image.svg',\n              scaledSize: new props.google.maps.Size(10, 10),\n            }}\n            className='marker'\n          />\n        ))}\n\n        {!polygon?.length ? (\n          <Polyline\n            key={props.triangleCoords?.length}\n            path={props.triangleCoords}\n            strokeColor='black'\n            strokeOpacity={0.8}\n            strokeWeight={3}\n            fillColor='black'\n            fillOpacity={0.35}\n          />\n        ) : (\n          <Polygon\n            key={polygon?.length}\n            path={props.triangleCoords}\n            strokeColor='black'\n            strokeOpacity={0.8}\n            strokeWeight={3}\n            fillColor='black'\n            fillOpacity={0.35}\n          />\n        )}\n      </Map>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: mapApiKey,\n  libraries: ['places'],\n})(DrawingManager);\n","export default function hideEmail(email) {\n  let skipFirstChars = 1;\n  let firstThreeChar = email?.slice(0, skipFirstChars);\n\n  let domainIndexStart = email?.lastIndexOf('@');\n  let maskedEmail = email?.slice(skipFirstChars, domainIndexStart - 1);\n  maskedEmail = maskedEmail?.replace(/./g, '*');\n  let domainPlusPreviousChar = email?.slice(domainIndexStart - 1, email.length);\n\n  return firstThreeChar?.concat(maskedEmail)?.concat(domainPlusPreviousChar);\n}\n","import { Button, Card, Col, Form, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport DrawingManager from 'components/drawing-map';\nimport React, { useEffect, useState } from 'react';\nimport MapGif from 'assets/video/map.gif';\nimport { toast } from 'react-toastify';\nimport userService from 'services/user';\n\nconst DeliverymanZone = ({ user_id }) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const [triangleCoords, setTriangleCoords] = useState([]);\n  const [merge, setMerge] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  const fetchDeliverymanZone = (id) => {\n    setLoading(true);\n    userService\n      .showDeliverymanZone(id)\n      .then((res) => {\n        setTriangleCoords(\n          res.data !== undefined\n            ? res.data?.map((item) => ({\n                lat: item?.[0],\n                lng: item?.[1],\n              }))\n            : [],\n        );\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          toast.dismiss();\n        }\n        console.log('err', err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (user_id) {\n      fetchDeliverymanZone(user_id);\n    }\n  }, [user_id]);\n\n  const onFinish = () => {\n    if (!user_id) {\n      toast.error(t('no.user.id'));\n      return;\n    }\n    if (triangleCoords.length < 3) {\n      toast.warning(t('place.selected.map'));\n      return;\n    }\n\n    if (!merge) {\n      toast.warning(t('place.selected.map'));\n      return;\n    }\n    const body = {\n      user_id,\n      address: triangleCoords.map((item) => ({\n        0: item.lat,\n        1: item.lng,\n      })),\n    };\n    setLoadingBtn(true);\n    userService\n      .createAndUpdateDeliverymanZone(body)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n      })\n      .finally(() => {\n        setLoadingBtn(false);\n      });\n  };\n\n  return (\n    <Card loading={loading}>\n      <Form layout='vertical' form={form} onFinish={onFinish}>\n        <Row gutter={12}>\n          <Col span={12}>\n            <img\n              src={MapGif}\n              alt={t('map.gif')}\n              style={{ object: 'contain' }}\n            />\n          </Col>\n          <Col span={24}>\n            <DrawingManager\n              triangleCoords={triangleCoords}\n              settriangleCoords={setTriangleCoords}\n              setMerge={setMerge}\n            />\n          </Col>\n        </Row>\n        <Button\n          type='primary'\n          htmlType='submit'\n          loading={loadingBtn}\n          className='mt-4'\n        >\n          {t('save')}\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n\nexport default DeliverymanZone;\n","import React, { useEffect, useState } from 'react';\nimport { Card, Form, Tabs } from 'antd';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport userService from 'services/user';\nimport Loading from 'components/loading';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from 'redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport createImage from 'helpers/createImage';\nimport useDemo from 'helpers/useDemo';\nimport hideEmail from 'components/hideEmail';\nimport DeliverySettingCreate from './add-deliveryman-settings';\nimport UserEditForm from './userEditForm';\nimport UserOrders from './userOrders';\nimport WalletHistory from './walletHistory';\nimport UserPassword from './userPassword';\nimport DeliverymanZone from './deliveryman-zone';\n\nconst { TabPane } = Tabs;\n\nconst UserEdit = () => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const { uuid } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useState('edit');\n  const [image, setImage] = useState([]);\n  const [id, setId] = useState(null);\n  const role = activeMenu?.data?.role;\n  const { isDemo } = useDemo();\n\n  const showUserData = (uuid) => {\n    setLoading(true);\n    userService\n      .getById(uuid)\n      .then((res) => {\n        const data = res.data;\n        const payload = {\n          ...data,\n          image: data.img ? createImage(data.img) : [],\n        };\n        dispatch(setMenuData({ activeMenu, data: payload }));\n        form.setFieldsValue({\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: isDemo ? hideEmail(data.email) : data.email,\n          phone: data.phone,\n          birthday: moment(data.birthday),\n          gender: data.gender,\n          password_confirmation: data.password_confirmation,\n          password: data.password,\n          shop_id:\n            data.invitations.length !== 0\n              ? data.invitations.map((i) => ({\n                  label: i.shop?.translation?.title,\n                  value: i.shop?.id,\n                }))\n              : undefined,\n          kitchen: {\n            label: data?.kitchen?.translation?.title,\n            value: data?.kitchen?.id,\n            key: data?.kitchen?.id,\n          },\n          isWork: !!data?.isWork,\n          table_ids:\n            data.tables?.length !== 0\n              ? data?.tables?.map((table) => ({\n                  label: table?.name,\n                  value: table?.id,\n                }))\n              : undefined,\n        });\n        setImage(data.img ? [createImage(data.img)] : []);\n        setId(res.data?.delivery_man_setting?.id);\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  useEffect(() => {\n    if (activeMenu?.refetch) showUserData(uuid);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu?.refetch]);\n\n  const onChange = (key) => setTab(key);\n\n  return (\n    <Card title={t('user.settings')}>\n      {!loading ? (\n        <Tabs\n          activeKey={tab}\n          onChange={onChange}\n          tabPosition='left'\n          size='small'\n        >\n          <TabPane key='edit' tab={t('edit.user')}>\n            <UserEditForm\n              data={activeMenu?.data}\n              form={form}\n              image={image}\n              setImage={setImage}\n              action_type={'edit'}\n            />\n          </TabPane>\n          {role === 'cook' && (\n            <TabPane key='order' tab={t('orders')}>\n              <UserOrders data={activeMenu?.data} />\n            </TabPane>\n          )}\n          {role === 'deliveryman' && (\n            <>\n              <TabPane key='delivery' tab={t('deliveryman')}>\n                <DeliverySettingCreate id={id} data={activeMenu.data} />\n              </TabPane>\n              <TabPane key='deliverymanzone' tab={t('deliveryman.zone')}>\n                <DeliverymanZone user_id={activeMenu.data?.id} />\n              </TabPane>\n            </>\n          )}\n          <TabPane key='wallet' tab={t('wallet')}>\n            <WalletHistory data={activeMenu?.data} />\n          </TabPane>\n          <TabPane key='password' tab={t('password')}>\n            <UserPassword data={activeMenu?.data} />\n          </TabPane>\n        </Tabs>\n      ) : (\n        <Loading />\n      )}\n    </Card>\n  );\n};\n\nexport default UserEdit;\n"],"names":["getMapApiKey","_store$getState","_store$getState$globa","_store$getState$globa2","location","store","globalSettings","settings","length","splitLocation","split","lat","parseFloat","lng","LAT","LNG","mapApiKey","defaultCenter","getDefaultCenter","GoogleApiWrapper","apiKey","libraries","props","_props$triangleCoords2","_props$triangleCoords3","center","setCenter","useState","polygon","setPolygon","triangleCoords","finish","setFinish","focus","setFocus","setMerge","useEffect","markers","map","item","Number","bounds","google","maps","LatLngBounds","i","extend","_jsxs","className","style","height","width","children","_jsx","type","onClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","BiCurrentLocation","Map","options","minZoom","maxZoom","cursor","t","cord","latLng","settriangleCoords","prev","initialCenter","onReady","_","setOptions","draggableCursor","draggingCursor","idx","Marker","e","_props$triangleCoords","_e$position","setLocation","onFinish","icon","url","scaledSize","Size","Polygon","path","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","Polyline","hideEmail","email","_maskedEmail","_firstThreeChar$conca","firstThreeChar","slice","domainIndexStart","lastIndexOf","maskedEmail","replace","domainPlusPreviousChar","concat","_ref","user_id","useTranslation","form","Form","setTriangleCoords","merge","loading","setLoading","loadingBtn","setLoadingBtn","id","userService","then","res","_res$data","undefined","data","catch","err","response","status","toast","console","log","finally","Card","layout","body","address","Row","gutter","Col","span","src","MapGif","alt","object","DrawingManager","Button","htmlType","TabPane","Tabs","UserEdit","_activeMenu$data","_activeMenu$data2","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","uuid","useParams","tab","setTab","image","setImage","setId","role","isDemo","useDemo","refetch","_data$kitchen","_data$kitchen$transla","_data$kitchen2","_data$kitchen3","_data$tables","_data$tables2","_res$data$delivery_ma","payload","img","createImage","setMenuData","setFieldsValue","firstname","lastname","phone","birthday","moment","gender","password_confirmation","password","shop_id","invitations","_i$shop","_i$shop$translation","_i$shop2","label","shop","translation","title","value","kitchen","key","isWork","table_ids","tables","table","name","delivery_man_setting","disableRefetch","showUserData","Loading","activeKey","onChange","tabPosition","size","UserEditForm","action_type","UserOrders","_Fragment","DeliverySettingCreate","DeliverymanZone","WalletHistory","UserPassword"],"sourceRoot":""}