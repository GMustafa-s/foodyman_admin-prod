{"version":3,"file":"static/js/6204.2784376b.chunk.js","mappings":"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","sources":["components/search.js","views/seller-views/story/story-add.js","views/seller-views/story/story-form.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Select, Spin } from 'antd';\n\nexport const DebounceSelect = ({\n  fetchOptions,\n  debounceTimeout = 400,\n  onClear,\n  ...props\n}) => {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  const fetchOnFocus = () => {\n      debounceFetcher('');\n  };\n\n  return (\n    <Select\n      showSearch\n      allowClear\n      labelInValue={true}\n      filterOption={false}\n      onSearch={debounceFetcher}\n      onClear={() => {\n        debounceFetcher('');\n        !!onClear && onClear();\n      }}\n      notFoundContent={fetching ? <Spin size='small' /> : 'no results'}\n      {...props}\n      options={options}\n      onFocus={fetchOnFocus}\n    />\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from '../../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport storeisService from '../../../services/seller/storeis';\nimport { fetchStoreis } from '../../../redux/slices/storeis';\nimport StoryForm from './story-form';\n\nconst StoresAdd = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const { myShop: shop } = useSelector((state) => state.myShop, shallowEqual);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (values, image) => {\n    const body = {\n      ...Object.assign(\n        {},\n        ...image.map((item, index) => ({\n          [`file_urls[${index}]`]: item.name,\n        })),\n      ),\n      product_id: values.products.value,\n    };\n    const nextUrl = 'seller/stories';\n\n    return storeisService.create(body).then(() => {\n      const data = {\n        shop_id: shop.id,\n      };\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchStoreis(data));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.story')} className='h-100'>\n      <StoryForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n};\n\nexport default StoresAdd;\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Row } from 'antd';\nimport { DebounceSelect } from 'components/search';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport productService from 'services/seller/product';\nimport MediaUpload from 'components/upload';\n\nexport default function StoryForm({ form, handleSubmit }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { myShop: shop } = useSelector((state) => state.myShop, shallowEqual);\n\n  //states\n  const [image, setImage] = useState(activeMenu.data?.image ?? []);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  //functions\n  function fetchProductsStock(search) {\n    const data = {\n      search,\n      shop_id: shop.id,\n      status: 'published',\n      active: 1,\n      rest: 1,\n    };\n\n    return productService.getAll(data).then((res) =>\n      res.data.map((product) => ({\n        label: product.translation.title,\n        value: product.id,\n        key: product.id,\n      })),\n    );\n  }\n\n  //submit form\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    handleSubmit(values, image).finally(() => setLoadingBtn(false));\n  };\n  return (\n    <Form\n      name='story-form'\n      layout='vertical'\n      onFinish={onFinish}\n      form={form}\n      initialValues={{ active: true, ...activeMenu.data }}\n      className='d-flex flex-column h-100'\n    >\n      <Row gutter={12}>\n        <Col span={24}>\n          <Form.Item\n            label={t('image')}\n            name='images'\n            rules={[\n              {\n                required: image.length === 0,\n                message: t('required'),\n              },\n            ]}\n          >\n            <MediaUpload\n              type='categories'\n              imageList={image}\n              setImageList={setImage}\n              form={form}\n              multiple={false}\n            />\n          </Form.Item>\n        </Col>\n\n        <Col span={24}>\n          <Form.Item\n            label={t('products')}\n            name={'products'}\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <DebounceSelect\n              fetchOptions={fetchProductsStock}\n              debounceTimeout={200}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <div className='flex-grow-1 d-flex flex-column justify-content-end'>\n        <div className='pb-5'>\n          <Button type='primary' htmlType='submit' loading={loadingBtn}>\n            {t('submit')}\n          </Button>\n        </div>\n      </div>\n    </Form>\n  );\n}\n"],"names":["DebounceSelect","_ref","fetchOptions","debounceTimeout","onClear","props","fetching","setFetching","useState","options","setOptions","debounceFetcher","useMemo","debounce","value","then","newOptions","_jsx","Select","showSearch","allowClear","labelInValue","filterOption","onSearch","notFoundContent","Spin","size","onFocus","fetchOnFocus","StoresAdd","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","form","Form","navigate","useNavigate","myShop","shop","useEffect","data","getFieldsValue","setMenuData","Card","title","className","children","StoryForm","handleSubmit","values","image","body","Object","assign","map","item","index","name","product_id","products","nextUrl","storeisService","shop_id","id","toast","batch","removeFromMenu","fetchStoreis","_activeMenu$data$imag","_activeMenu$data","setImage","loadingBtn","setLoadingBtn","_jsxs","layout","onFinish","finally","initialValues","active","Row","gutter","Col","span","label","rules","required","length","message","MediaUpload","type","imageList","setImageList","multiple","search","status","rest","productService","res","product","translation","key","Button","htmlType","loading"],"sourceRoot":""}