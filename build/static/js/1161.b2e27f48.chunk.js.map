{"version":3,"file":"static/js/1161.b2e27f48.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","views/seller-views/product-bonus/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Card, Space, Switch, Table, Tag } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomModal from '../../../components/modal';\nimport { Context } from '../../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { addMenu, disableRefetch } from '../../../redux/slices/menu';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport bonusService from '../../../services/seller/bonus';\nimport { fetchBonus } from '../../../redux/slices/product-bonus';\nimport moment from 'moment';\nimport DeleteButton from '../../../components/delete-button';\nimport FilterColumns from '../../../components/filter-column';\n\nconst ProductBonus = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [activeId, setActiveId] = useState(null);\n  const [type, setType] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [text, setText] = useState(null);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { bonus, meta, loading } = useSelector(\n    (state) => state.bonus,\n    shallowEqual,\n  );\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n    },\n    {\n      title: t('bonus.product'),\n      dataIndex: 'bonusStock',\n      key: 'bonusStock',\n      is_show: true,\n      render: (bonusStock, row) => {\n        return row?.bonusable?.product?.translation.title;\n      },\n    },\n    {\n      title: t('active'),\n      dataIndex: 'status',\n      key: 'status',\n      is_show: true,\n      render: (status, row) => {\n        return (\n          <Switch\n            key={row.id + status}\n            onChange={() => {\n              setIsModalVisible(true);\n              setActiveId(row.id);\n              setType(true);\n            }}\n            checked={status}\n          />\n        );\n      },\n    },\n    {\n      title: t('expired.at'),\n      dataIndex: 'expired_at',\n      key: 'expired_at',\n      is_show: true,\n      render: (expired_at) => (\n        <div>\n          {moment(new Date()).isBefore(expired_at) ? (\n            <Tag color='blue'>{expired_at}</Tag>\n          ) : (\n            <Tag color='error'>{expired_at}</Tag>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (data, row) => (\n        <Space>\n          <Button\n            type='primary'\n            icon={<EditOutlined />}\n            onClick={() => goToEdit(row)}\n          />\n          <DeleteButton\n            icon={<DeleteOutlined />}\n            onClick={() => {\n              setIsModalVisible(true);\n              setId([row.id]);\n              setType(false);\n              setText(true);\n            }}\n          />\n        </Space>\n      ),\n    },\n  ]);\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `seller/product-bonus/${row.id}`,\n        id: 'bonus_edit',\n        name: t('edit.bonus'),\n      }),\n    );\n    navigate(`/seller/product-bonus/${row.id}`);\n  };\n\n  const bannerDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        })),\n      ),\n    };\n    bonusService\n      .delete(params)\n      .then(() => {\n        dispatch(fetchBonus({}));\n        toast.success(t('successfully.deleted'));\n        setText(null);\n      })\n      .finally(() => {\n        setIsModalVisible(false);\n        setLoadingBtn(false);\n      });\n  };\n\n  const handleActive = () => {\n    setLoadingBtn(true);\n    bonusService\n      .setActive(activeId)\n      .then(() => {\n        setIsModalVisible(false);\n        dispatch(fetchBonus({}));\n        toast.success(t('successfully.updated'));\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchBonus({}));\n      dispatch(disableRefetch(activeMenu));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  const onChangePagination = (pageNumber) => {\n    const { pageSize, current } = pageNumber;\n    dispatch(fetchBonus({ perPage: pageSize, page: current }));\n  };\n\n  const onSelectChange = (newSelectedRowKeys) => {\n    setId(newSelectedRowKeys);\n  };\n\n  const rowSelection = {\n    id,\n    onChange: onSelectChange,\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  const goToAdd = () => {\n    dispatch(\n      addMenu({\n        id: 'add.bonus',\n        url: `seller/product-bonus/add`,\n        name: t('add.bonus'),\n      }),\n    );\n    navigate(`/seller/product-bonus/add`);\n  };\n\n  return (\n    <Card\n      title={t('bonus')}\n      extra={\n        <Space>\n          <Button\n            icon={<PlusCircleOutlined />}\n            type='primary'\n            onClick={goToAdd}\n          >\n            {t('add.bonus')}\n          </Button>\n          <DeleteButton className='' type='danger' onClick={allDelete}>\n            {t('delete.all')}\n          </DeleteButton>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={bonus}\n        pagination={{\n          pageSize: meta.per_page,\n          page: meta.current_page,\n          total: meta.total,\n        }}\n        rowKey={(record) => record.id}\n        loading={loading}\n        onChange={onChangePagination}\n      />\n      <CustomModal\n        click={type ? handleActive : bannerDelete}\n        text={\n          type ? t('set.active.bonus') : text ? t('delete') : t('all.delete')\n        }\n        setText={setId}\n        loading={loadingBtn}\n      />\n    </Card>\n  );\n};\n\nexport default ProductBonus;\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","ProductBonus","dispatch","useDispatch","navigate","useNavigate","setIsModalVisible","useContext","Context","id","setId","activeId","setActiveId","setType","loadingBtn","setLoadingBtn","text","setText","activeMenu","useSelector","state","shallowEqual","bonus","meta","loading","render","bonusStock","row","_row$bonusable","_row$bonusable$produc","bonusable","product","translation","status","expired_at","moment","Date","isBefore","Tag","color","data","EditOutlined","goToEdit","addMenu","url","name","useEffect","refetch","fetchBonus","disableRefetch","rowSelection","newSelectedRowKeys","Card","extra","PlusCircleOutlined","goToAdd","allDelete","length","FilterColumns","Table","scroll","x","filter","dataSource","pagination","pageSize","per_page","page","current_page","total","rowKey","record","pageNumber","current","perPage","CustomModal","click","handleActive","bonusService","then","finally","bannerDelete","params","Object","assign","index","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}