{"version":3,"file":"static/js/3400.c5d6a051.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","components/rive-result.js","components/search-input.js","helpers/formatSortType.js","views/career/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useRive } from 'rive-react';\nimport noproductsfound from '../assets/rive/noproductsfound.riv';\nimport noresult from '../assets/rive/noresult.riv';\nimport nosell from '../assets/rive/nosell.riv';\n\nfunction RiveResult({ id = 'noresult', text = '' }) {\n  const { t } = useTranslation();\n  const src = {\n    noproductsfound: noproductsfound,\n    noresult: noresult,\n    nosell: nosell,\n  };\n  const riveParams = {\n    src: src[id],\n    artboard: 'New Artboard',\n    autoplay: true,\n  };\n\n  const { RiveComponent } = useRive(riveParams);\n  return (\n    <div className='animation-canvas'>\n      <div style={{ width: '100%', height: 200 }}>\n        <RiveComponent />\n      </div>\n      <div className='text text-center'>{t(text)}</div>\n    </div>\n  );\n}\n\nexport default RiveResult;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport default function SearchInput({\n  handleChange,\n  defaultValue,\n  resetSearch,\n  ...props\n}) {\n  const [searchTerm, setSearchTerm] = useState(defaultValue);\n\n  const debounceSearch = useMemo(() => {\n    const loadOptions = (value) => {\n      handleChange(value);\n    };\n    return debounce(loadOptions, 800);\n  }, [handleChange]);\n\n  useEffect(() => {\n    setSearchTerm(defaultValue);\n  }, [resetSearch, defaultValue]);\n\n  return (\n    <Input\n      value={searchTerm}\n      onChange={(event) => {\n        setSearchTerm(event.target.value);\n        debounceSearch(event.target.value);\n      }}\n      prefix={<SearchOutlined />}\n      {...props}\n    />\n  );\n}\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport { Button, Card, Image, Space, Table, Tag } from 'antd';\nimport { Context } from '../../context/context';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport CustomModal from '../../components/modal';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { addMenu, disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport careerService from '../../services/career';\nimport { fetchCareer } from '../../redux/slices/career';\nimport { useTranslation } from 'react-i18next';\nimport DeleteButton from '../../components/delete-button';\nimport FilterColumns from '../../components/filter-column';\nimport SearchInput from '../../components/search-input';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport formatSortType from '../../helpers/formatSortType';\nimport RiveResult from 'components/rive-result';\nconst colors = ['blue', 'red', 'gold', 'volcano', 'cyan', 'lime'];\n\nconst Career = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  function goToEdit(id) {\n    dispatch(\n      addMenu({\n        id: 'career_edit',\n        url: `career/${id}`,\n        name: t('edit.career'),\n      })\n    );\n    navigate(`/career/${id}`);\n  }\n\n  const goToAddCategory = () => {\n    dispatch(\n      addMenu({\n        id: 'career_add',\n        url: 'career/add',\n        name: t('add.career'),\n      })\n    );\n    navigate('/career/add');\n  };\n\n  const goToClone = (id) => {\n    dispatch(\n      addMenu({\n        id: `career-clone`,\n        url: `career-clone/${id}`,\n        name: t('career.clone'),\n      })\n    );\n    navigate(`/career-clone/${id}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n    },\n    {\n      title: t('name'),\n      dataIndex: 'name',\n      key: 'name',\n      is_show: true,\n      render: (_, row) => row?.translation?.title,\n    },\n    {\n      title: t('translations'),\n      dataIndex: 'locales',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            {row.locales?.map((item, index) => (\n              <Tag className='text-uppercase' color={[colors[index]]}>\n                {item}\n              </Tag>\n            ))}\n          </Space>\n        );\n      },\n    },\n    {\n      title: t('category'),\n      dataIndex: 'category ',\n      key: 'category',\n      is_show: true,\n      render: (img, row) => row.category?.translation?.title,\n    },\n    {\n      title: t('status'),\n      dataIndex: 'active',\n      key: 'active',\n      is_show: true,\n      render: (active) =>\n        active ? (\n          <Tag color='cyan'> {t('active')}</Tag>\n        ) : (\n          <Tag color='yellow'>{t('inactive')}</Tag>\n        ),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => goToEdit(row.id)}\n              disabled={row.deleted_at}\n            />\n            <Button\n              icon={<CopyOutlined />}\n              onClick={() => goToClone(row.id)}\n              disabled={row.deleted_at}\n            />\n            <DeleteButton\n              disabled={row.deleted_at}\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setId([row.id]);\n                setIsModalVisible(true);\n                setText(true);\n              }}\n            />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [text, setText] = useState(null);\n\n  const { career, meta, loading } = useSelector(\n    (state) => state.career,\n    shallowEqual\n  );\n\n  const data = activeMenu.data;\n  const paramsData = {\n    search: data?.search,\n    pageSize: meta.per_page,\n    page: data?.page || 1,\n  };\n\n  const categoryDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    careerService\n      .delete(params)\n      .then(() => {\n        dispatch(fetchCareer(paramsData));\n        toast.success(t('successfully.deleted'));\n      })\n      .finally(() => {\n        setIsModalVisible(false);\n        setLoadingBtn(false);\n        setText(null);\n        setId(null);\n      });\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchCareer(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchCareer(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      })\n    );\n  }\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  const handleFilter = (items) => {\n    const data = activeMenu.data;\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, ...items },\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card className='p-0'>\n        <Space wrap size={[14, 20]}>\n          <SearchInput\n            placeholder={t('search')}\n            className='w-25'\n            handleChange={(e) => {\n              handleFilter({ search: e });\n            }}\n            defaultValue={activeMenu.data?.search}\n            resetSearch={!activeMenu.data?.search}\n            style={{ minWidth: 300 }}\n          />\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n          <Button\n            type='primary'\n            icon={<PlusCircleOutlined />}\n            onClick={goToAddCategory}\n          >\n            {t('add.career')}\n          </Button>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      </Card>\n\n      <Card title={t('career')}>\n        <Table\n          locale={{\n            emptyText: <RiveResult />,\n          }}\n          scroll={{ x: true }}\n          rowSelection={rowSelection}\n          columns={columns?.filter((item) => item.is_show)}\n          dataSource={career}\n          pagination={{\n            pageSize: meta.per_page,\n            page: data?.page || 1,\n            total: meta.total,\n            defaultCurrent: data?.page,\n            current: activeMenu.data?.page,\n          }}\n          rowKey={(record) => record.id}\n          onChange={onChangePagination}\n        />\n      </Card>\n\n      <CustomModal\n        click={categoryDelete}\n        text={text ? t('delete') : t('all.delete')}\n        setText={setId}\n        loading={loadingBtn}\n      />\n    </>\n  );\n};\n\nexport default Career;\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","id","text","riveParams","src","noproductsfound","noresult","nosell","artboard","autoplay","RiveComponent","useRive","width","height","SearchInput","handleChange","defaultValue","resetSearch","searchTerm","setSearchTerm","debounceSearch","useMemo","debounce","value","useEffect","Input","event","target","prefix","SearchOutlined","formatSortType","colors","Career","_activeMenu$data","_activeMenu$data2","_activeMenu$data3","dispatch","useDispatch","navigate","useNavigate","activeMenu","useSelector","state","shallowEqual","render","_","row","_row$translation","translation","_row$locales","locales","index","Tag","color","img","_row$category","_row$category$transla","category","active","EditOutlined","addMenu","url","name","goToEdit","deleted_at","CopyOutlined","goToClone","setId","setIsModalVisible","setText","useContext","Context","loadingBtn","setLoadingBtn","career","meta","loading","data","paramsData","search","pageSize","per_page","page","refetch","fetchCareer","disableRefetch","useDidUpdate","rowSelection","selectedRowKeys","_Fragment","Card","wrap","placeholder","items","setMenuData","handleFilter","minWidth","allDelete","length","PlusCircleOutlined","goToAddCategory","FilterColumns","Table","locale","emptyText","RiveResult","scroll","x","filter","dataSource","pagination","total","defaultCurrent","current","rowKey","record","sorter","perPage","field","column","order","sort","CustomModal","click","categoryDelete","params","Object","assign","careerService","then","finally","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}