{"version":3,"file":"static/js/7059.7fe46e99.chunk.js","mappings":"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","sources":["components/filter-column.js","components/search-input.js","helpers/formatSortType.js","helpers/numberToPrice.js","views/wallet/index.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport default function SearchInput({\n  handleChange,\n  defaultValue,\n  resetSearch,\n  ...props\n}) {\n  const [searchTerm, setSearchTerm] = useState(defaultValue);\n\n  const debounceSearch = useMemo(() => {\n    const loadOptions = (value) => {\n      handleChange(value);\n    };\n    return debounce(loadOptions, 800);\n  }, [handleChange]);\n\n  useEffect(() => {\n    setSearchTerm(defaultValue);\n  }, [resetSearch, defaultValue]);\n\n  return (\n    <Input\n      value={searchTerm}\n      onChange={(event) => {\n        setSearchTerm(event.target.value);\n        debounceSearch(event.target.value);\n      }}\n      prefix={<SearchOutlined />}\n      {...props}\n    />\n  );\n}\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import { store } from 'redux/store';\n\nexport default function numberToPrice(number = 0, symbol, position) {\n  const defaultCurrency = store.getState()?.currency?.defaultCurrency;\n  const price = Number(number)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  const currencySymbol = symbol || defaultCurrency?.symbol || '$';\n  const currencyPosition = position || defaultCurrency?.position || 'before';\n\n  return currencyPosition === 'after'\n    ? `${price} ${currencySymbol}`\n    : `${currencySymbol} ${price}`;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Space, Table } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport formatSortType from '../../helpers/formatSortType';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport numberToPrice from '../../helpers/numberToPrice';\nimport { fetchWallets } from '../../redux/slices/wallet';\nimport SearchInput from '../../components/search-input';\nimport FilterColumns from '../../components/filter-column';\n\nexport default function Wallets() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { wallets, loading, meta, params } = useSelector(\n    (state) => state.wallet,\n    shallowEqual,\n  );\n  const { defaultCurrency } = useSelector(\n    (state) => state.currency,\n    shallowEqual,\n  );\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('firstname'),\n      dataIndex: 'firstname',\n      key: 'firstname',\n      is_show: true,\n    },\n    {\n      title: t('lastname'),\n      dataIndex: 'lastname',\n      key: 'lastname',\n      is_show: true,\n    },\n    {\n      title: t('wallet'),\n      dataIndex: 'wallet',\n      key: 'wallet',\n      is_show: true,\n      render: (wallet) =>\n        numberToPrice(\n          wallet?.price,\n          defaultCurrency?.symbol,\n          defaultCurrency?.position,\n        ),\n    },\n    {\n      title: t('phone'),\n      dataIndex: 'phone',\n      key: 'phone',\n      is_show: true,\n    },\n    {\n      title: t('role'),\n      dataIndex: 'role',\n      key: 'role',\n      is_show: true,\n    },\n  ]);\n\n  function onChangePagination(pagination, filters, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({ activeMenu, data: { perPage, page, column, sort } }),\n    );\n  }\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchWallets());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    const data = activeMenu.data;\n    const paramsData = {\n      sort: data?.sort,\n      column: data?.column,\n      perPage: data?.perPage,\n      page: data?.page,\n      search: data?.search,\n    };\n    dispatch(fetchWallets(paramsData));\n  }, [activeMenu.data]);\n\n  const handleFilter = (item, name) => {\n    const data = activeMenu.data;\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, [name]: item },\n      }),\n    );\n  };\n\n  return (\n    <Card\n      title={t('wallets')}\n      extra={\n        <Space wrap>\n          <SearchInput\n            placeholder={t('search')}\n            handleChange={(search) => handleFilter(search, 'search')}\n            defaultValue={activeMenu.data?.search}\n            resetSearch={!activeMenu.data?.search}\n          />\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={wallets}\n        loading={loading}\n        pagination={{\n          pageSize: params.perPage,\n          page: params.page,\n          total: meta.total,\n          defaultCurrent: params.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n      />\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["Text","Typography","_ref","columns","setColumns","style","size","iconOnly","t","useTranslation","open","setOpen","useState","menu","_jsx","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","onClick","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","Button","icon","TableOutlined","SearchInput","handleChange","defaultValue","resetSearch","props","searchTerm","setSearchTerm","debounceSearch","useMemo","debounce","value","useEffect","Input","event","target","prefix","SearchOutlined","formatSortType","type","numberToPrice","_store$getState","_store$getState$curre","number","arguments","length","undefined","symbol","position","defaultCurrency","store","currency","price","Number","toFixed","replace","currencySymbol","currencyPosition","Wallets","_activeMenu$data","_activeMenu$data2","dispatch","useDispatch","activeMenu","useSelector","state","shallowEqual","wallets","loading","meta","params","wallet","sorter","render","refetch","fetchWallets","disableRefetch","useDidUpdate","data","paramsData","sort","column","perPage","page","search","Card","extra","wrap","placeholder","handleFilter","name","setMenuData","FilterColumns","Table","scroll","x","filter","dataSource","pagination","pageSize","total","defaultCurrent","rowKey","record","id","filters","current","field","order","ref","React","AntdIcon","_objectSpread","TableOutlinedSvg","displayName"],"sourceRoot":""}