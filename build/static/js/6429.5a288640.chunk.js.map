{"version":3,"file":"static/js/6429.5a288640.chunk.js","mappings":"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","sources":["components/search-input.js","services/translation.js","views/translations/translationCreateModal.js","views/translations/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport default function SearchInput({\n  handleChange,\n  defaultValue,\n  resetSearch,\n  ...props\n}) {\n  const [searchTerm, setSearchTerm] = useState(defaultValue);\n\n  const debounceSearch = useMemo(() => {\n    const loadOptions = (value) => {\n      handleChange(value);\n    };\n    return debounce(loadOptions, 800);\n  }, [handleChange]);\n\n  useEffect(() => {\n    setSearchTerm(defaultValue);\n  }, [resetSearch, defaultValue]);\n\n  return (\n    <Input\n      value={searchTerm}\n      onChange={(event) => {\n        setSearchTerm(event.target.value);\n        debounceSearch(event.target.value);\n      }}\n      prefix={<SearchOutlined />}\n      {...props}\n    />\n  );\n}\n","import request from './request';\nimport requestWithoutTimeout from './requestWithoutTimeout';\n\nconst translationService = {\n  getAll: (params) =>\n    request.get('dashboard/admin/translations/paginate', { params }),\n  delete: (id) => request.delete(`dashboard/admin/translations/${id}`),\n  getById: (id, params) =>\n    request.get(`dashboard/admin/translations/${id}`, { params }),\n  create: (params) =>\n    request.post(`dashboard/admin/translations`, {}, { params }),\n  update: (key, params) =>\n    request.put(`dashboard/admin/translations/${key}`, {}, { params }),\n  export: (params) =>\n    request.get(`dashboard/admin/translations/export`, { params }),\n  import: (data) =>\n    requestWithoutTimeout.post('dashboard/admin/translations/import', data),\n};\n\nexport default translationService;\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Input, Modal, Row, Select } from 'antd';\nimport translationService from '../../services/translation';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\n\nexport default function TranslationCreateModal({\n  visible,\n  setVisible,\n  languages,\n  refetch,\n}) {\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onFinish = (values) => {\n    setLoading(true);\n    translationService\n      .create(values)\n      .then(() => {\n        toast.success(t('successfully.created'));\n        setVisible(false);\n        refetch();\n      })\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      title={t('add.translation')}\n      onCancel={handleCancel}\n      footer={[\n        <Button\n          key='create-translation'\n          type='primary'\n          form='translation-form'\n          htmlType='submit'\n          loading={loading}\n        >\n          {t('create')}\n        </Button>,\n        <Button\n          key='create-translation-cancel'\n          type='default'\n          onClick={handleCancel}\n        >\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form\n        id='translation-form'\n        name='translation'\n        layout='vertical'\n        onFinish={onFinish}\n        form={form}\n        initialValues={{ group: 'web' }}\n      >\n        <Row gutter={12}>\n          <Col span={24}>\n            <Form.Item\n              label={t('name')}\n              name='key'\n              rules={[\n                {\n                  validator(_, value) {\n                    if (!value) {\n                      return Promise.reject(new Error(t('required')));\n                    } else if (value && value?.trim() === '') {\n                      return Promise.reject(new Error(t('no.empty.space')));\n                    } else if (value && value?.trim().length < 2) {\n                      return Promise.reject(new Error(t('must.be.at.least.2')));\n                    }\n                    return Promise.resolve();\n                  },\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col span={24}>\n            <Form.Item\n              label={t('group')}\n              name='group'\n              rules={[{ required: true, message: '' }]}\n            >\n              <Select>\n                <Select.Option value='web'>{t('web')}</Select.Option>\n                <Select.Option value='mobile'>{t('mobile')}</Select.Option>\n                <Select.Option value='errors'>{t('errors')}</Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          {languages.map((item, index) => (\n            <Col key={index} span={24}>\n              <Form.Item\n                label={`${t('translation')} (${item.locale})`}\n                name={`value[${item.locale}]`}\n                rules={[\n                  {\n                    validator(_, value) {\n                      if (!value) {\n                        return Promise.reject(new Error(t('required')));\n                      } else if (value && value?.trim() === '') {\n                        return Promise.reject(new Error(t('no.empty.space')));\n                      } else if (value && value?.trim().length < 2) {\n                        return Promise.reject(\n                          new Error(t('must.be.at.least.2'))\n                        );\n                      }\n                      return Promise.resolve();\n                    },\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          ))}\n        </Row>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Button, Card, Form, Input, Select, Space, Table } from 'antd';\nimport translationService from 'services/translation';\nimport { toast } from 'react-toastify';\nimport { EditOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport TranslationCreateModal from './translationCreateModal';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport SearchInput from 'components/search-input';\nimport { CgImport } from 'react-icons/cg';\nimport { addMenu } from 'redux/slices/menu';\nimport { useNavigate } from 'react-router-dom';\nimport { export_url } from 'configs/app-global';\n\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const { t } = useTranslation();\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values, dataIndex });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            validator(_, value) {\n              if (!value) {\n                return Promise.reject(new Error(t('required')));\n              } else if (value && value?.trim() === '') {\n                return Promise.reject(new Error(t('no.empty.space')));\n              } else if (value && value?.trim().length < 2) {\n                return Promise.reject(new Error(t('must.be.at.least.2')));\n              }\n              return Promise.resolve();\n            },\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className='editable-cell-value-wrap cursor-pointer d-flex justify-content-between align-items-center'\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        <div className='w-100'>{children}</div>\n        <EditOutlined />\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nexport default function Translations() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [list, setList] = useState([]);\n  const [pageSize, setPageSize] = useState(10);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [group, setGroup] = useState(null);\n  const [sort, setSort] = useState(null);\n  const [column, setColumn] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [skipPage, setSkipPage] = useState(0);\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n  const [locale, setLocale] = useState('');\n  const [search, setSearch] = useState('');\n  const [downloading, setDownloading] = useState(false);\n\n  const defaultColumns = useMemo(\n    () => [\n      {\n        title: t('name'),\n        dataIndex: 'key',\n        sorter: (a, b, sortOrder) => sortTable(sortOrder, 'key'),\n        width: 250,\n        fixed: 'left',\n      },\n      {\n        title: t('group'),\n        dataIndex: 'group',\n        sorter: (a, b, sortOrder) => sortTable(sortOrder, 'group'),\n        width: 150,\n        fixed: 'left',\n      },\n      ...languages\n        .filter((item) => (locale ? item.locale === locale : true))\n        .map((item) => ({\n          title: item.title,\n          dataIndex: `value[${item.locale}]`,\n          editable: true,\n          width: 300,\n        })),\n    ],\n    [languages, locale],\n  );\n\n  function sortTable(type, column) {\n    let sortType;\n    switch (type) {\n      case 'ascend':\n        sortType = 'asc';\n        break;\n      case 'descend':\n        sortType = 'desc';\n        break;\n\n      default:\n        break;\n    }\n    setSort(sortType);\n    setColumn(column);\n  }\n\n  function fetchTranslations() {\n    setLoading(true);\n    const params = {\n      perPage: pageSize,\n      skip: skipPage,\n      group,\n      sort,\n      column,\n      search,\n    };\n    translationService\n      .getAll(params)\n      .then(({ data }) => {\n        const translations = Object.entries(data.translations).map((item) => ({\n          key: item[0],\n          group: item[1][0].group,\n          ...Object.assign(\n            {},\n            ...languages.map((lang) => ({\n              [`value[${lang.locale}]`]: item[1].find(\n                (el) => el.locale === lang.locale,\n              )?.value,\n            })),\n          ),\n        }));\n        setList(translations);\n        setTotal(data.total);\n      })\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    fetchTranslations();\n    // eslint-disable-next-line\n  }, [pageSize, group, sort, column, skipPage, search]);\n\n  const onChangePagination = (pageNumber) => {\n    const { pageSize, current } = pageNumber;\n    const skip = (current - 1) * pageSize;\n    setPageSize(pageSize);\n    setPage(current);\n    setSkipPage(skip);\n  };\n\n  const handleSave = (row) => {\n    const { dataIndex, key } = row;\n    const newData = [...list];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    if (item[dataIndex] === row[dataIndex]) {\n      return;\n    }\n    newData.splice(index, 1, { ...item, ...row });\n    setList(newData);\n    const savedItem = {\n      ...row,\n      value: undefined,\n      dataIndex: undefined,\n      key: undefined,\n    };\n    updateTranslation(key, savedItem);\n  };\n\n  function updateTranslation(key, data) {\n    translationService\n      .update(key, data)\n      .then((res) => toast.success(res.message));\n  }\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n\n  const columns = defaultColumns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        fixed: col.fixed,\n        handleSave,\n      }),\n    };\n  });\n\n  const excelExport = () => {\n    setDownloading(true);\n    translationService\n      .export()\n      .then((res) => {\n        window.location.href = export_url + res.data.file_name;\n      })\n      .finally(() => setDownloading(false));\n  };\n\n  const goToImport = () => {\n    dispatch(\n      addMenu({\n        id: 'translation-import',\n        url: `settings/translations/import`,\n        name: t('translation.import'),\n      }),\n    );\n    navigate(`import`);\n  };\n\n  return (\n    <Card\n      extra={\n        <Space wrap>\n          <SearchInput\n            placeholder={t('search')}\n            handleChange={(search) => setSearch(search)}\n          />\n          <Select\n            style={{ minWidth: 150 }}\n            value={locale}\n            onChange={(value) => setLocale(value)}\n            placeholder={t('select.language')}\n          >\n            <Select.Option value=''>{t('all')}</Select.Option>\n            {languages.map((item) => (\n              <Select.Option key={item.locale} value={item.locale}>\n                {item.title}\n              </Select.Option>\n            ))}\n          </Select>\n          <Select\n            style={{ minWidth: 150 }}\n            value={group}\n            onChange={(value) => setGroup(value)}\n            placeholder={t('select.group')}\n          >\n            <Select.Option value=''>{t('all')}</Select.Option>\n            <Select.Option value='web'>{t('web')}</Select.Option>\n            <Select.Option value='mobile'>{t('mobile')}</Select.Option>\n            <Select.Option value='errors'>{t('errors')}</Select.Option>\n          </Select>\n          <Button onClick={excelExport} loading={downloading}>\n            <CgImport className='mr-2' />\n            {t('export')}\n          </Button>\n          <Button onClick={goToImport}>\n            <CgImport className='mr-2' />\n            {t('import')}\n          </Button>\n          <Button\n            icon={<PlusCircleOutlined />}\n            type='primary'\n            onClick={() => setVisible(true)}\n          >\n            {t('add.translation')}\n          </Button>\n        </Space>\n      }\n    >\n      <Table\n        components={components}\n        columns={columns}\n        dataSource={list}\n        pagination={{\n          pageSize,\n          page,\n          total,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n        loading={loading}\n        scroll={{\n          x: 1500,\n        }}\n      />\n      {visible && (\n        <TranslationCreateModal\n          visible={visible}\n          setVisible={setVisible}\n          languages={languages}\n          refetch={fetchTranslations}\n        />\n      )}\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);"],"names":["SearchInput","_ref","handleChange","defaultValue","resetSearch","props","searchTerm","setSearchTerm","useState","debounceSearch","useMemo","debounce","value","useEffect","_jsx","Input","onChange","event","target","prefix","SearchOutlined","getAll","params","request","delete","id","getById","create","update","key","export","import","data","requestWithoutTimeout","TranslationCreateModal","visible","setVisible","languages","refetch","t","useTranslation","loading","setLoading","form","Form","handleCancel","Modal","title","onCancel","footer","Button","type","htmlType","children","onClick","name","layout","onFinish","values","translationService","then","toast","finally","initialValues","group","_jsxs","Row","gutter","Col","span","label","rules","validator","_","trim","Promise","reject","Error","length","resolve","required","message","Select","map","item","index","locale","EditableContext","React","EditableRow","component","Provider","EditableCell","_ref2","editable","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","useRef","useContext","current","focus","toggleEdit","setFieldsValue","save","async","validateFields","errInfo","console","log","childNode","style","margin","ref","onPressEnter","onBlur","className","paddingRight","EditOutlined","Translations","dispatch","useDispatch","navigate","useNavigate","list","setList","pageSize","setPageSize","page","setPage","total","setTotal","setGroup","sort","setSort","column","setColumn","skipPage","setSkipPage","useSelector","state","formLang","shallowEqual","setLocale","search","setSearch","downloading","setDownloading","defaultColumns","sorter","a","b","sortOrder","sortTable","width","fixed","filter","sortType","fetchTranslations","perPage","skip","_ref3","translations","Object","entries","assign","lang","_item$1$find","find","el","row","newData","findIndex","splice","res","updateTranslation","undefined","components","body","cell","columns","col","onCell","Card","extra","Space","wrap","placeholder","minWidth","excelExport","window","location","href","export_url","file_name","CgImport","goToImport","addMenu","url","icon","PlusCircleOutlined","Table","dataSource","pagination","rowKey","pageNumber","scroll","x","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName"],"sourceRoot":""}