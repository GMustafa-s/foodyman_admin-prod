{"version":3,"file":"static/js/940.ef5e45a6.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","components/result-modal.js","helpers/formatSortType.js","views/notification/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React from 'react';\nimport { Button, Modal, Result } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst ResultModal = ({\n  open,\n  handleCancel,\n  text,\n  click,\n  loading,\n  subTitle,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal closable={false} visible={open} footer={null} centered>\n      <Result status='warning' title={text} subTitle={subTitle} />\n      <div className='d-flex justify-content-end'>\n        <Button\n          type='primary'\n          className='mr-2'\n          onClick={click}\n          loading={loading}\n        >\n          {t('yes')}\n        </Button>\n        <Button onClick={() => handleCancel()}>{t('no')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ResultModal;\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  CloudUploadOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport { Button, Card, Space, Switch, Table, Tabs, Tag, Tooltip } from 'antd';\nimport { toast } from 'react-toastify';\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addMenu, disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport { fetchNotifications } from '../../redux/slices/notification';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport formatSortType from '../../helpers/formatSortType';\nimport blogService from '../../services/blog';\nimport { useTranslation } from 'react-i18next';\nimport DeleteButton from '../../components/delete-button';\nimport FilterColumns from '../../components/filter-column';\nimport ResultModal from '../../components/result-modal';\nimport { FaTrashRestoreAlt } from 'react-icons/fa';\nimport moment from \"moment/moment\";\n\nconst { TabPane } = Tabs;\nconst roles = ['published', 'deleted_at'];\n\nexport default function Notifications() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `notification/${row.uuid}`,\n        id: 'notification_edit',\n        name: t('edit.notification'),\n      })\n    );\n    navigate(`/notification/${row.uuid}`);\n  };\n\n  const goToClone = (row) => {\n    dispatch(\n      addMenu({\n        id: `notification-clone`,\n        url: `notification-clone/${row.uuid}`,\n        name: t('notification.clone'),\n      })\n    );\n    navigate(`/notification-clone/${row.uuid}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('title'),\n      dataIndex: 'translation',\n      key: 'translation',\n      is_show: true,\n      render: (translation) => translation?.title,\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (_, row) => moment(row?.created_at).format('YYYY-MM-DD HH:mm')\n    },\n    {\n      title: t('published.at'),\n      dataIndex: 'published_at',\n      key: 'published_at',\n      is_show: true,\n      render: (published_at) => (\n        <>\n          {published_at ? (\n            <Tag color='red'>{published_at}</Tag>\n          ) : (\n            <Tag color='blue'>{t('not.published')}</Tag>\n          )}\n        </>\n      ),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            {!row.published_at ? (\n              <Space>\n                <Tooltip title={t('publish')}>\n                  <Button\n                    disabled={!row.active}\n                    icon={<CloudUploadOutlined />}\n                    onClick={() => {\n                      setId(row.uuid);\n                      setIsDelete(false);\n                      setIsPublish(true);\n                      setIsModalVisible(true);\n                    }}\n                  />\n                </Tooltip>\n                <Button\n                  type='primary'\n                  icon={<EditOutlined />}\n                  onClick={() => goToEdit(row)}\n                />\n              </Space>\n            ) : (\n              ''\n            )}\n            <Button\n              icon={<CopyOutlined />}\n              onClick={() => goToClone(row)}\n              disabled={row.deleted_at}\n            />\n            <DeleteButton\n              icon={<DeleteOutlined />}\n              disabled={row.deleted_at}\n              onClick={() => {\n                setId([row.id]);\n                setIsDelete(true);\n                setIsModalVisible(true);\n              }}\n            />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [isDelete, setIsDelete] = useState(null);\n  const [isPublish, setIsPublish] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [restore, setRestore] = useState(null);\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [role, setRole] = useState('published');\n  const immutable = activeMenu.data?.role || role;\n  const data = activeMenu.data;\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n    status: immutable ? undefined : immutable,\n    deleted_at: immutable === 'deleted_at' ? immutable : undefined,\n  };\n\n  const { notifications, meta, loading, params } = useSelector(\n    (state) => state.notification,\n    shallowEqual\n  );\n\n  const notificationDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    blogService\n      .delete(params)\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchNotifications());\n        setIsModalVisible(false);\n      })\n      .finally(() => {\n        setId(null);\n        setLoadingBtn(false);\n      });\n  };\n\n  const notificationDropAll = () => {\n    setLoadingBtn(true);\n    blogService\n      .dropAll()\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchNotifications());\n        setRestore(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const notificationRestoreAll = () => {\n    setLoadingBtn(true);\n    blogService\n      .restoreAll()\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchNotifications());\n        setRestore(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const notificationPublish = () => {\n    setLoadingBtn(true);\n    blogService\n      .publish(id)\n      .then(() => {\n        toast.success(t('successfully.published'));\n        dispatch(fetchNotifications());\n        setIsModalVisible(false);\n        setIsPublish(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const notificationSetActive = () => {\n    setLoadingBtn(true);\n    blogService\n      .setActive(id)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        dispatch(fetchNotifications());\n        setIsModalVisible(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchNotifications(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchNotifications(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      })\n    );\n  }\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setIsDelete(true);\n    }\n  };\n\n  const goToAdd = () => {\n    dispatch(\n      addMenu({\n        id: 'add.notification',\n        url: `notification/add`,\n        name: t('add.notification'),\n      })\n    );\n    navigate(`/notification/add`);\n  };\n\n  const handleFilter = (items) => {\n    const data = activeMenu.data;\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, ...items },\n      })\n    );\n  };\n\n  return (\n    <Card\n      title={t('notifications')}\n      extra={\n        <Space>\n          {immutable !== 'deleted_at' ? (\n            <Space wrap>\n              <DeleteButton size='' onClick={allDelete}>\n                {t('delete.selected')}\n              </DeleteButton>\n              <DeleteButton\n                size=''\n                onClick={() => setRestore({ delete: true })}\n              >\n                {t('delete.all')}\n              </DeleteButton>\n            </Space>\n          ) : (\n            <DeleteButton\n              icon={<FaTrashRestoreAlt className='mr-2' />}\n              onClick={() => setRestore({ restore: true })}\n            >\n              {t('restore.all')}\n            </DeleteButton>\n          )}\n          <Button\n            icon={<PlusCircleOutlined />}\n            type='primary'\n            onClick={goToAdd}\n          >\n            {t('add.notification')}\n          </Button>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Tabs\n        className='mt-3'\n        activeKey={immutable}\n        onChange={(key) => {\n          handleFilter({ role: key, page: 1 });\n          setRole(key);\n        }}\n        type='card'\n      >\n        {roles.map((item) => (\n          <TabPane tab={t(item)} key={item} />\n        ))}\n      </Tabs>\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={notifications}\n        pagination={{\n          pageSize: params.perPage,\n          page: params.page,\n          total: meta.total,\n          defaultCurrent: params.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n      <CustomModal\n        click={\n          isPublish\n            ? notificationPublish\n            : isDelete\n            ? notificationDelete\n            : notificationSetActive\n        }\n        text={\n          isPublish\n            ? t('publish.notification')\n            : isDelete\n            ? t('delete.notification')\n            : t('set.active.notification')\n        }\n        loading={loadingBtn}\n        setText={setId}\n      />\n\n      {restore && (\n        <ResultModal\n          open={restore}\n          handleCancel={() => setRestore(null)}\n          click={restore.restore ? notificationRestoreAll : notificationDropAll}\n          text={restore.restore ? t('restore.modal.text') : t('read.carefully')}\n          subTitle={restore.restore ? '' : t('confirm.deletion')}\n          loading={loadingBtn}\n          setText={setId}\n        />\n      )}\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","handleCancel","text","click","loading","subTitle","Modal","closable","footer","centered","Result","status","formatSortType","TabPane","Tabs","roles","Notifications","_activeMenu$data","dispatch","useDispatch","navigate","useNavigate","sorter","render","translation","_","row","moment","created_at","format","published_at","_Fragment","Tag","color","active","CloudUploadOutlined","setId","uuid","setIsDelete","setIsPublish","setIsModalVisible","EditOutlined","addMenu","url","id","name","goToEdit","CopyOutlined","goToClone","deleted_at","useContext","Context","isDelete","isPublish","loadingBtn","setLoadingBtn","restore","setRestore","activeMenu","useSelector","state","shallowEqual","role","setRole","immutable","data","paramsData","sort","column","perPage","page","undefined","notifications","meta","params","notification","useEffect","refetch","fetchNotifications","disableRefetch","useDidUpdate","rowSelection","selectedRowKeys","Card","extra","wrap","allDelete","length","delete","FaTrashRestoreAlt","PlusCircleOutlined","goToAdd","FilterColumns","activeKey","items","setMenuData","handleFilter","tab","Table","scroll","x","filter","dataSource","pagination","pageSize","total","defaultCurrent","rowKey","record","current","field","order","CustomModal","notificationPublish","blogService","then","finally","notificationDelete","Object","assign","index","notificationSetActive","setText","ResultModal","notificationRestoreAll","notificationDropAll","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}