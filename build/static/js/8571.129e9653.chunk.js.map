{"version":3,"file":"static/js/8571.129e9653.chunk.js","mappings":"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","sources":["views/products/product-request-modal.js","views/products/product-request-detail.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Form, Col, Row, Input, Button } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nexport default function ProductRequestModal({\n  data,\n  handleCancel,\n  handleOk,\n  visible,\n}) {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    const params = { ...values, status: 'canceled' };\n    handleOk(params);\n  };\n\n  return (\n    <Modal\n      title={t(data.title)}\n      visible={visible}\n      onCancel={handleCancel}\n      footer={[\n        <Button type='primary' onClick={() => form.submit()} loading={loading}>\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel}>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form layout='vertical' onFinish={onFinish} form={form}>\n        <Form.Item>\n          <Row className='mt-4'>\n            <Col span={24}>\n              <Form.Item\n                name='status_note'\n                label={t('note')}\n                rules={[\n                  {\n                    validator(_, value) {\n                      if (!value) {\n                        return Promise.reject(new Error(t('required')));\n                      } else if (value && value?.trim() === '') {\n                        return Promise.reject(new Error(t('no.empty.space')));\n                      } else if (value && value?.trim().length < 2) {\n                        return Promise.reject(\n                          new Error(t('must.be.at.least.2'))\n                        );\n                      }\n                      return Promise.resolve();\n                    },\n                  },\n                ]}\n              >\n                <Input.TextArea maxLength={250} showCount />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { disableRefetch } from 'redux/slices/menu';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport {\n  Button,\n  Card,\n  Col,\n  Descriptions,\n  Row,\n  Space,\n  Spin,\n  Alert,\n  Typography,\n} from 'antd';\nimport { IMG_URL } from '../../configs/app-global';\nimport { removeFromMenu } from '../../redux/slices/menu';\nimport { fetchRequestModels } from 'redux/slices/request-models';\nimport requestAdminModelsService from 'services/request-models';\nimport ProductRequestModal from './product-request-modal';\n\nconst { Text } = Typography;\n\nconst body = {\n  type: 'product',\n};\n\nconst ProductRequestDetail = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const { id } = useParams();\n  const { activeMenu } = useSelector((state) => state.menu);\n  const { defaultLang } = useSelector((state) => state.formLang, shallowEqual);\n\n  const [loading, setLoading] = useState(false);\n  const [isButtonLoading, setButtonLoading] = useState(false);\n  const [data, setData] = useState({});\n  const [model, setModel] = useState({});\n  const [statusNote, setStatusNote] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n\n  function fetchProductRequest(alias) {\n    setLoading(true);\n    requestAdminModelsService\n      .getById(alias)\n      .then((res) => {\n        setData(res.data.data);\n        setModel(res.data.model);\n        setStatusNote(res.data?.status_note);\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  }\n\n  function handleStatusUpdate(params) {\n    setButtonLoading(true);\n\n    const nextUrl = 'catalog/products';\n\n    requestAdminModelsService\n      .changeStatus(id, params)\n      .then(() => {\n        navigate(`/${nextUrl}`, { state: { tab: 'request' } });\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        toast.success(t('successfully.changed'));\n        dispatch(fetchRequestModels(body));\n      })\n      .finally(() => {\n        setModalVisible(false);\n        setButtonLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    fetchProductRequest(id);\n  }, [id]);\n\n  const changedInfo = data;\n  const originalInfo = model;\n\n  return !loading ? (\n    <>\n      <Card>\n        <Descriptions bordered title={t('changed.info')}>\n          <Descriptions.Item label={`${t('title')} (${defaultLang})`} span={3}>\n            <Text\n              type={\n                changedInfo?.[`title[${defaultLang}]`] !==\n                originalInfo?.translation?.title\n                  ? 'danger'\n                  : undefined\n              }\n            >\n              {changedInfo?.[`title[${defaultLang}]`]}\n            </Text>\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={`${t('description')} (${defaultLang})`}\n            span={3}\n          >\n            <Text\n              type={\n                changedInfo[`description[${defaultLang}]`] !==\n                originalInfo?.translation?.description\n                  ? 'danger'\n                  : undefined\n              }\n            >\n              {changedInfo[`description[${defaultLang}]`]}\n            </Text>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('shop')} span={1.5}>\n            <Text\n              type={\n                changedInfo?.shop?.translation.title !==\n                originalInfo?.shop?.translation.title\n                  ? 'danger'\n                  : undefined\n              }\n            >\n              {changedInfo?.shop?.translation.title}\n            </Text>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('category')} span={1.5}>\n            <Text\n              type={\n                changedInfo?.category?.label !==\n                originalInfo?.category?.translation.title\n                  ? 'danger'\n                  : undefined\n              }\n            >\n              {changedInfo?.category?.label}\n            </Text>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('brand')} span={1.5}>\n            {changedInfo?.brand?.label}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('unit')} span={1.5}>\n            {changedInfo?.unit?.label}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('images')} span={3}>\n            <Row gutter={12}>\n              {changedInfo?.images?.map((item, idx) => (\n                <Col key={'image' + idx}>\n                  <img width={80} alt='product' src={item.url} />\n                </Col>\n              ))}\n            </Row>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('tax')}>\n            {changedInfo?.tax}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('min.quantity')}>\n            {changedInfo?.min_qty}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('max.quantity')}>\n            {changedInfo?.max_qty}\n          </Descriptions.Item>\n        </Descriptions>\n\n        {changedInfo?.stocks?.map((item, idx) => {\n          if (!item) {\n            return '';\n          }\n          return (\n            <Descriptions key={'desc' + idx} bordered className='mt-4'>\n              <Descriptions.Item label={t('price')} span={2}>\n                {item.price}\n              </Descriptions.Item>\n              <Descriptions.Item label={t('quantity')} span={2}>\n                {item.quantity}\n              </Descriptions.Item>\n              {item?.ids?.map((extra, idx) => (\n                <Descriptions.Item\n                  key={'extra' + idx}\n                  label={changedInfo?.extras[idx].label}\n                >\n                  {extra?.label}\n                </Descriptions.Item>\n              ))}\n            </Descriptions>\n          );\n        })}\n\n        <Descriptions bordered className='mt-4' title={t('original.info')}>\n          <Descriptions.Item\n            label={`${t('title')} (${defaultLang})`}\n            span={3}\n            column={3}\n          >\n            {originalInfo?.translation?.title}\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={`${t('description')} (${defaultLang})`}\n            span={3}\n            column={3}\n          >\n            {originalInfo?.translation?.description}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('shop')} span={1.5} column={1.5}>\n            {originalInfo?.shop?.translation.title}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('category')} span={1.5} column={1.5}>\n            {originalInfo?.category?.translation.title}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('brand')} span={1.5} column={1.5}>\n            {originalInfo?.brand?.title}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('unit')} span={1.5} column={1.5}>\n            {originalInfo?.unit?.translation.title}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('images')} span={3} column={3}>\n            <Row gutter={12}>\n              {originalInfo?.galleries?.map((item, idx) => (\n                <Col key={'image' + idx}>\n                  <img width={80} alt='product' src={IMG_URL + item.path} />\n                </Col>\n              ))}\n            </Row>\n          </Descriptions.Item>\n          <Descriptions.Item span={3} column={3} label={t('tax')}>\n            {originalInfo?.tax}\n          </Descriptions.Item>\n          <Descriptions.Item span={3} column={3} label={t('min.quantity')}>\n            {originalInfo?.min_qty}\n          </Descriptions.Item>\n          <Descriptions.Item span={3} column={3} label={t('max.quantity')}>\n            {originalInfo?.max_qty}\n          </Descriptions.Item>\n        </Descriptions>\n        {originalInfo?.stocks?.map((item, idx) => {\n          if (!item) {\n            return '';\n          }\n          return (\n            <Descriptions key={'desc' + idx} bordered className='mt-4'>\n              <Descriptions.Item label={t('price')} span={2} column={2}>\n                {item?.price}\n              </Descriptions.Item>\n              <Descriptions.Item label={t('quantity')} span={2} column={2}>\n                {item?.quantity}\n              </Descriptions.Item>\n              {item?.extras?.map((extra, idx) => (\n                <Descriptions.Item\n                  key={'extra' + idx}\n                  label={extra?.group?.translation?.title}\n                  span={2}\n                  column={2}\n                >\n                  {extra?.value}\n                </Descriptions.Item>\n              ))}\n            </Descriptions>\n          );\n        })}\n        {statusNote && (\n          <Alert\n            className='mt-4'\n            message={t('status.note')}\n            description={statusNote}\n            type='error'\n          />\n        )}\n\n        <div className='d-flex justify-content-end mt-4'>\n          <Space>\n            <Button\n              type='primary'\n              onClick={() => {\n                handleStatusUpdate({ status: 'approved' });\n              }}\n            >\n              {t('accept')}\n            </Button>\n            <Button\n              type='primary'\n              danger\n              onClick={() => {\n                setModalVisible(true);\n              }}\n            >\n              {t('decline')}\n            </Button>\n          </Space>\n        </div>\n      </Card>\n\n      <ProductRequestModal\n        data={{ title: 'decline' }}\n        visible={modalVisible}\n        handleCancel={() => setModalVisible(false)}\n        handleOk={handleStatusUpdate}\n        laoding={isButtonLoading}\n      />\n    </>\n  ) : (\n    <div className='d-flex justify-content-center align-items-center'>\n      <Spin size='large' className='py-5' />\n    </div>\n  );\n};\n\nexport default ProductRequestDetail;\n"],"names":["ProductRequestModal","_ref","data","handleCancel","handleOk","visible","t","useTranslation","form","Form","loading","setLoading","useState","_jsx","Modal","title","onCancel","footer","Button","type","onClick","submit","children","layout","onFinish","values","params","status","Row","className","Col","span","name","label","rules","validator","_","value","trim","Promise","reject","Error","length","resolve","Input","maxLength","showCount","Text","Typography","body","ProductRequestDetail","_originalInfo$transla","_originalInfo$transla2","_changedInfo$shop","_originalInfo$shop","_changedInfo$shop2","_changedInfo$category","_originalInfo$categor","_changedInfo$category2","_changedInfo$brand","_changedInfo$unit","_changedInfo$images","_changedInfo$stocks","_originalInfo$transla3","_originalInfo$transla4","_originalInfo$shop2","_originalInfo$categor2","_originalInfo$brand","_originalInfo$unit","_originalInfo$galleri","_originalInfo$stocks","dispatch","useDispatch","navigate","useNavigate","id","useParams","activeMenu","useSelector","state","menu","defaultLang","formLang","shallowEqual","isButtonLoading","setButtonLoading","setData","model","setModel","statusNote","setStatusNote","modalVisible","setModalVisible","handleStatusUpdate","nextUrl","requestAdminModelsService","then","tab","removeFromMenu","toast","fetchRequestModels","finally","useEffect","alias","res","_res$data","status_note","disableRefetch","changedInfo","originalInfo","Spin","size","_jsxs","_Fragment","Card","Descriptions","bordered","translation","undefined","description","shop","category","brand","unit","gutter","images","map","item","idx","width","alt","src","url","tax","min_qty","max_qty","stocks","_item$ids","price","quantity","ids","extra","extras","column","galleries","IMG_URL","path","_item$extras","_extra$group","_extra$group$translat","group","Alert","message","Space","danger","laoding"],"sourceRoot":""}