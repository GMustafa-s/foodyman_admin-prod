{"version":3,"file":"static/js/304.11eafd44.chunk.js","mappings":"wHAAe,SAASA,EACtBC,EACAC,GAEC,IADDC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAER,MAAMG,EAAgB,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWO,KAAKC,IAAI,CAC/B,CAAK,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,QAAUR,EAAO,GAAGC,KAAa,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMC,WAEtCR,EAAO,GAAGC,KAAa,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMC,gBADzBJ,MAGN,OAAOK,OAAOC,OAAO,MAAOL,G,yOCOf,SAASM,IACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACR,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,KACpD,UAAEnB,IAAcgB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,UAAUD,EAAAA,IACvDE,GAAWC,EAAAA,EAAAA,OACVC,GAAQC,EAAAA,EAAAA,UACTC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAEvCC,EAAAA,EAAAA,YAAU,IACD,KACL,MAAMC,EAAOV,EAAKW,gBAAe,GACjCb,GAASc,EAAAA,EAAAA,IAAY,CAAEpB,WAAAA,EAAYkB,KAAAA,OAGpC,IAqBH,SAASG,EAAkBH,GACzB,IAAKA,EACH,MAAO,GAET,MAAM,aAAEI,GAAiBJ,EACnBK,EAAStC,EAAUO,KAAKC,IAAI,IAAA+B,EAAAC,EAAAC,EAAA,MAAM,CACtC,CAAC,SAASjC,EAAKC,WAEd,QAFuB8B,EAAGF,EAAaK,MACrCC,GAAOA,EAAGlC,SAAWD,EAAKC,gBAC5B,IAAA8B,OAAA,EAF0BA,EAExBK,MACH,CAAC,eAAepC,EAAKC,WAEpB,QAF6B+B,EAAGH,EAAaK,MAC3CC,GAAOA,EAAGlC,SAAWD,EAAKC,gBAC5B,IAAA+B,OAAA,EAFgCA,EAE9BK,YACH,CAAC,cAAcrC,EAAKC,WAEnB,QAF4BgC,EAAGJ,EAAaK,MAC1CC,GAAOA,EAAGlC,SAAWD,EAAKC,gBAC5B,IAAAgC,OAAA,EAF+BA,EAE7BK,eAEL,OAAOpC,OAAOC,OAAO,MAAO2B,GA2B9B,OAPAN,EAAAA,EAAAA,YAAU,KACJjB,EAAWgC,SAlBUpB,CAAAA,IACzBG,GAAW,GACXkB,EAAAA,EAAAA,QACWrB,GACRsB,MAAMC,IACL,IAAIC,EAAOD,EAAIjB,KACfV,EAAK6B,eAAe,IACfD,KACAf,EAAkBe,QAGxBE,SAAQ,KACPvB,GAAW,GACXT,GAASiC,EAAAA,EAAAA,IAAevC,QAM1BwC,CAAkB5B,KAGnB,CAACZ,EAAWgC,WAGbS,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACb,MAAO/B,EAAE,sBAAuB6C,OAAOF,EAAAA,EAAAA,KAACG,EAAAA,EAAY,IAAIC,SAC1D/B,GAGA2B,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mDAAkDD,UAC/DJ,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,KAAK,QAAQF,UAAU,YAH/BL,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAACzC,KAAMA,EAAM0C,aAjEdhE,IACpB,MAAMiE,EAAO,CACXC,KAAM,eACNvB,OAAO7C,EAAAA,EAAAA,GAAqBC,EAAWC,GACvC4C,aAAa9C,EAAAA,EAAAA,GAAqBC,EAAWC,EAAQ,eACrD6C,YAAY/C,EAAAA,EAAAA,GAAqBC,EAAWC,EAAQ,eAEhDmE,EAAU,gBAEhB,OAAOpB,EAAAA,EAAAA,OAAmBkB,GAAMjB,MAAK,KACnCoB,EAAAA,GAAAA,QAAcxD,EAAE,0BAChByD,EAAAA,EAAAA,KAAM,KACJjD,GAASkD,EAAAA,EAAAA,IAAe,IAAKxD,EAAYqD,QAAAA,KACzC/C,GAASmD,EAAAA,EAAAA,GAAmB,QAE9B/C,EAAS,IAAI2C","sources":["helpers/getTranslationFields.js","views/notification/notification-clone.js"],"sourcesContent":["export default function getTranslationFields(\n  languages,\n  values,\n  field = 'title',\n) {\n  const list = languages?.map((item) => ({\n    [item?.locale]: !values[`${field}[${item?.locale}]`]\n      ? undefined\n      : values[`${field}[${item?.locale}]`],\n  }));\n  return Object.assign({}, ...list);\n}\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form, Spin } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  disableRefetch,\n  removeFromMenu,\n  setMenuData,\n} from '../../redux/slices/menu';\nimport { fetchNotifications } from '../../redux/slices/notification';\nimport blogService from '../../services/blog';\nimport LanguageList from '../../components/language-list';\nimport getTranslationFields from '../../helpers/getTranslationFields';\nimport { useTranslation } from 'react-i18next';\nimport NotificationForm from './notification-form';\n\nexport default function NotificationClone() {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const { uuid } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (values) => {\n    const body = {\n      type: 'notification',\n      title: getTranslationFields(languages, values),\n      description: getTranslationFields(languages, values, 'description'),\n      short_desc: getTranslationFields(languages, values, 'short_desc'),\n    };\n    const nextUrl = 'notifications';\n\n    return blogService.create(body).then(() => {\n      toast.success(t('successfully.updated'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchNotifications({}));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.description,\n      [`short_desc[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.short_desc,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  const fetchNotification = (uuid) => {\n    setLoading(true);\n    blogService\n      .getById(uuid)\n      .then((res) => {\n        let blog = res.data;\n        form.setFieldsValue({\n          ...blog,\n          ...getLanguageFields(blog),\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      fetchNotification(uuid);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('clone.notification')} extra={<LanguageList />}>\n      {!loading ? (\n        <NotificationForm form={form} handleSubmit={handleSubmit} />\n      ) : (\n        <div className='d-flex justify-content-center align-items-center'>\n          <Spin size='large' className='py-5' />\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":["getTranslationFields","languages","values","field","arguments","length","undefined","list","map","item","locale","Object","assign","NotificationClone","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","formLang","dispatch","useDispatch","form","Form","navigate","useNavigate","uuid","useParams","loading","setLoading","useState","useEffect","data","getFieldsValue","setMenuData","getLanguageFields","translations","result","_translations$find","_translations$find2","_translations$find3","find","el","title","description","short_desc","refetch","blogService","then","res","blog","setFieldsValue","finally","disableRefetch","fetchNotification","_jsx","Card","extra","LanguageList","children","className","Spin","size","NotificationForm","handleSubmit","body","type","nextUrl","toast","batch","removeFromMenu","fetchNotifications"],"sourceRoot":""}