{"version":3,"file":"static/js/8471.7ba5d95e.chunk.js","mappings":"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","sources":["views/seller-views/brands/brand-add.js","views/seller-views/brands/brand-form.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Card, Form } from 'antd';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from '../../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport brandService from '../../../services/seller/brands';\nimport { sellerfetchBrands } from '../../../redux/slices/brand';\nimport BrandForm from './brand-form';\n\nconst SellerBrandAdd = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (values, image) => {\n    const nextUrl = 'seller/brands';\n    const paramsData = { status: 'published' };\n    const body = {\n      ...values,\n      active: values.active ? 1 : 0,\n      'images[0]': image[0]?.name,\n    };\n\n    return brandService.create(body).then(() => {\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(sellerfetchBrands(paramsData));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.brand')}>\n      <BrandForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n};\nexport default SellerBrandAdd;\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Input, Row, Switch } from 'antd';\nimport MediaUpload from '../../../components/upload';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nexport default function BrandForm({ form, handleSubmit }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  // states\n  const [image, setImage] = useState(\n    activeMenu.data?.image ? activeMenu.data?.image : [],\n  );\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  // submit form\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    handleSubmit(values, image).finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Form\n      name='basic'\n      layout='vertical'\n      onFinish={onFinish}\n      form={form}\n      initialValues={{ active: true, ...activeMenu.data }}\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <Form.Item\n            label={t('title')}\n            name={'title'}\n            rules={[\n              {\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.reject(new Error(t('required')));\n                  } else if (value && value?.trim() === '') {\n                    return Promise.reject(new Error(t('no.empty.space')));\n                  } else if (value && value?.trim().length < 2) {\n                    return Promise.reject(new Error(t('must.be.at.least.2')));\n                  }\n                  return Promise.resolve();\n                },\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <Form.Item\n            label={t('image')}\n            name='images'\n            rules={[\n              {\n                validator() {\n                  if (image?.length === 0) {\n                    return Promise.reject(new Error(t('required')));\n                  }\n                  return Promise.resolve();\n                },\n              },\n            ]}\n          >\n            <MediaUpload\n              type='brands'\n              imageList={image}\n              setImageList={setImage}\n              form={form}\n              multiple={false}\n            />\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <div className='col-md-12 col-sm-6'>\n            <Form.Item\n              label={t('active')}\n              name='active'\n              valuePropName='checked'\n            >\n              <Switch />\n            </Form.Item>\n          </div>\n        </Col>\n      </Row>\n      <Button type='primary' htmlType='submit' loading={loadingBtn}>\n        {t('submit')}\n      </Button>\n    </Form>\n  );\n}\n"],"names":["SellerBrandAdd","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","form","Form","navigate","useNavigate","useEffect","data","getFieldsValue","setMenuData","_jsx","Card","title","children","BrandForm","handleSubmit","values","image","_image$","nextUrl","paramsData","status","body","active","name","brandService","then","toast","batch","removeFromMenu","sellerfetchBrands","_ref","_activeMenu$data","_activeMenu$data2","setImage","useState","loadingBtn","setLoadingBtn","_jsxs","layout","onFinish","finally","initialValues","Row","gutter","Col","span","label","rules","validator","_","value","trim","Promise","reject","Error","length","resolve","Input","MediaUpload","type","imageList","setImageList","multiple","className","valuePropName","Switch","Button","htmlType","loading"],"sourceRoot":""}