{"version":3,"file":"static/js/4786.4396891b.chunk.js","mappings":"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","sources":["components/refetch-search.js","services/kitchen.js","views/products/Extras/extra-group-modal.js","views/products/Extras/extra-value-modal.js","views/products/extra-select-modal.js","views/products/extra-value-select-modal.js","views/products/product-extras.js","views/products/product-finish.js","views/products/products-index.js","views/products/property/components/list/index.js","views/products/property/components/form/create.js","views/products/property/components/form/edit.js","views/products/property/index.js","views/products/steps.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Select, Spin } from 'antd';\n\nexport const RefetchSearch = ({\n  fetchOptions,\n  debounceTimeout = 400,\n  refetch = false,\n  ...props\n}) => {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  const fetchOnFocus = () => {\n      debounceFetcher('');\n  };\n\n  return (\n    <Select\n      showSearch\n      allowClear\n      labelInValue={true}\n      onClear={() => debounceFetcher('')}\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size='small' /> : 'no results'}\n      {...props}\n      options={options}\n      onFocus={fetchOnFocus}\n    />\n  );\n};\n","import request from './request';\n\nconst kitchenService = {\n  getAll: (params) => request.get('dashboard/admin/kitchen', { params }),\n  // getById: (id, params) =>\n  //   request.get(`dashboard/admin/ads-packages/${id}`, { params }),\n  // create: (data) =>\n  //   request.post(`dashboard/admin/ads-packages`, data ),\n  // update: (id, data) =>\n  //   request.put(`dashboard/admin/ads-packages/${id}`, data),\n  // delete: (params) =>\n  //   request.delete(`dashboard/admin/ads-packages/delete`, { params }),\n  // setActive: (id) => request.get(`dashboard/admin/ads-package/${id}/active`),\n};\n\nexport default kitchenService;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Input, Modal, Select } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport LanguageList from '../../../components/language-list';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport extraService from '../../../services/extra';\nimport { toast } from 'react-toastify';\nimport { fetchExtraGroups } from '../../../redux/slices/extraGroup';\nimport getTranslationFields from '../../../helpers/getTranslationFields';\nimport Loading from '../../../components/loading';\n\nexport default function ExtraGroupModal({ modal, handleCancel, onSuccess }) {\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { languages, defaultLang } = useSelector(\n    (state) => state.formLang,\n    shallowEqual\n  );\n\n  function fetchExtraGroup(id) {\n    setLoading(true);\n    extraService\n      .getGroupById(id)\n      .then((res) => {\n        const data = res.data;\n        form.setFieldsValue({ ...data, ...getLanguageFields(data) });\n      })\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    if (modal?.id) {\n      fetchExtraGroup(modal.id);\n    }\n  }, [modal]);\n\n  function createExtraGroup(body) {\n    setLoadingBtn(true);\n    extraService\n      .createGroup(body)\n      .then(() => {\n        toast.success(t('successfully.created'));\n        handleCancel();\n        dispatch(fetchExtraGroups());\n        !!onSuccess && onSuccess()\n      })\n      .finally(() => setLoadingBtn(false));\n  }\n\n  const onFinish = (values) => {\n    const body = {\n      title: getTranslationFields(languages, values),\n      type: 'text',\n    };\n    if (modal?.id) {\n      updateExtraGroup(modal?.id, body);\n    } else {\n      createExtraGroup(body);\n    }\n  };\n\n  function updateExtraGroup(id, body) {\n    setLoadingBtn(true);\n    extraService\n      .updateGroup(id, body)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        dispatch(fetchExtraGroups());\n        handleCancel();\n      })\n      .finally(() => setLoadingBtn(false));\n  }\n\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale\n      )?.title,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  return (\n    <Modal\n      title={modal?.id ? t('edit.extra.group') : t('add.extra.group')}\n      visible={!!modal}\n      onCancel={handleCancel}\n      footer={[\n        <Button\n          key='save-button-group'\n          type='primary'\n          onClick={() => form.submit()}\n          loading={loadingBtn}\n        >\n          {t('save')}\n        </Button>,\n        <Button key='cancel-button-group' type='default' onClick={handleCancel}>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      {!loading ? (\n        <>\n          <div className='d-flex justify-content-end'>\n            <LanguageList />\n          </div>\n          <Form\n            layout='vertical'\n            name='extra-group'\n            form={form}\n            onFinish={onFinish}\n          >\n            {languages.map((item) => (\n              <Form.Item\n                key={'title' + item.locale}\n                rules={[\n                  {\n                    required: item.locale === defaultLang,\n                    message: t('required'),\n                  },\n                ]}\n                name={`title[${item.locale}]`}\n                label={t('title')}\n                hidden={item.locale !== defaultLang}\n              >\n                <Input placeholder={t('title')} />\n              </Form.Item>\n            ))}\n          </Form>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </Modal>\n  );\n}\n","import { Button, Form, Input, Modal, Select } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport ImageUploadSingle from '../../../components/image-upload-single';\nimport createImage from '../../../helpers/createImage';\nimport { fetchExtraValues } from '../../../redux/slices/extraValue';\nimport extraService from '../../../services/extra';\nimport { DebounceSelect } from 'components/search';\n\nexport default function ExtraValueModal({\n  modal,\n  handleCancel,\n  onSuccess,\n  groupId,\n}) {\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [type, setType] = useState('text');\n  const [image, setImage] = useState(null);\n  const [color, setColor] = useState('');\n\n  const { extraGroups } = useSelector(\n    (state) => state.extraGroup,\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (modal?.id) {\n      setType(modal.group.type);\n      const body = {\n        ...modal,\n        extra_group_id: {\n          label: modal?.group?.translation?.title,\n          value: modal?.group?.id,\n        },\n        value: modal.value,\n      };\n      switch (modal.group.type) {\n        case 'color':\n          setColor(modal.value);\n          break;\n\n        case 'image':\n          setImage(createImage(modal.value));\n          break;\n\n        default:\n          break;\n      }\n      form.setFieldsValue(body);\n    }\n    if (groupId) {\n      form.setFieldsValue({\n        extra_group_id: {\n          value: groupId,\n        },\n      });\n    }\n  }, [modal, groupId]);\n\n  const updateExtra = (id, body) => {\n    setLoadingBtn(true);\n    extraService\n      .updateValue(id, body)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        handleCancel();\n        dispatch(fetchExtraValues());\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const createExtra = (body) => {\n    setLoadingBtn(true);\n    extraService\n      .createValue(body)\n      .then(() => {\n        toast.success(t('successfully.created'));\n        handleCancel();\n        dispatch(fetchExtraValues());\n        !!onSuccess && onSuccess();\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const onFinish = (values) => {\n    console.log(values);\n    const body = {\n      extra_group_id: values?.extra_group_id?.value,\n      value: getValue(type, values.value),\n    };\n\n    if (modal?.id) {\n      updateExtra(modal.id, body);\n    } else {\n      createExtra(body);\n    }\n  };\n\n  function getValue(type, value) {\n    switch (type) {\n      case 'color':\n        return value.hex;\n      case 'text':\n        return value;\n      case 'image':\n        return value.name;\n      default:\n        return '';\n    }\n  }\n\n  const renderExtraValue = (type) => {\n    switch (type) {\n      case 'color':\n        return (\n          <SketchPicker\n            onChangeComplete={(color) => setColor(color.hex)}\n            color={color}\n            disableAlpha={true}\n          />\n        );\n      case 'text':\n        return <Input placeholder={t('enter.extra.value')} />;\n\n      case 'image':\n        return (\n          <ImageUploadSingle\n            type='extras'\n            image={image}\n            setImage={setImage}\n            form={form}\n            name='value'\n          />\n        );\n\n      default:\n        return '';\n    }\n  };\n\n  async function fetchExtraGroupList(search) {\n    const params = { perPage: 10, active: 1, search };\n    console.log('search => ', params);\n    return extraService.getAllGroups(params).then((res) =>\n      res?.data?.map((item) => ({\n        value: item?.id,\n        label: item?.translation?.title,\n        key: item?.id,\n      }))\n    );\n  }\n\n  return (\n    <Modal\n      title={modal?.id ? t('edit.extra') : t('add.extra')}\n      visible={!!modal}\n      onCancel={handleCancel}\n      footer={[\n        <Button\n          type='primary'\n          onClick={() => form.submit()}\n          loading={loadingBtn}\n        >\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel}>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form name='extra-form' layout='vertical' form={form} onFinish={onFinish}>\n        <Form.Item\n          name='extra_group_id'\n          label={t('extra.group')}\n          hidden={!!groupId}\n          rules={[{ required: true, message: '' }]}\n        >\n          <DebounceSelect fetchOptions={fetchExtraGroupList} />\n        </Form.Item>\n        <Form.Item\n          name='value'\n          label={t('value')}\n          rules={[{ required: true, message: '' }]}\n        >\n          {renderExtraValue(type)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}","import { Button, Input, List, Modal, Pagination, Tag } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport extraService from 'services/extra';\nimport ExtraGroupModal from './Extras/extra-group-modal';\nimport { useTranslation } from 'react-i18next';\nimport { PlusOutlined } from '@ant-design/icons';\nimport useDebounce from 'helpers/useDebounce';\n\nconst ExtraSelectModal = ({ open, onClose, selectedExtras, onSelect }) => {\n  const { t } = useTranslation();\n  const [extrasGroup, setExtrasGroup] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [search, setSearch] = useState('');\n  const debouncedSearch = useDebounce(search, 500);\n  const [meta, setMeta] = useState();\n  const getExtraGroup = (query, page = 1) => {\n    setLoading(true);\n    const params = { valid: true, perPage: 10, search: query, page };\n    extraService\n      .getAllGroups(params)\n      .then((res) => {\n        const data = res.data.map((item) => ({\n          id: item.id,\n          label: item.translation?.title,\n          value: item.id,\n          shop_id: item.shop_id,\n        }));\n        setExtrasGroup(data);\n        setMeta(res.meta);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const onChange = (page) => {\n    getExtraGroup(debouncedSearch, page);\n  };\n\n  useEffect(() => {\n    if (open) {\n      getExtraGroup(debouncedSearch);\n    }\n  }, [open, debouncedSearch]);\n\n  return (\n    <>\n      <Modal\n        visible={open}\n        onCancel={() => {\n          onClose();\n          setSearch('');\n        }}\n        footer={\n          !loading ? (\n            <Button\n              type='link'\n              onClick={() => setIsAddModalOpen(true)}\n              style={{ paddingLeft: 0 }}\n              icon={<PlusOutlined />}\n            >\n              {t('add.new.extra')}\n            </Button>\n          ) : null\n        }\n      >\n        <Input\n          className='mt-3'\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <List\n          loading={loading}\n          dataSource={extrasGroup.filter(\n            (extraItem) =>\n              !selectedExtras?.some(\n                (selectedExtra) => selectedExtra.id === extraItem.id\n              )\n          )}\n          renderItem={(item) => (\n            <List.Item\n              extra={!item?.shop_id ? <Tag>{t('admin')}</Tag> : null}\n              style={{ cursor: 'pointer' }}\n              onClick={() => {\n                onSelect(item);\n              }}\n            >\n              {item.label}\n            </List.Item>\n          )}\n        />\n        <Pagination\n          onChange={onChange}\n          current={meta?.current_page}\n          total={meta?.total}\n        />\n      </Modal>\n      <ExtraGroupModal\n        modal={isAddModalOpen}\n        handleCancel={() => setIsAddModalOpen(false)}\n        onSuccess={() => getExtraGroup()}\n      />\n    </>\n  );\n};\n\nexport default ExtraSelectModal;\n","import { Button, Checkbox, Empty, List, Modal } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport extraService from 'services/extra';\nimport ExtraValueModal from './Extras/extra-value-modal';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst ExtraValueSelectModal = ({ extra, onClose, onSelect }) => {\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [extraValues, setExtraValues] = useState([]);\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n\n  const handleChange = (values) => {\n    setSelectedValues(values);\n  };\n\n  const handleSelect = () => {\n    const list = [];\n    extraValues.forEach((extraValue) => {\n      selectedValues.forEach((value) => {\n        if (extraValue.value === value) {\n          list.push(extraValue);\n        }\n      });\n    });\n    onSelect(extra?.value, list);\n    onClose();\n  };\n\n  function fetchExtra(id) {\n    setLoading(true);\n    extraService\n      .getGroupById(id)\n      .then((res) =>\n        setExtraValues(\n          res.data.extra_values.map((item) => ({\n            label: item.value,\n            value: item.id,\n          }))\n        )\n      )\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n  useEffect(() => {\n    if (!!extra?.value) {\n      fetchExtra(extra.value);\n      setSelectedValues(extra?.values?.map((value) => value.value) || []);\n    }\n  }, [extra?.value]);\n\n  console.log(extra)\n\n  return (\n    <>\n      <Modal\n        visible={!!extra}\n        onCancel={onClose}\n        footer={[\n          <Button onClick={onClose}>{t('cancel')}</Button>,\n          !loading && extraValues.length > 0 && (\n            <Button onClick={handleSelect} type='primary'>\n              {t('save')}\n            </Button>\n          ),\n        ]}\n      >\n        <Checkbox.Group\n          value={selectedValues}\n          onChange={handleChange}\n          className='w-100'\n        >\n          {extraValues?.length === 0 && !loading ? (\n            <Empty />\n          ) : (\n            <List\n              dataSource={extraValues}\n              loading={loading}\n              renderItem={(item) => (\n                <List.Item>\n                  <Checkbox value={item.value}>{item?.label}</Checkbox>\n                </List.Item>\n              )}\n            />\n          )}\n        </Checkbox.Group>\n        {!loading ? (\n          <Button\n            type='link'\n            onClick={() => setIsAddModalOpen(true)}\n            style={{ paddingLeft: 0 }}\n            icon={<PlusOutlined />}\n          >\n            {t('add.new.extra')}\n          </Button>\n        ) : null}\n      </Modal>\n      {extra && (\n        <ExtraValueModal\n          modal={isAddModalOpen}\n          handleCancel={() => setIsAddModalOpen(false)}\n          groupId={extra?.value}\n          onSuccess={() => fetchExtra(extra?.value)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ExtraValueSelectModal;\n","import React, { useState } from 'react';\nimport { Form, Button, Space, Card } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport productService from '../../services/product';\nimport { setMenuData } from '../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport ExtraSelectModal from './extra-select-modal';\nimport ExtraValueSelectModal from './extra-value-select-modal';\n\nconst ProductExtras = ({ next, prev, isRequest }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { uuid, id } = useParams();\n  const navigate = useNavigate();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [extraSelectModalOpen, setExtraSelectModalOpen] = useState(false);\n  const [selectedExtras, setSelectedExtras] = useState(\n    activeMenu.data?.extras || []\n  );\n  const [currentExtra, setCurrentExtra] = useState(null);\n  const [isChanged, setIsChanged] = useState(false);\n\n  const onFinish = () => {\n    if (\n      selectedExtras.some(\n        (selectedExtra) =>\n          selectedExtra.values?.length === 0 || !selectedExtra.values\n      )\n    ) {\n      toast.error(t('please.select.at.least.1.extra.value.for.each.extra'));\n      return;\n    }\n    const extras = selectedExtras.map((selectedExtra) => selectedExtra.value);\n    extras.sort((a, b) => a - b);\n    if (isRequest) {\n      dispatch(\n        setMenuData({\n          activeMenu,\n          data: { ...activeMenu.data, extras: selectedExtras },\n        })\n      );\n      navigate(`/product-request/${id}?step=2`, {\n        state: { generate: isChanged },\n      });\n      return;\n    }\n    setLoadingBtn(true);\n    productService\n      .extras(uuid, { extras })\n      .then(() => {\n        dispatch(\n          setMenuData({\n            activeMenu,\n            data: { ...activeMenu.data, extras: selectedExtras },\n          })\n        );\n        next();\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const handleDeleteSelectedExtra = (extra) => {\n    setIsChanged(true);\n    setSelectedExtras((oldExtras) =>\n      oldExtras.filter((oldExtra) => oldExtra.id !== extra.id)\n    );\n  };\n\n  const handleSelectExtraValue = (extraId, values) => {\n    setIsChanged(true);\n    setSelectedExtras((oldExtras) =>\n      oldExtras.map((oldExtra) => {\n        if (oldExtra.value === extraId) {\n          const tempValues = values.map((value) => {\n            const prevExtras = activeMenu.data?.extras\n              ?.flatMap((extra) => extra.values)\n              .find((extra) => extra.value === value.value);\n            return { ...value, stock_id: prevExtras?.stock_id };\n          });\n          return { ...oldExtra, values: tempValues };\n        }\n        return oldExtra;\n      })\n    );\n  };\n\n  const handleDeleteSelectedExtraValue = (extraId, value) => {\n    setIsChanged(true);\n    setSelectedExtras((oldExtras) => {\n      return oldExtras.map((oldExtra) => {\n        if (oldExtra.value === extraId) {\n          return {\n            ...oldExtra,\n            values:\n              oldExtra?.values.filter((oldValue) => oldValue.value !== value) ||\n              [],\n          };\n        }\n        return oldExtra;\n      });\n    });\n  };\n\n  return (\n    <Card>\n      <Form\n        layout='vertical'\n        initialValues={{ ...activeMenu.data }}\n        onFinish={onFinish}\n      >\n        <ExtraSelectModal\n          open={extraSelectModalOpen}\n          onClose={() => setExtraSelectModalOpen(false)}\n          selectedExtras={selectedExtras}\n          onSelect={(item) => {\n            setIsChanged(true);\n            setSelectedExtras((oldExtras) => [...oldExtras, item]);\n            setExtraSelectModalOpen(false);\n          }}\n        />\n        <ExtraValueSelectModal\n          extra={currentExtra}\n          onClose={() => setCurrentExtra(null)}\n          onSelect={handleSelectExtraValue}\n        />\n        <Space className='w-100' size='middle' direction='vertical'>\n          {selectedExtras.map((selectedExtra) => (\n            <Space\n              key={selectedExtra.id}\n              className='w-100'\n              direction='vertical'\n            >\n              <Space className='w-100' wrap>\n                <Button\n                  onClick={() => setCurrentExtra(selectedExtra)}\n                  ghost\n                  type='primary'\n                >\n                  {selectedExtra?.label}\n                </Button>\n                {selectedExtra?.values?.map((item) => (\n                  <div className='extra-value' key={item.value}>\n                    {item?.label}{' '}\n                    <button\n                      onClick={() =>\n                        handleDeleteSelectedExtraValue(\n                          selectedExtra.value,\n                          item.value\n                        )\n                      }\n                      type='button'\n                      className='extra-clear'\n                    >\n                      <IoCloseOutline />\n                    </button>\n                  </div>\n                ))}\n              </Space>\n              <Space className='w-100' style={{ justifyContent: 'flex-end' }}>\n                <Button\n                  danger\n                  onClick={() => handleDeleteSelectedExtra(selectedExtra)}\n                  type='text'\n                >\n                  {t('delete')}\n                </Button>\n              </Space>\n            </Space>\n          ))}\n        </Space>\n        <Button\n          onClick={() => setExtraSelectModalOpen(true)}\n          className='w-100 my-3'\n          type='dashed'\n        >\n          {t('add.extra')}\n        </Button>\n        <Space className='mt-3'>\n          <Button onClick={prev}>{t('prev')}</Button>\n          <Button type='primary' htmlType='submit' loading={loadingBtn}>\n            {t('next')}\n          </Button>\n        </Space>\n      </Form>\n    </Card>\n  );\n};\nexport default ProductExtras;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Collapse,\n  Descriptions,\n  Row,\n  Space,\n  Spin,\n} from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { removeFromMenu } from '../../redux/slices/menu';\nimport { fetchProducts } from '../../redux/slices/product';\nimport { useTranslation } from 'react-i18next';\nimport productService from '../../services/product';\nimport { IMG_URL } from '../../configs/app-global';\nimport { toast } from 'react-toastify';\nimport requestAdminModelsService from 'services/request-models';\n\nconst ProductFinish = ({ prev, isRequest }) => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { defaultLang, languages } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(null);\n  const { uuid } = useParams();\n  const [isButtonLoading, setButtonLoading] = useState(false);\n\n  function getLanguageFields(data) {\n    if (!data?.translations) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.description,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  function fetchProduct(uuid) {\n    setLoading(true);\n    productService\n      .getById(uuid)\n      .then((res) => {\n        const data = {\n          ...res.data,\n          ...getLanguageFields(res.data),\n          properties: res.data.properties.map((item, index) => ({\n            id: index,\n            [`key[${item.locale}]`]: item.key,\n            [`value[${item.locale}]`]: item.value,\n          })),\n          translation: undefined,\n          translations: undefined,\n        };\n        setData(data);\n      })\n      .finally(() => setLoading(false));\n  }\n\n  function finish() {\n    const body = {\n      status: undefined,\n    };\n    const nextUrl = 'catalog/products';\n    if (isRequest && activeMenu.data) {\n      setButtonLoading(true);\n      const requestBody = {\n        id: activeMenu.data.model_id,\n        type: 'product',\n        data: activeMenu.data,\n      };\n      requestAdminModelsService\n        .requestChangeUpdate(activeMenu.data.request_id, requestBody)\n        .then(() => {\n          navigate(`/${nextUrl}`, { state: { tab: 'request' } });\n          toast.success(t('successfully.updated'));\n          dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        })\n        .finally(() => {\n          setButtonLoading(false);\n        });\n      return;\n    }\n    dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n    dispatch(fetchProducts(body));\n    navigate(`/${nextUrl}`);\n  }\n\n  useEffect(() => {\n    if (!isRequest) {\n      fetchProduct(uuid);\n    }\n  }, [isRequest]);\n\n  const changedInfo = activeMenu.data;\n  const originalInfo = isRequest ? activeMenu.data.model : data;\n\n  return !loading ? (\n    <Card>\n      {isRequest && (\n        <>\n          <Descriptions bordered title={t('changed.info')}>\n            <Descriptions.Item\n              label={`${t('title')} (${defaultLang})`}\n              span={3}\n            >\n              {changedInfo[`title[${defaultLang}]`]}\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={`${t('description')} (${defaultLang})`}\n              span={3}\n            >\n              {changedInfo[`description[${defaultLang}]`]}\n            </Descriptions.Item>\n            <Descriptions.Item label={t('shop')} span={1.5}>\n              {changedInfo?.shop?.translation?.title}\n            </Descriptions.Item>\n            <Descriptions.Item label={t('category')} span={1.5}>\n              {changedInfo?.category?.label}\n            </Descriptions.Item>\n            <Descriptions.Item label={t('brand')} span={1.5}>\n              {changedInfo?.brand?.label}\n            </Descriptions.Item>\n            <Descriptions.Item label={t('unit')} span={1.5}>\n              {changedInfo?.unit?.label}\n            </Descriptions.Item>\n            <Descriptions.Item label={t('images')} span={3}>\n              <Row gutter={12}>\n                {changedInfo?.images?.map((item, idx) => (\n                  <Col key={'image' + idx}>\n                    <img width={80} alt='product' src={item.url} />\n                  </Col>\n                ))}\n              </Row>\n            </Descriptions.Item>\n            <Descriptions.Item label={t('tax')}>\n              {changedInfo?.tax || 0}\n            </Descriptions.Item>\n            <Descriptions.Item label={t('min.quantity')}>\n              {changedInfo?.min_qty}\n            </Descriptions.Item>\n            <Descriptions.Item label={t('max.quantity')}>\n              {changedInfo?.max_qty}\n            </Descriptions.Item>\n          </Descriptions>\n          <Collapse className='mt-4'>\n            <Collapse.Panel key='stocks' header={t('stocks')}>\n              {changedInfo?.stocks.map((item, idx) => {\n                if (!item) {\n                  return '';\n                }\n                return (\n                  <Descriptions key={'desc' + idx} bordered className='mt-4'>\n                    <Descriptions.Item label={t('price')} span={2}>\n                      {item.price}\n                    </Descriptions.Item>\n                    <Descriptions.Item label={t('quantity')} span={2}>\n                      {item.quantity}\n                    </Descriptions.Item>\n                    {item?.ids?.map((extra, idx) => (\n                      <Descriptions.Item\n                        key={'extra' + idx}\n                        label={changedInfo?.extras[idx].label}\n                      >\n                        {extra?.label}\n                      </Descriptions.Item>\n                    ))}\n                  </Descriptions>\n                );\n              })}\n            </Collapse.Panel>\n          </Collapse>\n        </>\n      )}\n      <Descriptions bordered className='mt-4' title={t('original.info')}>\n        <Descriptions.Item\n          label={`${t('title')} (${defaultLang})`}\n          span={3}\n          column={3}\n        >\n          {originalInfo.translation?.title ||\n            originalInfo[`title[${defaultLang}]`]}\n        </Descriptions.Item>\n        <Descriptions.Item\n          label={`${t('description')} (${defaultLang})`}\n          span={3}\n          column={3}\n        >\n          {originalInfo?.translation?.description ||\n            originalInfo[`description[${defaultLang}]`]}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('shop')} span={1.5} column={1.5}>\n          {originalInfo.shop?.translation?.title}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('category')} span={1.5} column={1.5}>\n          {originalInfo.category?.translation?.title}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('brand')} span={1.5} column={1.5}>\n          {originalInfo.brand?.title}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('unit')} span={1.5} column={1.5}>\n          {originalInfo.unit?.translation?.title}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('images')} span={3} column={3}>\n          <Row gutter={12}>\n            {originalInfo?.galleries?.map((item, idx) => (\n              <Col key={'image' + idx}>\n                <img width={80} alt='product' src={IMG_URL + item.path} />\n              </Col>\n            ))}\n          </Row>\n        </Descriptions.Item>\n        <Descriptions.Item span={3} column={3} label={t('tax')}>\n          {originalInfo.tax || 0}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} column={3} label={t('min.quantity')}>\n          {originalInfo.min_qty}\n        </Descriptions.Item>\n        <Descriptions.Item span={3} column={3} label={t('max.quantity')}>\n          {originalInfo.max_qty}\n        </Descriptions.Item>\n      </Descriptions>\n      <Collapse className='mt-4'>\n        <Collapse.Panel key='stocks' header={t('stocks')}>\n          {originalInfo.stocks?.map((item, idx) => {\n            if (!item) {\n              return '';\n            }\n            return (\n              <Descriptions key={'desc' + idx} bordered className='mt-4'>\n                <Descriptions.Item label={t('price')} span={2} column={2}>\n                  {item.price}\n                </Descriptions.Item>\n                <Descriptions.Item label={t('quantity')} span={2} column={2}>\n                  {item.quantity}\n                </Descriptions.Item>\n                {item.extras.map((extra, idx) => (\n                  <Descriptions.Item\n                    key={'extra' + idx}\n                    label={extra?.group?.translation?.title}\n                    span={2}\n                    column={2}\n                  >\n                    {extra?.value}\n                  </Descriptions.Item>\n                ))}\n              </Descriptions>\n            );\n          })}\n        </Collapse.Panel>\n      </Collapse>\n      <div className='d-flex justify-content-end mt-4'>\n        <Space>\n          <Button onClick={prev}>{t('prev')}</Button>\n          <Button loading={isButtonLoading} type='primary' onClick={finish}>\n            {t('finish')}\n          </Button>\n        </Space>\n      </div>\n    </Card>\n  ) : (\n    <div className='d-flex justify-content-center align-items-center'>\n      <Spin size='large' className='py-5' />\n    </div>\n  );\n};\n\nexport default ProductFinish;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Form, Input, InputNumber, Row, Switch } from 'antd';\nimport { DebounceSelect } from 'components/search';\nimport shopService from 'services/restaurant';\nimport brandService from 'services/brand';\nimport categoryService from 'services/category';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport productService from 'services/product';\nimport { addMenu, replaceMenu, setMenuData } from 'redux/slices/menu';\nimport unitService from 'services/unit';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport MediaUpload from 'components/upload';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { RefetchSearch } from 'components/refetch-search';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { AsyncTreeSelect } from 'components/async-tree-select-category';\nimport kitchenService from 'services/kitchen';\nimport { InfiniteSelect } from 'components/infinite-select';\n\nconst ProductsIndex = ({ next, action_type = '', isRequest }) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const shop = Form.useWatch('shop', form);\n  const dispatch = useDispatch();\n  const { uuid } = useParams();\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { defaultLang, languages } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n  const [fileList, setFileList] = useState(\n    activeMenu.data?.images ? activeMenu.data?.images : [],\n  );\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [nutrition, setNutrition] = useState(Boolean(activeMenu.data?.kcal));\n  const [hasMore, setHasMore] = useState({ kitchen: false });\n\n  useEffect(() => {\n    const data = form.getFieldsValue(true);\n    dispatch(\n      setMenuData({ activeMenu, data: { ...activeMenu.data, ...data } }),\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  async function fetchUserShopList(search) {\n    const params = {\n      search: search?.length ? search : undefined,\n      perPage: 20,\n      page: 1,\n      active: 1,\n    };\n    return shopService.get(params).then((res) =>\n      res.data.map((item) => ({\n        label: item?.translation?.title || item?.id || t('N/A'),\n        value: item?.id,\n        key: item?.id,\n      })),\n    );\n  }\n\n  async function fetchUserBrandList(search) {\n    const params = {\n      page: 1,\n      perPage: 20,\n      type: 'main',\n      search: search?.length ? search : undefined,\n      active: 1,\n    };\n    return brandService.getAll(params).then((res) =>\n      res.data.map((item) => ({\n        label: item?.title || item?.id || t('N/A'),\n        value: item?.id,\n        key: item?.id,\n      })),\n    );\n  }\n\n  async function fetchUserCategoryList(search) {\n    const params = {\n      page: 1,\n      perPage: 20,\n      type: 'main',\n      search: search?.length ? search : undefined,\n      shop_id: shop?.value,\n      'statuses[0]': 'pending',\n      'statuses[1]': 'published',\n      active: 1,\n    };\n    return categoryService.selectPaginate(params).then((res) => {\n      return res.data.map((item) => ({\n        label: item?.translation?.title || t('N/A'),\n        value: item?.id,\n        key: item?.id,\n        disabled: item?.children?.length > 0,\n        children: item?.children?.map((child) => ({\n          label: child?.translation?.title || t('N/A'),\n          value: child?.id,\n          key: child?.id,\n        })),\n      }));\n    });\n  }\n\n  const fetchKitchens = ({ search, page = 1 }) => {\n    const params = {\n      search: search?.length ? search : undefined,\n      page,\n      perPage: 20,\n      active: 1,\n      shop_id: shop?.value,\n    };\n    return kitchenService.getAll(params).then((res) => {\n      setHasMore({\n        ...hasMore,\n        kitchen: res?.meta?.current_page < res?.meta?.last_page,\n      });\n      return res?.data?.map((item) => ({\n        label: item?.translation?.title || item?.id || t('N/A'),\n        value: item?.id,\n        key: item?.id,\n      }));\n    });\n  };\n\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    const params = {\n      ...values,\n      active: Number(values.active),\n      vegetarian: Number(values.vegetarian),\n      brand_id: values.brand?.value,\n      category_id: values.category?.value || values.category,\n      shop_id: values.shop?.value,\n      kitchen_id: values?.kitchen?.value || undefined,\n      unit_id: values.unit?.value,\n      kcal: nutrition ? String(values.kcal) : undefined,\n      carbs: nutrition ? String(values.carbs) : undefined,\n      protein: nutrition ? String(values.protein) : undefined,\n      fats: nutrition ? String(values.fats) : undefined,\n      images: undefined,\n      brand: undefined,\n      category: undefined,\n      shop: undefined,\n      unit: undefined,\n      kitchen: undefined,\n      tax: values.tax || 0,\n      ...Object.assign(\n        {},\n        ...fileList.map((item, index) => ({\n          [`images[${index}]`]: item.name,\n        })),\n      ),\n    };\n\n    if (isRequest) {\n      dispatch(\n        setMenuData({\n          activeMenu,\n          data: {\n            ...activeMenu.data,\n            ...params,\n            images: fileList,\n            brand: values.brand,\n            category: values.category,\n            kitchen: values?.kitchen || undefined,\n            shop: values.shop,\n            unit: values.unit,\n            tax: values.tax || 0,\n            title: {\n              ...Object.assign(\n                {},\n                ...languages.map((lang) => ({\n                  [lang.locale]: values[`title[${lang.locale}]`],\n                })),\n              ),\n            },\n            description: {\n              ...Object.assign(\n                {},\n                ...languages.map((lang) => ({\n                  [lang.locale]: values[`description[${lang.locale}]`],\n                })),\n              ),\n            },\n          },\n        }),\n      );\n      next();\n      return;\n    }\n\n    if (action_type === 'edit') {\n      productUpdate(values, params);\n    } else {\n      productCreate(values, params);\n    }\n  };\n\n  function productCreate(values, params) {\n    productService\n      .create(params)\n      .then(({ data }) => {\n        dispatch(\n          replaceMenu({\n            id: `product-${data.uuid}`,\n            url: `product/${data.uuid}`,\n            name: t('add.product'),\n            data: values,\n            refetch: false,\n          }),\n        );\n        navigate(`/product/${data.uuid}/?step=1`);\n      })\n      .catch((err) => setError(err.response.data.params))\n      .finally(() => setLoadingBtn(false));\n  }\n\n  function productUpdate(values, params) {\n    productService\n      .update(uuid, params)\n      .then(() => {\n        dispatch(\n          setMenuData({\n            activeMenu,\n            data: { ...values, ...activeMenu?.data },\n          }),\n        );\n        next();\n      })\n      .catch((err) => setError(err.response.data.params))\n      .finally(() => setLoadingBtn(false));\n  }\n\n  function fetchUnits(search) {\n    const params = {\n      perPage: 20,\n      page: 1,\n      active: 1,\n      search: search?.length ? search : undefined,\n    };\n    return unitService.getAll(params).then(({ data }) => {\n      return data?.map((item) => ({\n        label: item?.translation?.title || item?.id || t('N/A'),\n        value: item?.id,\n        key: item?.id,\n      }));\n    });\n  }\n\n  const goToAddCategory = () => {\n    dispatch(\n      addMenu({\n        id: 'category-add',\n        url: 'category/add',\n        name: t('add.category'),\n      }),\n    );\n    navigate('/category/add');\n  };\n\n  return (\n    <Form\n      layout='vertical'\n      form={form}\n      initialValues={{ active: true, vegetarian: true, ...activeMenu.data }}\n      onFinish={onFinish}\n    >\n      <Row gutter={12}>\n        <Col span={16}>\n          <Row>\n            <Col span={24}>\n              <Card title={t('basic.info')}>\n                <Row>\n                  <Col span={24}>\n                    {languages.map((item) => (\n                      <Form.Item\n                        key={'name' + item.id}\n                        label={t('name')}\n                        name={`title[${item.locale}]`}\n                        rules={[\n                          {\n                            required: item?.locale === defaultLang,\n                            message: t('required'),\n                          },\n                          {\n                            type: 'string',\n                            min: 2,\n                            max: 200,\n                            message: t('min.2.max.200.chars'),\n                          },\n                        ]}\n                        hidden={item.locale !== defaultLang}\n                      >\n                        <Input />\n                      </Form.Item>\n                    ))}\n                  </Col>\n                  <Col span={24}>\n                    {languages.map((item) => (\n                      <Form.Item\n                        key={'description' + item.id}\n                        label={t('description')}\n                        name={`description[${item.locale}]`}\n                        rules={[\n                          {\n                            required: item?.locale === defaultLang,\n                            message: t('required'),\n                          },\n                          {\n                            type: 'string',\n                            min: 2,\n                            max: 200,\n                            message: t('min.2.max.200.chars'),\n                          },\n                        ]}\n                        hidden={item.locale !== defaultLang}\n                      >\n                        <TextArea rows={3} />\n                      </Form.Item>\n                    ))}\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card title={t('pricing')}>\n                <Row gutter={12}>\n                  <Col span={6}>\n                    <Form.Item\n                      label={t('min.qty')}\n                      name='min_qty'\n                      rules={[{ required: true, message: t('required') }]}\n                    >\n                      <InputNumber min={0} className='w-100' />\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      label={t('max.qty')}\n                      name='max_qty'\n                      rules={[{ required: true, message: t('required') }]}\n                    >\n                      <InputNumber min={0} className='w-100' />\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      label={t('tax')}\n                      name='tax'\n                      rules={[\n                        {\n                          validator(_, value) {\n                            if (value && (value < 0 || value > 100)) {\n                              return Promise.reject(\n                                new Error(t('must.be.between.0.and.100')),\n                              );\n                            }\n                            return Promise.resolve();\n                          },\n                        },\n                      ]}\n                    >\n                      <InputNumber className='w-100' addonAfter='%' />\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      label={t('add.quantity.per.click')}\n                      name='interval'\n                      rules={[\n                        { required: true, message: t('required') },\n                        {\n                          type: 'number',\n                          min: 0,\n                          message: t('must.be.positive'),\n                        },\n                      ]}\n                      help={error?.interval ? error.interval[0] : null}\n                      validateStatus={error?.interval ? 'error' : 'success'}\n                    >\n                      <InputNumber className='w-100' />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card title={t('additions')}>\n                <Row gutter={12}>\n                  <Col span={6}>\n                    <Form.Item\n                      label={t('active')}\n                      name='active'\n                      valuePropName='checked'\n                    >\n                      <Switch />\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      label={t('vegetarian')}\n                      name='vegetarian'\n                      valuePropName='checked'\n                    >\n                      <Switch />\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      label={t(`nutrition.${nutrition ? 'on' : 'off'}`)}\n                      valuePropName='checked'\n                    >\n                      <Switch\n                        checked={nutrition}\n                        onChange={(e) => setNutrition(e)}\n                      />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n            {nutrition && (\n              <Col span={24}>\n                <Card title={t('nutritional.value.of.product')}>\n                  <Row gutter={12}>\n                    <Col span={6}>\n                      <Form.Item\n                        rules={[{ required: true, message: t('required') }]}\n                        label={t('kcal')}\n                        name='kcal'\n                      >\n                        <InputNumber min={0} className='w-100' />\n                      </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                      <Form.Item\n                        rules={[{ required: true, message: t('required') }]}\n                        label={t('carbs')}\n                        name='carbs'\n                      >\n                        <InputNumber min={0} className='w-100' />\n                      </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                      <Form.Item\n                        rules={[{ required: true, message: t('required') }]}\n                        label={t('protein')}\n                        name='protein'\n                      >\n                        <InputNumber min={0} className='w-100' />\n                      </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                      <Form.Item\n                        rules={[{ required: true, message: t('required') }]}\n                        label={t('fats')}\n                        name='fats'\n                      >\n                        <InputNumber min={0} className='w-100' />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            )}\n          </Row>\n        </Col>\n        <Col span={8}>\n          <Row>\n            <Col span={24}>\n              <Card title={t('organization')}>\n                <Row>\n                  {!isRequest && (\n                    <Col span={24}>\n                      <Form.Item\n                        label={t('shop/restaurant')}\n                        name='shop'\n                        rules={[{ required: true, message: t('required') }]}\n                      >\n                        <RefetchSearch\n                          fetchOptions={fetchUserShopList}\n                          onChange={() => {\n                            form.setFieldsValue({\n                              category: undefined,\n                              kitchen: undefined,\n                            });\n                          }}\n                        />\n                      </Form.Item>\n                    </Col>\n                  )}\n                  <Col span={24}>\n                    <Form.Item\n                      label={t('category')}\n                      name='category'\n                      rules={[{ required: true, message: t('required') }]}\n                    >\n                      <AsyncTreeSelect\n                        disabled={!shop?.value}\n                        refetch\n                        fetchOptions={fetchUserCategoryList}\n                        dropdownRender={(menu) => (\n                          <>\n                            {menu}\n                            <div className='p-1'>\n                              <Button\n                                icon={<PlusOutlined />}\n                                className='w-100'\n                                onClick={goToAddCategory}\n                              >\n                                {t('add.category')}\n                              </Button>\n                            </div>\n                          </>\n                        )}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                    <Form.Item label={t('kitchen')} name='kitchen'>\n                      <InfiniteSelect\n                        allowClear={false}\n                        fetchOptions={fetchKitchens}\n                        hasMore={hasMore.kitchen}\n                        disabled={!shop?.value}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                    <Form.Item label={t('brand')} name='brand'>\n                      <DebounceSelect fetchOptions={fetchUserBrandList} />\n                    </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                    <Form.Item\n                      label={t('unit')}\n                      name='unit'\n                      rules={[{ required: true, message: t('required') }]}\n                    >\n                      <DebounceSelect fetchOptions={fetchUnits} />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card title={t('media')}>\n                <Row>\n                  <Col span={24}>\n                    <Form.Item\n                      name='images'\n                      rules={[\n                        {\n                          required: !fileList?.length,\n                          message: t('required'),\n                        },\n                      ]}\n                    >\n                      <MediaUpload\n                        type='products'\n                        imageList={fileList}\n                        setImageList={setFileList}\n                        form={form}\n                        multiple={true}\n                      />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      <Button type='primary' htmlType='submit' loading={loadingBtn}>\n        {t('next')}\n      </Button>\n    </Form>\n  );\n};\n\nexport default ProductsIndex;\n","import { Button, Card, Space, Table } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport DeleteButton from 'components/delete-button';\n\nconst PropertyList = ({\n  properties,\n  editSelectedProperty,\n  deleteProperty,\n  loading = false,\n}) => {\n  const { t } = useTranslation();\n\n  const columns = [\n    {\n      title: t('key'),\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: t('value'),\n      dataIndex: 'value',\n      key: 'value',\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => editSelectedProperty(row)}\n            />\n            <DeleteButton\n              type='primary'\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => deleteProperty(row?.id)}\n            />\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Card loading={loading}>\n      <Table dataSource={properties} columns={columns} pagination={false} />\n    </Card>\n  );\n};\n\nexport default PropertyList;\n","import { Button, Card, Col, Form, Input, Row } from 'antd';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { generateShortUUID } from 'helpers/generateShortUUID';\n\nconst PropertyForm = ({ addNewProperty, loading = false }) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const { defaultLang, languages } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n\n  const onFinish = (values) => {\n    const newFirstLocaleProperty = {\n      key: values?.[`key[${defaultLang}]`],\n      value: values?.[`value[${defaultLang}]`],\n    };\n    const newProperty = languages.map((lang) => {\n      return {\n        id: generateShortUUID(),\n        locale: lang?.locale,\n        key: values?.[`key[${lang?.locale}]`] || newFirstLocaleProperty?.key,\n        value:\n          values?.[`value[${lang.locale}]`] || newFirstLocaleProperty?.value,\n      };\n    });\n    addNewProperty(newProperty);\n    form.resetFields();\n  };\n\n  return (\n    <Card loading={loading}>\n      <Form form={form} layout='vertical' onFinish={onFinish}>\n        <Row gutter={12}>\n          <Col span={8}>\n            {languages.map((item) => (\n              <Form.Item\n                label={t('key')}\n                name={`key[${item?.locale || 'en'}]`}\n                key={item?.locale}\n                hidden={item?.locale !== defaultLang}\n                rules={[\n                  {\n                    required: item?.locale === defaultLang,\n                    message: t('required'),\n                  },\n                  {\n                    type: 'string',\n                    min: 2,\n                    max: 200,\n                    message: t('min.2.max.200.chars'),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ))}\n          </Col>\n          <Col span={8}>\n            {languages.map((item) => (\n              <Form.Item\n                label={t('value')}\n                name={`value[${item?.locale || 'en'}]`}\n                key={item?.locale}\n                hidden={item?.locale !== defaultLang}\n                rules={[\n                  {\n                    required: item?.locale === defaultLang,\n                    message: t('required'),\n                  },\n                  {\n                    type: 'string',\n                    min: 2,\n                    max: 200,\n                    message: t('min.2.max.200.chars'),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ))}\n          </Col>\n          <Col>\n            <Form.Item label=' '>\n              <Button type='primary' htmlType='submit'>\n                {t('add')}\n              </Button>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Card>\n  );\n};\n\nexport default PropertyForm;\n","import { Button, Card, Col, Form, Input, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst PropertyEdit = ({ property, editProperty }) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    editProperty({ ...property, ...values });\n  };\n\n  return (\n    <Card>\n      <Form\n        form={form}\n        layout='vertical'\n        onFinish={onFinish}\n        initialValues={{\n          key: property?.key,\n          value: property?.value,\n        }}\n      >\n        <Row gutter={12}>\n          <Col span={24}>\n            <Form.Item\n              label={t('key')}\n              name='key'\n              rules={[\n                {\n                  required: true,\n                  message: t('required'),\n                },\n                {\n                  type: 'string',\n                  min: 2,\n                  max: 200,\n                  message: t('min.2.max.200.chars'),\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col span={24}>\n            <Form.Item\n              label={t('value')}\n              name='value'\n              rules={[\n                {\n                  required: true,\n                  message: t('required'),\n                },\n                {\n                  type: 'string',\n                  min: 2,\n                  max: 200,\n                  message: t('min.2.max.200.chars'),\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col span={24}>\n            <Button type='primary' htmlType='submit' className='w-100'>\n              {t('edit')}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Card>\n  );\n};\n\nexport default PropertyEdit;\n","import { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { generateShortUUID } from 'helpers/generateShortUUID';\nimport { Button, Card, Modal, Space } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport productService from 'services/product';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\nimport { setMenuData } from 'redux/slices/menu';\nimport PropertyList from './components/list';\nimport PropertyCreate from './components/form/create';\nimport PropertyEdit from './components/form/edit';\n\nconst Property = ({ prev, next, isRequest = false }) => {\n  const { t } = useTranslation();\n  const { uuid } = useParams();\n  const dispatch = useDispatch();\n\n  const { defaultLang } = useSelector((state) => state.formLang, shallowEqual);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const [dataSource, setDataSource] = useState(\n    isRequest ? activeMenu.data?.properties || [] : [],\n  );\n  const [editSelectedProperty, setEditSelectedProperty] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  useEffect(() => {\n    if (!isRequest) {\n      fetchProduct(uuid);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const fetchProduct = (uuid) => {\n    setLoading(true);\n    productService\n      .getById(uuid)\n      .then((res) => {\n        setDataSource(\n          res?.data?.properties?.map((item) => ({\n            ...item,\n            id: generateShortUUID(),\n          })),\n        );\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleAddNewProperty = (body) => {\n    setDataSource([...dataSource, ...body]);\n  };\n\n  const handleEditProperty = (body) => {\n    setDataSource((prevDataSource) =>\n      prevDataSource.map((item) => {\n        if (item.id === body.id) {\n          return body;\n        }\n        return item;\n      }),\n    );\n    setEditSelectedProperty(null);\n  };\n\n  const handleDeleteProperty = (id) => {\n    Modal.confirm({\n      title: t('are.you.sure?'),\n      okText: t('yes'),\n      onOk: () => {\n        setDataSource((prevDataSource) =>\n          prevDataSource.filter((item) => item.id !== id),\n        );\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    const body = {\n      key: [],\n      value: [],\n    };\n    dataSource?.map((dataItem) => {\n      body.key.push({ [dataItem?.locale]: dataItem?.key });\n      body.value.push({ [dataItem?.locale]: dataItem?.value });\n    });\n    if (isRequest) {\n      dispatch(\n        setMenuData({\n          activeMenu,\n          data: { ...activeMenu.data, properties: dataSource, props: body },\n        }),\n      );\n      next();\n      return;\n    }\n    setLoadingBtn(true);\n    productService\n      .properties(uuid, body)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        next();\n      })\n      .finally(() => {\n        setLoadingBtn(false);\n      });\n  };\n\n  return (\n    <>\n      <PropertyCreate loading={loading} addNewProperty={handleAddNewProperty} />\n      <PropertyList\n        loading={loading}\n        properties={dataSource?.filter((item) => item?.locale === defaultLang)}\n        editSelectedProperty={setEditSelectedProperty}\n        deleteProperty={handleDeleteProperty}\n      />\n      <Card>\n        <Space>\n          <Button onClick={prev} disabled={loading}>\n            {t('prev')}\n          </Button>\n          <Button\n            type='primary'\n            onClick={handleSubmit}\n            disabled={loading}\n            loading={loadingBtn}\n          >\n            {t('next')}\n          </Button>\n        </Space>\n      </Card>\n      {!!editSelectedProperty && (\n        <Modal\n          visible={!!editSelectedProperty}\n          onCancel={() => {\n            setEditSelectedProperty(null);\n          }}\n          footer={false}\n        >\n          <PropertyEdit\n            property={editSelectedProperty}\n            editProperty={handleEditProperty}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Property;\n","export const steps = [\n  {\n    title: 'product',\n    content: 'First-content',\n  },\n  {\n    title: 'product.extras',\n    content: 'Second-content',\n  },\n  {\n    title: 'stocks',\n    content: 'Third-content',\n  },\n  // {\n  //   title: 'product.property',\n  //   content: 'Fourth-content',\n  // },\n  {\n    title: 'finish',\n    content: 'Finish-content',\n  },\n];\n"],"names":["RefetchSearch","_ref","fetchOptions","debounceTimeout","refetch","props","fetching","setFetching","useState","options","setOptions","debounceFetcher","useMemo","debounce","value","then","newOptions","_jsx","Select","showSearch","allowClear","labelInValue","onClear","filterOption","onSearch","notFoundContent","Spin","size","onFocus","fetchOnFocus","getAll","params","request","ExtraGroupModal","modal","handleCancel","onSuccess","form","Form","t","useTranslation","dispatch","useDispatch","loadingBtn","setLoadingBtn","loading","setLoading","languages","defaultLang","useSelector","state","formLang","shallowEqual","useEffect","id","extraService","res","data","setFieldsValue","getLanguageFields","finally","translations","result","map","item","_translations$find","locale","find","el","title","Object","assign","Modal","visible","onCancel","footer","Button","type","onClick","submit","children","Loading","_jsxs","_Fragment","className","LanguageList","layout","name","onFinish","values","body","getTranslationFields","toast","fetchExtraGroups","updateExtraGroup","createExtraGroup","rules","required","message","label","hidden","Input","placeholder","ExtraValueModal","groupId","setType","image","setImage","color","setColor","extraGroups","extraGroup","_modal$group","_modal$group$translat","_modal$group2","group","extra_group_id","translation","createImage","getValue","hex","_values$extra_group_i","console","log","updateExtra","fetchExtraValues","createExtra","DebounceSelect","async","search","perPage","active","_res$data","_item$translation","key","SketchPicker","onChangeComplete","disableAlpha","ImageUploadSingle","renderExtraValue","open","onClose","selectedExtras","onSelect","extrasGroup","setExtrasGroup","isAddModalOpen","setIsAddModalOpen","setSearch","debouncedSearch","useDebounce","meta","setMeta","getExtraGroup","query","page","arguments","length","undefined","valid","shop_id","style","paddingLeft","icon","PlusOutlined","onChange","e","target","List","dataSource","filter","extraItem","some","selectedExtra","renderItem","extra","Tag","cursor","Pagination","current","current_page","total","extraValues","setExtraValues","selectedValues","setSelectedValues","fetchExtra","extra_values","_extra$values","handleSelect","list","forEach","extraValue","push","Checkbox","Empty","_activeMenu$data","next","prev","isRequest","uuid","useParams","navigate","useNavigate","activeMenu","menu","extraSelectModalOpen","setExtraSelectModalOpen","setSelectedExtras","extras","currentExtra","setCurrentExtra","isChanged","setIsChanged","Card","initialValues","_selectedExtra$values","sort","a","b","setMenuData","generate","productService","ExtraSelectModal","oldExtras","ExtraValueSelectModal","handleSelectExtraValue","extraId","oldExtra","tempValues","_activeMenu$data2","_activeMenu$data2$ext","prevExtras","flatMap","stock_id","Space","direction","_selectedExtra$values2","wrap","ghost","handleDeleteSelectedExtraValue","oldValue","IoCloseOutline","justifyContent","danger","handleDeleteSelectedExtra","htmlType","_changedInfo$shop","_changedInfo$shop$tra","_changedInfo$category","_changedInfo$brand","_changedInfo$unit","_changedInfo$images","_originalInfo$transla","_originalInfo$transla2","_originalInfo$shop","_originalInfo$shop$tr","_originalInfo$categor","_originalInfo$categor2","_originalInfo$brand","_originalInfo$unit","_originalInfo$unit$tr","_originalInfo$galleri","_originalInfo$stocks","setData","isButtonLoading","setButtonLoading","_translations$find2","description","properties","index","fetchProduct","changedInfo","originalInfo","model","Descriptions","bordered","span","shop","category","brand","unit","Row","gutter","images","idx","Col","width","alt","src","url","tax","min_qty","max_qty","Collapse","header","stocks","_item$ids","price","quantity","ids","column","galleries","IMG_URL","path","_extra$group","_extra$group$translat","status","nextUrl","requestBody","model_id","requestAdminModelsService","request_id","tab","removeFromMenu","fetchProducts","_activeMenu$data3","action_type","error","setError","fileList","setFileList","nutrition","setNutrition","Boolean","kcal","hasMore","setHasMore","kitchen","getFieldsValue","goToAddCategory","addMenu","vegetarian","_values$brand","_values$category","_values$shop","_values$kitchen","_values$unit","Number","brand_id","category_id","kitchen_id","unit_id","String","carbs","protein","fats","lang","catch","err","response","productUpdate","_ref3","replaceMenu","productCreate","min","max","TextArea","rows","InputNumber","validator","_","Promise","reject","Error","resolve","addonAfter","help","interval","validateStatus","valuePropName","Switch","checked","shopService","AsyncTreeSelect","disabled","categoryService","_item$translation2","_item$children","_item$children2","child","_child$translation","dropdownRender","InfiniteSelect","_ref2","kitchenService","_res$meta","_res$meta2","last_page","_item$translation3","brandService","unitService","_ref4","_item$translation4","MediaUpload","imageList","setImageList","multiple","editSelectedProperty","deleteProperty","columns","dataIndex","render","row","EditOutlined","DeleteButton","DeleteOutlined","Table","pagination","addNewProperty","newFirstLocaleProperty","newProperty","generateShortUUID","resetFields","property","editProperty","setDataSource","setEditSelectedProperty","_res$data$properties","PropertyCreate","PropertyList","okText","onOk","prevDataSource","handleSubmit","dataItem","PropertyEdit","steps","content"],"sourceRoot":""}