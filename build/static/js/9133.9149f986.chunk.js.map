{"version":3,"file":"static/js/9133.9149f986.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","components/result-modal.js","views/banners/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React from 'react';\nimport { Button, Modal, Result } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst ResultModal = ({\n  open,\n  handleCancel,\n  text,\n  click,\n  loading,\n  subTitle,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal closable={false} visible={open} footer={null} centered>\n      <Result status='warning' title={text} subTitle={subTitle} />\n      <div className='d-flex justify-content-end'>\n        <Button\n          type='primary'\n          className='mr-2'\n          onClick={click}\n          loading={loading}\n        >\n          {t('yes')}\n        </Button>\n        <Button onClick={() => handleCancel()}>{t('no')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ResultModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Card, Image, Space, Switch, Table, Tabs } from 'antd';\nimport { IMG_URL } from '../../configs/app-global';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { addMenu, disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport bannerService from '../../services/banner';\nimport { fetchBanners } from '../../redux/slices/banner';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport DeleteButton from '../../components/delete-button';\nimport FilterColumns from '../../components/filter-column';\nimport ResultModal from '../../components/result-modal';\nimport { FaTrashRestoreAlt } from 'react-icons/fa';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport moment from 'moment';\n\nconst roles = ['published', 'deleted_at'];\nconst { TabPane } = Tabs;\n\nconst Banners = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [restore, setRestore] = useState(null);\n  const { setIsModalVisible } = useContext(Context);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [activeId, setActiveId] = useState(null);\n  const [type, setType] = useState(null);\n  const { banners, meta, loading } = useSelector(\n    (state) => state.banner,\n    shallowEqual,\n  );\n  const [id, setId] = useState(null);\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n    },\n    {\n      title: t('image'),\n      dataIndex: 'img',\n      key: 'img',\n      is_show: true,\n      render: (img, row) => {\n        return (\n          <Image\n            src={!row.deleted_at ? IMG_URL + img : 'https://fakeimg.pl/640x360'}\n            alt='img_gallery'\n            width={100}\n            className='rounded'\n            preview\n            placeholder\n          />\n        );\n      },\n    },\n    {\n      title: t('title'),\n      dataIndex: 'title',\n      key: 'title',\n      is_show: true,\n      render: (_, row) => row?.translation?.title,\n    },\n    {\n      title: t('active'),\n      dataIndex: 'active',\n      key: 'active',\n      is_show: true,\n      render: (active, row) => {\n        return (\n          <Switch\n            disabled={row.deleted_at}\n            key={row.id + active}\n            onChange={() => {\n              setIsModalVisible(true);\n              setActiveId(row.id);\n              setType(true);\n            }}\n            checked={active}\n          />\n        );\n      },\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (_, row) => moment(row?.created_at).format('DD.MM.YYYY HH:mm'),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => (\n        <Space>\n          <Button\n            type='primary'\n            icon={<EditOutlined />}\n            onClick={() => goToEdit(row)}\n            disabled={row.deleted_at}\n          />\n          <Button\n            icon={<CopyOutlined />}\n            onClick={() => goToClone(row)}\n            disabled={row.deleted_at}\n          />\n          <DeleteButton\n            disabled={row.deleted_at}\n            icon={<DeleteOutlined />}\n            onClick={() => {\n              setIsModalVisible(true);\n              setId([row.id]);\n              setType(false);\n            }}\n          />\n        </Space>\n      ),\n    },\n  ]);\n\n  const goToAddBanners = () => {\n    dispatch(\n      addMenu({\n        id: 'banner/add',\n        url: 'banner/add',\n        name: t('add.banner'),\n      }),\n    );\n    navigate('/banner/add');\n  };\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `banner/${row.id}`,\n        id: 'banner_edit',\n        name: t('edit.banner'),\n      }),\n    );\n    navigate(`/banner/${row.id}`);\n  };\n\n  const goToClone = (row) => {\n    dispatch(\n      addMenu({\n        url: `banner/clone/${row.id}`,\n        id: 'banner_clone',\n        name: t('clone.banner'),\n      }),\n    );\n    navigate(`/banner/clone/${row.id}`);\n  };\n\n  const bannerDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        })),\n      ),\n    };\n    bannerService\n      .delete(params)\n      .then(() => {\n        dispatch(fetchBanners());\n        toast.success(t('successfully.deleted'));\n        setIsModalVisible(false);\n      })\n      .finally(() => {\n        setLoadingBtn(false);\n      });\n  };\n\n  const bannerRestoreAll = () => {\n    setLoadingBtn(true);\n    bannerService\n      .restoreAll()\n      .then(() => {\n        dispatch(fetchBanners());\n        toast.success(t('successfully.deleted'));\n      })\n      .finally(() => {\n        setRestore(null);\n        setLoadingBtn(false);\n      });\n  };\n\n  const bannerDropAll = () => {\n    setLoadingBtn(true);\n    bannerService\n      .dropAll()\n      .then(() => {\n        dispatch(fetchBanners());\n        toast.success(t('successfully.deleted'));\n      })\n      .finally(() => {\n        setRestore(null);\n        setLoadingBtn(false);\n      });\n  };\n\n  useDidUpdate(() => {\n    const data = activeMenu.data;\n    const paramsData = {\n      status: data?.role === 'deleted_at' ? null : data?.role || 'published',\n      deleted_at: data?.role === 'deleted_at' ? data?.role : null,\n    };\n    dispatch(fetchBanners(paramsData));\n  }, [activeMenu.data]);\n\n  useEffect(() => {\n    const data = activeMenu.data;\n    const paramsData = {\n      status: data?.role === 'deleted_at' ? null : data?.role || 'published',\n      deleted_at: data?.role === 'deleted_at' ? data?.role : null,\n    };\n    if (activeMenu.refetch) {\n      dispatch(fetchBanners(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  const onChangePagination = (pageNumber) => {\n    const { pageSize, current } = pageNumber;\n    dispatch(fetchBanners({ perPage: pageSize, page: current }));\n  };\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n    }\n  };\n\n  const handleActive = () => {\n    setLoadingBtn(true);\n    bannerService\n      .setActive(activeId)\n      .then(() => {\n        setIsModalVisible(false);\n        dispatch(fetchBanners());\n        toast.success(t('successfully.updated'));\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const handleFilter = (item, name) => {\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, [name]: item },\n      }),\n    );\n  };\n\n  return (\n    <Card\n      title={t('banners')}\n      navLInkTo={''}\n      extra={\n        <Space wrap>\n          <Button\n            type='primary'\n            icon={<PlusCircleOutlined />}\n            onClick={goToAddBanners}\n          >\n            {t('add.banner')}\n          </Button>\n\n          {activeMenu.data?.role === 'published' ? (\n            <DeleteButton size='' onClick={() => setRestore({ delete: true })}>\n              {t('delete.all')}\n            </DeleteButton>\n          ) : (\n            <DeleteButton\n              size=''\n              icon={<FaTrashRestoreAlt className='mr-2' />}\n              onClick={() => setRestore({ restore: true })}\n            >\n              {t('restore.all')}\n            </DeleteButton>\n          )}\n\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n\n          <FilterColumns setColumns={setColumns} columns={columns} />\n        </Space>\n      }\n    >\n      <Tabs\n        className='mt-3'\n        activeKey={activeMenu.data?.role || 'published'}\n        onChange={(key) => {\n          handleFilter(key, 'role');\n        }}\n        type='card'\n      >\n        {roles.map((item) => (\n          <TabPane tab={t(item)} key={item} />\n        ))}\n      </Tabs>\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={banners}\n        pagination={{\n          pageSize: meta.per_page,\n          page: meta.current_page,\n          total: meta.total,\n        }}\n        rowKey={(record) => record.id}\n        loading={loading}\n        onChange={onChangePagination}\n      />\n      <CustomModal\n        click={type ? handleActive : bannerDelete}\n        text={type ? t('set.active.banner') : t('delete.banner')}\n        loading={loadingBtn}\n        setText={setId}\n      />\n      {restore && (\n        <ResultModal\n          open={restore}\n          handleCancel={() => setRestore(null)}\n          click={restore.restore ? bannerRestoreAll : bannerDropAll}\n          text={restore.restore ? t('restore.modal.text') : t('read.carefully')}\n          subTitle={restore.restore ? '' : t('confirm.deletion')}\n          loading={loadingBtn}\n          setText={setId}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default Banners;\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","handleCancel","text","click","loading","subTitle","Modal","closable","footer","centered","Result","status","roles","TabPane","Tabs","Banners","_activeMenu$data","_activeMenu$data2","dispatch","useDispatch","navigate","useNavigate","restore","setRestore","setIsModalVisible","useContext","Context","loadingBtn","setLoadingBtn","activeMenu","useSelector","state","shallowEqual","activeId","setActiveId","setType","banners","meta","banner","id","setId","render","img","row","Image","src","deleted_at","IMG_URL","alt","width","preview","placeholder","_","_row$translation","translation","active","moment","created_at","format","EditOutlined","goToEdit","CopyOutlined","goToClone","addMenu","url","name","useDidUpdate","data","paramsData","role","fetchBanners","useEffect","refetch","disableRefetch","rowSelection","selectedRowKeys","Card","navLInkTo","extra","wrap","PlusCircleOutlined","goToAddBanners","delete","FaTrashRestoreAlt","allDelete","length","FilterColumns","activeKey","handleFilter","setMenuData","tab","Table","scroll","x","filter","dataSource","pagination","pageSize","per_page","page","current_page","total","rowKey","record","pageNumber","current","perPage","CustomModal","handleActive","bannerService","then","finally","bannerDelete","params","Object","assign","index","setText","ResultModal","bannerRestoreAll","bannerDropAll","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}