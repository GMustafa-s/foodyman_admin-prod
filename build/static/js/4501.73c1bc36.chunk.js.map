{"version":3,"file":"static/js/4501.73c1bc36.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","components/search-input.js","views/advert/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport default function SearchInput({\n  handleChange,\n  defaultValue,\n  resetSearch,\n  ...props\n}) {\n  const [searchTerm, setSearchTerm] = useState(defaultValue);\n\n  const debounceSearch = useMemo(() => {\n    const loadOptions = (value) => {\n      handleChange(value);\n    };\n    return debounce(loadOptions, 800);\n  }, [handleChange]);\n\n  useEffect(() => {\n    setSearchTerm(defaultValue);\n  }, [resetSearch, defaultValue]);\n\n  return (\n    <Input\n      value={searchTerm}\n      onChange={(event) => {\n        setSearchTerm(event.target.value);\n        debounceSearch(event.target.value);\n      }}\n      prefix={<SearchOutlined />}\n      {...props}\n    />\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Button, Table, Card, Space, Switch } from 'antd';\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport advertService from 'services/advert';\nimport { fetchAdverts } from 'redux/slices/advert';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport SearchInput from 'components/search-input';\nimport DeleteButton from '../../components/delete-button';\nimport { useNavigate } from 'react-router-dom';\nimport CustomModal from 'components/modal';\nimport { Context } from '../../context/context';\nimport { toast } from 'react-toastify';\nimport FilterColumns from 'components/filter-column';\nimport { addMenu, disableRefetch, setMenuData } from 'redux/slices/menu';\nimport useDidUpdate from 'helpers/useDidUpdate';\n\nexport default function Advert() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const {\n    advertList,\n    loading: listLoading,\n    meta,\n  } = useSelector((state) => state.advert, shallowEqual);\n\n  const [id, setId] = useState(null);\n  const [text, setText] = useState(null);\n  const [search, setSearch] = useState('');\n  const [active, setActive] = useState(null);\n  const { setIsModalVisible } = useContext(Context);\n  const [loading, setLoading] = useState(false);\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      is_show: true,\n      sorter: (a, b) => a.id - b.id,\n    },\n    {\n      title: t('title'),\n      dataIndex: 'title',\n      is_show: true,\n      render: (_, row) => {\n        return <span>{row?.translation?.title}</span>;\n      },\n    },\n    {\n      title: t('price'),\n      dataIndex: 'price',\n      is_show: true,\n    },\n\n    {\n      title: t('time'),\n      dataIndex: 'time',\n      is_show: true,\n    },\n    {\n      title: t('time.type'),\n      dataIndex: 'time_type',\n      is_show: true,\n    },\n    {\n      title: t('active'),\n      dataIndex: 'active',\n      is_show: true,\n      render: (active, row) => {\n        return (\n          <Switch\n            onChange={() => {\n              setIsModalVisible(true);\n              setId(row.id);\n              setActive(true);\n            }}\n            disabled={row.deleted_at}\n            checked={active}\n          />\n        );\n      },\n    },\n    {\n      title: t('options'),\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => goToEdit(row)}\n              disabled={row.deleted_at}\n            />\n            <DeleteButton\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setIsModalVisible(true);\n                setId([row.id]);\n                setText(true);\n                setActive(false);\n              }}\n              disabled={row.deleted_at}\n            />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const paramsData = {\n    perPage: 10,\n    page: 1,\n  };\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `advert/${row.id}`,\n        id: 'ad_edit',\n        name: t('edit.ad'),\n      })\n    );\n    navigate(`/advert/${row.id}`);\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchAdverts(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    const data = activeMenu.data;\n    const paramsData = {\n      deleted_at: data?.role === 'deleted_at' ? data?.role : null,\n      search,\n    };\n    dispatch(fetchAdverts(paramsData));\n  }, [activeMenu.data, search]);\n\n  const clearData = () => {\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: null,\n      })\n    );\n  };\n\n  const advertDelete = () => {\n    setLoading(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n\n    advertService\n      .delete(params)\n      .then(() => {\n        setIsModalVisible(false);\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchAdverts(paramsData));\n        setText(null);\n        setActive(false);\n      })\n      .finally(() => {\n        setLoading(false);\n        setId(null);\n      });\n  };\n\n  const goToAddAdvert = () => {\n    dispatch(\n      addMenu({\n        id: 'advert-add',\n        url: 'advert/add',\n        name: t('add.advert'),\n      })\n    );\n    clearData();\n    navigate('/advert/add');\n  };\n\n  const handleActive = () => {\n    setLoading(true);\n    advertService\n      .setActive(id)\n      .then(() => {\n        setIsModalVisible(false);\n        dispatch(fetchAdverts(paramsData));\n        toast.success(t('successfully.updated'));\n        setActive(false);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const onChangePagination = (pageNumber) => {\n    const { pageSize, current } = pageNumber;\n    dispatch(fetchAdverts({ perPage: pageSize, page: current }));\n  };\n\n  return (\n    <>\n      <Card className='p-o'>\n        <div className='flex justify-content-between'>\n          <SearchInput\n            style={{ maxWidth: '200px' }}\n            handleChange={(value) => setSearch(value)}\n            placeholder={t('search')}\n          />\n          <div className='flex gap-3'>\n            <FilterColumns columns={columns} setColumns={setColumns} />\n            <Button\n              icon={<PlusCircleOutlined />}\n              type='primary'\n              className='ml-3'\n              onClick={goToAddAdvert}\n            >\n              {t('add.advert')}\n            </Button>\n          </div>\n        </div>\n      </Card>\n      <Card>\n        <Table\n          scroll={{ x: true }}\n          dataSource={advertList}\n          columns={columns?.filter((item) => item.is_show)}\n          rowKey={(record) => record.id}\n          loading={loading || listLoading}\n          pagination={{\n            pageSize: meta.per_page,\n            page: meta.current_page,\n            total: meta.total,\n          }}\n          onChange={onChangePagination}\n        />\n      </Card>\n      <CustomModal\n        click={active ? handleActive : advertDelete}\n        text={\n          active ? t('set.active.advert') : text ? t('delete') : t('all.delete')\n        }\n        setText={setId}\n        setActive={setActive}\n      />\n    </>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","SearchInput","handleChange","defaultValue","resetSearch","searchTerm","setSearchTerm","debounceSearch","useMemo","debounce","value","useEffect","Input","event","target","prefix","SearchOutlined","Advert","dispatch","useDispatch","navigate","useNavigate","activeMenu","useSelector","state","shallowEqual","advertList","loading","listLoading","meta","advert","id","setId","text","setText","search","setSearch","active","setActive","setIsModalVisible","useContext","Context","setLoading","sorter","a","b","render","_","row","_row$translation","translation","deleted_at","EditOutlined","goToEdit","paramsData","perPage","page","addMenu","url","name","refetch","fetchAdverts","disableRefetch","useDidUpdate","data","role","_Fragment","Card","maxWidth","placeholder","FilterColumns","PlusCircleOutlined","goToAddAdvert","setMenuData","Table","scroll","x","dataSource","filter","rowKey","record","pagination","pageSize","per_page","current_page","total","pageNumber","current","CustomModal","click","handleActive","advertService","then","finally","advertDelete","params","Object","assign","index","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}