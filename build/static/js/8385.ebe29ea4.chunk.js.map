{"version":3,"file":"static/js/8385.ebe29ea4.chunk.js","mappings":"mTAaA,MAwCA,EAxCkBA,KAChB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACPC,GAAQC,EAAAA,EAAAA,WACT,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,IACpDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,UAAEC,IAAcR,EAAAA,EAAAA,KAAaC,GAAUA,EAAMQ,UAAUN,EAAAA,IA2B7D,OACEO,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAOjB,EAAE,cAAekB,UAAU,QAAQC,OAAOJ,EAAAA,EAAAA,KAACK,EAAAA,EAAY,IAAIC,UACtEN,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACpB,KAAMA,EAAMqB,aA3BPA,CAACC,EAAQC,KAAW,IAADC,EACtC,MAAMC,EAAU,UACVC,EAAa,CACjBC,OAAQ,aAEJC,EAAO,CACXC,MAAmB,QAAdL,EAAEF,EAAOO,aAAK,IAAAL,OAAA,EAAZA,EAAcM,KAAKC,GAAMA,EAAEC,QAClCC,OAAQV,EAAMO,KAAKP,GAAUA,EAAMW,OACnCC,IAAKb,EAAOa,IACZC,UAAWd,EAAOc,UAClBrB,OAAOsB,EAAAA,EAAAA,GAAqB1B,EAAWW,EAAQ,SAC/CgB,aAAaD,EAAAA,EAAAA,GAAqB1B,EAAWW,EAAQ,eACrDiB,aAAaF,EAAAA,EAAAA,GAAqB1B,EAAWW,EAAQ,gBAGvD,OAAOkB,EAAAA,EAAAA,OAAqBZ,GAAMa,MAAK,KACrCC,EAAAA,GAAAA,QAAc5C,EAAE,0BAChB6C,EAAAA,EAAAA,KAAM,KACJpC,GAASqC,EAAAA,EAAAA,IAAe,IAAK1C,EAAYuB,QAAAA,KACzClB,GAASsC,EAAAA,EAAAA,GAAanB,OAExBjB,EAAS","sources":["views/banners/banner-add.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu } from '../../redux/slices/menu';\nimport { fetchBanners } from '../../redux/slices/banner';\nimport bannerService from '../../services/banner';\nimport { useTranslation } from 'react-i18next';\nimport getTranslationFields from '../../helpers/getTranslationFields';\nimport LanguageList from '../../components/language-list';\nimport BannerForm from './banner-form';\n\nconst BannerAdd = () => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  const handleSubmit = (values, image) => {\n    const nextUrl = 'banners';\n    const paramsData = {\n      status: 'published',\n    };\n    const body = {\n      shops: values.shops?.map((i) => i.value),\n      images: image.map((image) => image.name),\n      url: values.url,\n      clickable: values.clickable,\n      title: getTranslationFields(languages, values, 'title'),\n      description: getTranslationFields(languages, values, 'description'),\n      button_text: getTranslationFields(languages, values, 'button_text'),\n    };\n\n    return bannerService.create(body).then(() => {\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchBanners(paramsData));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.banner')} className='h-100' extra={<LanguageList />}>\n      <BannerForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n};\n\nexport default BannerAdd;\n"],"names":["BannerAdd","t","useTranslation","form","Form","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","navigate","useNavigate","languages","formLang","_jsx","Card","title","className","extra","LanguageList","children","BannerForm","handleSubmit","values","image","_values$shops","nextUrl","paramsData","status","body","shops","map","i","value","images","name","url","clickable","getTranslationFields","description","button_text","bannerService","then","toast","batch","removeFromMenu","fetchBanners"],"sourceRoot":""}