{"version":3,"file":"static/js/8387.ae4eaa68.chunk.js","mappings":"6PAEA,MAKA,EALsB,CACpBA,OAASC,GAASC,EAAAA,EAAAA,KAAa,iCAAkCD,GACjEE,OAASF,GAASC,EAAAA,EAAAA,KAAa,iCAAkCD,I,qCCMpD,SAASG,IACtB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GACvCC,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,MAER,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,IAUpDC,EAAcC,IACX,CACLC,IAAKD,EAAKE,MACVC,KAAMH,EAAKE,MACXE,OAAQ,OACRC,IAAKL,EAAKE,MACVI,SAAS,IAuBb,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHN,MAAOV,EAAE,UACTiB,OACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,KAAK,UACLC,MAAML,EAAAA,EAAAA,KAACM,EAAAA,EAAmB,IAC1BC,QAAS3B,EACT4B,QA7CcC,KACpB5B,GAAc,GACd6B,EAAAA,SAEGC,MAAK,IAAMC,EAAAA,GAAAA,QAAc3B,EAAE,2BAC3B4B,SAAQ,IAAMhC,GAAc,MAwCFiC,SAEtB7B,EAAE,qBAEN6B,UAEDC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CACNpB,KAAK,OACLqB,UAAU,EACVC,SAAU,EACVC,cArCeC,IAA0B,IAAzB,KAAE3B,EAAI,UAAE4B,GAAWD,EACvC,MAAME,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ/B,GACxBiB,EAAAA,OAAqBY,GAAUX,MAAKc,IAAe,IAAd,KAAEjD,GAAMiD,EAC3C1C,GAAS2C,EAAAA,EAAAA,IAAY,CAAEvC,WAAAA,EAAYX,KAAMgB,EAAWhB,MACpD6C,EAAU,UAiCRM,gBAA2B,OAAVxC,QAAU,IAAVA,GAAAA,EAAYX,KAAO,CAAW,OAAVW,QAAU,IAAVA,OAAU,EAAVA,EAAYX,MAAQ,KACzDoD,aA9BgBnC,IACpB,MAAMoC,EAAsB,cAAdpC,EAAKW,KACb0B,EAAsB,cAAdrC,EAAKW,KACb2B,EAAuB,eAAdtC,EAAKW,KACpB,GAAIyB,GAASE,GAAUD,EAErB,OADAlB,EAAAA,GAAAA,MAAY,GAAGnB,EAAKG,2BACb,GAwBsBkB,SAAA,EAE3Bd,EAAAA,EAAAA,KAAA,KAAGgC,UAAU,uBAAsBlB,UACjCd,EAAAA,EAAAA,KAACiC,EAAAA,EAAa,OAEhBjC,EAAAA,EAAAA,KAAA,KAAGgC,UAAU,kBAAiBlB,SAAC,+CAG/Bd,EAAAA,EAAAA,KAAA,KAAGgC,UAAU,kBAAiBlB,SAAC","sources":["services/update.js","views/update/index.js"],"sourcesContent":["import request from './request';\n\nconst updateService = {\n  upload: (data) => request.post('dashboard/admin/project-upload', data),\n  update: (data) => request.post('dashboard/admin/project-update', data),\n};\n\nexport default updateService;\n","import React, { useState } from 'react';\nimport { Card, Button } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport Dragger from 'antd/lib/upload/Dragger';\nimport { CloudUploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport updateService from '../../services/update';\nimport { setMenuData } from '../../redux/slices/menu';\nimport { toast } from 'react-toastify';\n\nexport default function Update() {\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const updateBackend = () => {\n    setLoadingBtn(true);\n    updateService\n      .update()\n      .then(() => toast.success(t('successfully.updated')))\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const createFile = (file) => {\n    return {\n      uid: file.title,\n      name: file.title,\n      status: 'done',\n      url: file.title,\n      created: true,\n    };\n  };\n\n  const handleUpload = ({ file, onSuccess }) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    updateService.upload(formData).then(({ data }) => {\n      dispatch(setMenuData({ activeMenu, data: createFile(data) }));\n      onSuccess('ok');\n    });\n  };\n\n  const beforeUpload = (file) => {\n    const isPNG = file.type === 'image/png';\n    const isJPG = file.type === 'image/jpg';\n    const isJPEG = file.type === 'image/jpeg';\n    if (isPNG || isJPEG || isJPG) {\n      toast.error(`${file.name} is not valid file`);\n      return false;\n    }\n  };\n\n  return (\n    <Card\n      title={t('update')}\n      extra={\n        <Button\n          type='primary'\n          icon={<CloudUploadOutlined />}\n          loading={loadingBtn}\n          onClick={updateBackend}\n        >\n          {t('update.database')}\n        </Button>\n      }\n    >\n      <Dragger\n        name='file'\n        multiple={false}\n        maxCount={1}\n        customRequest={handleUpload}\n        defaultFileList={activeMenu?.data ? [activeMenu?.data] : null}\n        beforeUpload={beforeUpload}\n      >\n        <p className='ant-upload-drag-icon'>\n          <InboxOutlined />\n        </p>\n        <p className='ant-upload-text'>\n          Click or drag file to this area to upload\n        </p>\n        <p className='ant-upload-hint'>\n          In order to update database using this file you need to click button\n          above\n        </p>\n      </Dragger>\n    </Card>\n  );\n}\n"],"names":["upload","data","request","update","Update","loadingBtn","setLoadingBtn","useState","dispatch","useDispatch","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","createFile","file","uid","title","name","status","url","created","_jsx","Card","extra","Button","type","icon","CloudUploadOutlined","loading","onClick","updateBackend","updateService","then","toast","finally","children","_jsxs","Dragger","multiple","maxCount","customRequest","_ref","onSuccess","formData","FormData","append","_ref2","setMenuData","defaultFileList","beforeUpload","isPNG","isJPG","isJPEG","className","InboxOutlined"],"sourceRoot":""}