{"version":3,"file":"static/js/2077.2285edc9.chunk.js","mappings":"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","sources":["helpers/useQueryParams.js","views/seller-views/users/roles.js","views/seller-views/users/components/roles-filter/roles-filter.js","views/seller-views/users/components/list/list.js","views/seller-views/users/users.js"],"sourcesContent":["import { useNavigate, useLocation } from 'react-router-dom';\nimport qs from 'qs';\n\nexport const useQueryParams = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = qs.parse(location.search, { ignoreQueryPrefix: true });\n\n  const get = (name) => queryParams[name];\n  const set = (name, value) =>\n    navigate({ search: qs.stringify({ ...queryParams, [name]: value }) });\n  const clear = () => navigate({ search: qs.stringify({}) });\n  const merge = (values) =>\n    navigate({ search: qs.stringify({ ...queryParams, ...values }) });\n  const reset = (name) => {\n    const newParams = { ...queryParams };\n    if (newParams[name]) {\n      delete newParams[name];\n    }\n\n    navigate({ search: qs.stringify({ ...newParams }) });\n  };\n\n  const setMultiple = (params) => {\n    const newParams = { ...queryParams, ...params };\n    navigate({ search: qs.stringify(newParams) });\n  };\n\n  const resetMultiple = (params) => {\n    const newParams = { ...queryParams };\n    params.forEach((param) => {\n      if (newParams[param]) {\n        delete newParams[param];\n      }\n    });\n    navigate({ search: qs.stringify(newParams) });\n  };\n\n  return {\n    values: queryParams,\n    set,\n    reset,\n    clear,\n    merge,\n    get,\n    setMultiple,\n    resetMultiple,\n  };\n};\n","export const shopUserRoles = [\n  'user',\n  'moderator',\n  'cook',\n  'waiter',\n  'deliveryman',\n];\n","import { Tabs } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useQueryParams } from 'helpers/useQueryParams';\nimport { shopUserRoles } from '../../roles';\n\nconst { TabPane } = Tabs;\n\nconst ShopUsersRolesFilter = () => {\n  const { t } = useTranslation();\n  const queryParams = useQueryParams();\n  const onTabChange = (role) => {\n    queryParams.set('role', role);\n  };\n  return (\n    <Tabs\n      type='card'\n      activeKey={queryParams.get('role') || 'user'}\n      onChange={onTabChange}\n    >\n      {shopUserRoles.map((item) => (\n        <TabPane tab={t(item)} key={item} />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default ShopUsersRolesFilter;\n","import { Button, Space, Table } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useQueryParams } from 'helpers/useQueryParams';\nimport { fetchSellerUsers } from 'redux/slices/user';\nimport { addMenu, disableRefetch } from 'redux/slices/menu';\nimport { useEffect } from 'react';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport { EditOutlined, EyeOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst ShopUsersList = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const queryParams = useQueryParams();\n  const dispatch = useDispatch();\n  const {\n    users,\n    loading,\n    meta,\n    params: initialParams,\n  } = useSelector((state) => state.user.seller, shallowEqual);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const params = {\n    ...initialParams,\n    role: queryParams.get('role') || 'user',\n  };\n\n  const columns = [\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      is_show: true,\n    },\n    {\n      title: t('firstname'),\n      dataIndex: 'firstname',\n      is_show: true,\n      render: (text) => text || t('N/A'),\n    },\n    {\n      title: t('lastname'),\n      dataIndex: 'lastname',\n      is_show: true,\n      render: (text) => text || t('N/A'),\n    },\n    {\n      title: t('email'),\n      dataIndex: 'email',\n      is_show: true,\n      render: (text) => text || t('N/A'),\n    },\n    {\n      title: t('options'),\n      dataIndex: 'uuid',\n      is_show: true,\n      render: (uuid) => (\n        <Space>\n          {queryParams.get('role') === 'deliveryman' && (\n            <Button icon={<EditOutlined />} onClick={() => goToEdit(uuid)} />\n          )}\n          <Button\n            icon={<EyeOutlined />}\n            onClick={() => queryParams.set('uuid', uuid)}\n          />\n        </Space>\n      ),\n    },\n  ];\n\n  const goToEdit = (uuid) => {\n    const link = `seller/shop-users/edit/${uuid}`;\n    dispatch(\n      addMenu({\n        id: 'shop-user-edit',\n        url: link,\n        name: t(`edit.${queryParams.get('role')}`),\n      }),\n    );\n    navigate(`/${link}`);\n  };\n\n  const fetchUsers = (params = {}) => {\n    batch(() => {\n      dispatch(fetchSellerUsers(params));\n      dispatch(disableRefetch(activeMenu));\n    });\n  };\n\n  const onTableChange = (pagination) => {\n    fetchUsers({ ...params, page: pagination?.current });\n  };\n\n  useDidUpdate(() => {\n    if (activeMenu.refetch) {\n      fetchUsers(params);\n    }\n  }, [activeMenu.refetch]);\n\n  useEffect(() => {\n    fetchUsers({ ...params, page: 1 });\n    // eslint-disable-next-line\n  }, [params?.role]);\n\n  return (\n    <Table\n      scroll={{ x: true }}\n      loading={loading}\n      columns={columns.filter((item) => item?.is_show)}\n      dataSource={users}\n      rowKey={(record) => record?.uuid}\n      pagination={{\n        total: meta?.total ?? 0,\n        defaultCurrent: 1,\n        pageSize: params?.perPage ?? 10,\n        current: params?.page ?? 1,\n      }}\n      onChange={onTableChange}\n    />\n  );\n};\n\nexport default ShopUsersList;\n","import { Button, Card, Modal } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useQueryParams } from 'helpers/useQueryParams';\nimport { addMenu } from 'redux/slices/menu';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { lazy } from 'react';\nimport ShopUsersRolesFilter from './components/roles-filter';\nimport ShopUsersList from './components/list';\n\nconst ShopUserDetails = lazy(() => import('./components/details'));\n\nconst ShopUsers = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const queryParams = useQueryParams();\n  const goToAddShopUser = () => {\n    const link = `seller/shop-users/add/${queryParams.get('role')}`;\n    dispatch(\n      addMenu({\n        id: 'shop-user-add',\n        url: link,\n        name: t(`add.${queryParams.get('role')}`),\n      }),\n    );\n    navigate(`/${link}`);\n  };\n  return (\n    <Card\n      title={t('shop.users')}\n      extra={[\n        <Button\n          type='primary'\n          hidden={\n            queryParams.get('role') === 'user' ||\n            queryParams.get('role') === 'deliveryman' ||\n            !queryParams.get('role')\n          }\n          onClick={goToAddShopUser}\n        >\n          {t(`add.${queryParams.get('role')}`)}\n        </Button>,\n      ]}\n    >\n      <ShopUsersRolesFilter />\n      <ShopUsersList />\n      <Modal\n        title={t('user.details')}\n        visible={!!queryParams.get('uuid')}\n        onCancel={() => queryParams.reset('uuid')}\n        footer={[\n          <Button onClick={() => queryParams.reset('uuid')}>\n            {t('close')}\n          </Button>,\n        ]}\n      >\n        <ShopUserDetails />\n      </Modal>\n    </Card>\n  );\n};\n\nexport default ShopUsers;\n"],"names":["useQueryParams","navigate","useNavigate","location","useLocation","queryParams","qs","search","ignoreQueryPrefix","values","set","name","value","reset","newParams","clear","merge","get","setMultiple","params","resetMultiple","forEach","param","shopUserRoles","TabPane","Tabs","ShopUsersRolesFilter","t","useTranslation","_jsx","type","activeKey","onChange","role","children","map","item","tab","ShopUsersList","_meta$total","_params$perPage","_params$page","dispatch","useDispatch","users","loading","meta","initialParams","useSelector","state","user","seller","shallowEqual","activeMenu","menu","columns","title","dataIndex","is_show","render","text","uuid","_jsxs","Space","Button","icon","EditOutlined","onClick","goToEdit","EyeOutlined","link","addMenu","id","url","fetchUsers","arguments","length","undefined","batch","fetchSellerUsers","disableRefetch","useDidUpdate","refetch","useEffect","page","Table","scroll","x","filter","dataSource","rowKey","record","pagination","total","defaultCurrent","pageSize","perPage","current","ShopUserDetails","lazy","ShopUsers","Card","extra","hidden","goToAddShopUser","Modal","visible","onCancel","footer"],"sourceRoot":""}