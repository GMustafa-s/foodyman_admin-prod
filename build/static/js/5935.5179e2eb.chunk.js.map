{"version":3,"file":"static/js/5935.5179e2eb.chunk.js","mappings":"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","sources":["components/delete-button.js","components/order-card-loader.js","components/search-input.js","constants/index.js","helpers/getDefaultLocation.js","helpers/numberToPrice.js","services/export.js","views/waiter-views/order/orderDeliveryman.js","views/waiter-views/order/dnd/List/index.js","components/order-card-waiter.js","views/waiter-views/order/dnd/Incorporate/index.js","views/waiter-views/order/downloadModal.js","views/waiter-views/order/orders-board.js","views/waiter-views/order/show-locations.map.js","../node_modules/@ant-design/icons-svg/es/asn/ContainerOutlined.js","../node_modules/@ant-design/icons/es/icons/ContainerOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import { Card, Skeleton } from 'antd';\nimport React from 'react';\n\nconst OrderCardLoader = ({ loading }) => {\n  return (\n    <Card className='order-card'>\n      <Skeleton loading={loading} avatar active />\n    </Card>\n  );\n};\n\nexport default OrderCardLoader;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport default function SearchInput({\n  handleChange,\n  defaultValue,\n  resetSearch,\n  ...props\n}) {\n  const [searchTerm, setSearchTerm] = useState(defaultValue);\n\n  const debounceSearch = useMemo(() => {\n    const loadOptions = (value) => {\n      handleChange(value);\n    };\n    return debounce(loadOptions, 800);\n  }, [handleChange]);\n\n  useEffect(() => {\n    setSearchTerm(defaultValue);\n  }, [resetSearch, defaultValue]);\n\n  return (\n    <Input\n      value={searchTerm}\n      onChange={(event) => {\n        setSearchTerm(event.target.value);\n        debounceSearch(event.target.value);\n      }}\n      prefix={<SearchOutlined />}\n      {...props}\n    />\n  );\n}\n","export const mockOrderList = {\n  new: [1, 2, 3, 4, 5],\n  accepted: [1, 2, 3, 4, 5],\n  ready: [1, 2, 3, 4, 5],\n  on_a_way: [1, 2, 3, 4, 5],\n  delivered: [1, 2, 3, 4, 5],\n  canceled: [1, 2, 3, 4, 5],\n  cooking: [1, 2, 3, 4, 5],\n};\n\nexport const transactionStatuses = [\n  'progress',\n  'paid',\n  'canceled',\n  'rejected',\n  'refund',\n];\n\nexport const orderPayments = ['before', 'after'];\n\nexport const LOCALE_COLORS = ['blue', 'red', 'gold', 'volcano', 'cyan', 'lime'];\n\nexport const ORDER_DETAILS_STATUSES = [\n  'new',\n  'accepted',\n  'cooking',\n  'ready',\n  'ended',\n];\n\nexport const SHOP_EMAIL_STATUSES = [\n  'new',\n  'accepted',\n  'cooking',\n  'ready',\n  'on_a_way',\n  'delivered',\n  'canceled',\n];\n\nexport const ORDER_TYPES = ['dine_in', 'delivery', 'pickup'];\n\nexport const userGenders = ['male', 'female'];\n","import { LAT, LNG } from 'configs/app-global';\n\nexport default function getDefaultLocation(settings) {\n  if (!settings?.location) {\n    return {\n      lat: 47.4143302506288,\n      lng: 8.532059477976883,\n    };\n  }\n  const location = settings.location.split(', ');\n  return {\n    lat: Number(location?.[0]),\n    lng: Number(location?.[1]),\n  };\n}\n","import { store } from 'redux/store';\n\nexport default function numberToPrice(number = 0, symbol, position) {\n  const defaultCurrency = store.getState()?.currency?.defaultCurrency;\n  const price = Number(number)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  const currencySymbol = symbol || defaultCurrency?.symbol || '$';\n  const currencyPosition = position || defaultCurrency?.position || 'before';\n\n  return currencyPosition === 'after'\n    ? `${price} ${currencySymbol}`\n    : `${currencySymbol} ${price}`;\n}\n","import request from './request';\n\nconst exportService = {\n  orderExport: (id, params) =>\n    request.get(`dashboard/user/export/order/${id}/pdf`, {\n      params,\n      responseType: 'blob',\n    }),\n};\n\nexport default exportService;\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Modal, Row, Select } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport orderService from '../../../services/waiter/order';\nimport { setRefetch } from '../../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\n\nexport default function OrderDeliveryman({ orderDetails: data, handleCancel }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { deliverymans } = useSelector(\n    (state) => state.deliveryman,\n    shallowEqual\n  );\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = (values) => {\n    const params = { ...values };\n    setLoading(true);\n    orderService\n      .updateDelivery(data.id, params)\n      .then(() => {\n        handleCancel();\n        dispatch(setRefetch(activeMenu));\n      })\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <Modal\n      visible={!!data}\n      title={data.title}\n      onCancel={handleCancel}\n      footer={[\n        <Button type='primary' onClick={() => form.submit()} loading={loading}>\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel}>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form\n        form={form}\n        layout='vertical'\n        onFinish={onFinish}\n        initialValues={{ deliveryman: data.deliveryman?.id }}\n      >\n        <Row gutter={12}>\n          <Col span={24}>\n            <Form.Item\n              label={t('deliveryman')}\n              name='deliveryman'\n              rules={[\n                {\n                  required: true,\n                  message: t('required'),\n                },\n              ]}\n            >\n              <Select>\n                {deliverymans.map((item, idx) => (\n                  <Select.Option\n                    key={item.id}\n                    value={item.id}\n                    className='d-block'\n                  >\n                    {item.firstname} {item.lastname || ''}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n}\n","import { SyncOutlined } from '@ant-design/icons';\nimport { Alert, Space, Tag } from 'antd';\nimport React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { useTranslation } from 'react-i18next';\n\nconst List = ({\n  children,\n  title,\n  name,\n  isDropDisabled,\n  total = 0,\n  loading = false,\n  reloadOrder,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Alert\n        message={\n          <Space>\n            {\n              <SyncOutlined\n                size={20}\n                style={{ cursor: 'pointer' }}\n                spin={loading}\n                onClick={reloadOrder}\n              />\n            }\n            {t(title)}\n            <Tag>{loading ? <SyncOutlined spin /> : total}</Tag>\n          </Space>\n        }\n        className={`mb-4 ${name}`}\n        style={{\n          textAlign: 'center',\n          fontSize: 16,\n          textTransform: 'capitalize',\n        }}\n      />\n      <Droppable droppableId={name} isDropDisabled={isDropDisabled}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            className='h-screen'\n            style={{ opacity: isDropDisabled ? 0.6 : 1 }}\n          >\n            <>\n              {children}\n              {provided.placeholder}\n            </>\n          </div>\n        )}\n      </Droppable>\n    </>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport {\n  EyeOutlined,\n  UserOutlined,\n  ContainerOutlined,\n  CarOutlined,\n  DollarOutlined,\n  PayCircleOutlined,\n  BorderlessTableOutlined,\n  FieldTimeOutlined,\n  TableOutlined,\n} from '@ant-design/icons';\nimport { Avatar, Card, List, Skeleton, Space } from 'antd';\nimport { IMG_URL } from '../configs/app-global';\nimport numberToPrice from '../helpers/numberToPrice';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport { BsTruck } from 'react-icons/bs';\n\nconst { Meta } = Card;\n\nconst OrderCardWaiter = ({ data: item, goToShow, loading }) => {\n  const { t } = useTranslation();\n  const data = [\n    {\n      title: 'Number of products',\n      icon: <ContainerOutlined />,\n      data: item?.order_details_count,\n    },\n    {\n      title: 'Delivery type',\n      icon: <BsTruck />,\n      data: item?.delivery_type,\n    },\n    {\n      title: 'Table',\n      icon: <TableOutlined />,\n      data: item?.table?.name || t('unspecified'),\n    },\n    {\n      title: 'Amount',\n      icon: <DollarOutlined />,\n      data: numberToPrice(item.total_price, item.currency?.symbol),\n    },\n    {\n      title: 'Payment type',\n      icon: <PayCircleOutlined />,\n      data: item.transaction?.payment_system?.tag || '-',\n    },\n    {\n      title: 'Created at',\n      icon: <FieldTimeOutlined />,\n      data: moment(item?.created_at).format('YYYY-MM-DD') || '-',\n    },\n  ];\n\n  return (\n    <Card\n      actions={[<EyeOutlined key='setting' onClick={() => goToShow(item)} />]}\n      className='order-card'\n    >\n      <Skeleton loading={loading} avatar active>\n        <Meta\n          avatar={\n            <Avatar src={IMG_URL + item.user?.img} icon={<UserOutlined />} />\n          }\n          description={`#${item.id}`}\n          title={`${item.user?.firstname || '-'} ${item.user?.lastname || '-'}`}\n        />\n        <List\n          itemLayout='horizontal'\n          dataSource={data}\n          renderItem={(item, key) => (\n            <List.Item key={key}>\n              <Space>\n                {item.icon}\n                {`${item.title}:  ${item.data}`}\n              </Space>\n            </List.Item>\n          )}\n        />\n      </Skeleton>\n    </Card>\n  );\n};\n\nexport default OrderCardWaiter;\n","import List from '../List/index';\nimport { DragDropContext, Draggable } from 'react-beautiful-dnd';\nimport { useState } from 'react';\nimport { Spin } from 'antd';\nimport Scrollbars from 'react-custom-scrollbars';\nimport {\n  clearCurrentOrders,\n  clearItems,\n  setItems,\n} from '../../../../../redux/slices/waiterOrder';\nimport { shallowEqual, useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useEffect } from 'react';\nimport { mockOrderList } from '../../../../../constants';\nimport OrderCardLoader from '../../../../../components/order-card-loader';\nimport { toast } from 'react-toastify';\nimport orderService from '../../../../../services/waiter/order';\nimport OrderCardWaiter from 'components/order-card-waiter';\nconst statuses = [\n  'new',\n  'accepted',\n  'ready',\n  'on_a_way',\n  'delivered',\n  'canceled',\n];\nconst Incorporate = ({\n  goToEdit,\n  goToShow,\n  fetchOrderAllItem,\n  fetchOrders,\n  setLocationsMap,\n  setId,\n  setIsModalVisible,\n  setText,\n  setDowloadModal,\n  setType,\n}) => {\n  const dispatch = useDispatch();\n  const { items } = useSelector((state) => state.waiterOrder, shallowEqual);\n  const orders = useSelector((state) => state.waiterOrder, shallowEqual);\n  const [key, setKey] = useState('');\n  const [current, setCurrent] = useState({});\n  const [currentCId, setCurrentCId] = useState({});\n\n  const removeFromList = (list, index) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(index, 1);\n    return [removed, result];\n  };\n\n  const addToList = (list, index, element) => {\n    const result = Array.from(list);\n    result.splice(index, 0, element);\n    return result;\n  };\n\n  const changeStatus = (id, params) => {\n    orderService.updateStatus(id, params).then((res) => {\n      toast.success(`#${id} order status changed`);\n    });\n  };\n\n  const onDragStart = (task) => {\n    const id = statuses.findIndex((item) => item === task.source.droppableId);\n    setCurrent(task);\n    setCurrentCId(id);\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    if (\n      result.destination &&\n      current.source.droppableId !== result.destination.droppableId\n    ) {\n      changeStatus(result.draggableId, {\n        status: result.destination.droppableId,\n      });\n    }\n    const listCopy = { ...items };\n    const sourceList = listCopy[result.source.droppableId];\n    const [removedElement, newSourceList] = removeFromList(\n      sourceList,\n      result.source.index\n    );\n    listCopy[result.source.droppableId] = newSourceList;\n    const destinationList = listCopy[result.destination.droppableId];\n    listCopy[result.destination.droppableId] = addToList(\n      destinationList,\n      result.destination.index,\n      removedElement\n    );\n    dispatch(setItems(listCopy));\n    setCurrentCId(null);\n  };\n\n  const handleScroll = (event, key) => {\n    const lastProductLoaded = event.target.lastChild;\n    const pageOffset = event.target.clientHeight + event.target.scrollTop;\n    if (lastProductLoaded) {\n      const lastProductLoadedOffset =\n        lastProductLoaded.offsetTop + lastProductLoaded.clientHeight + 19.9;\n      if (pageOffset > lastProductLoadedOffset) {\n        if (\n          orders[key].meta.last_page > orders[key].meta.current_page &&\n          !orders[key].loading\n        ) {\n          setKey(key);\n          fetchOrders({\n            page: orders[key].meta.current_page + 1,\n            perPage: 5,\n            status: key,\n          });\n        }\n      }\n    }\n  };\n\n  const checkIsEmpty = () => {\n    const array = Object.keys(items).map((item) => {\n      if (items[item].length === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (array.includes(true)) return true;\n    else return false;\n  };\n\n  const checkDisable = (index) => {\n    if (index === 0 && currentCId === statuses.length - 1) return false;\n    if (Boolean(currentCId > index)) return true;\n    else return false;\n  };\n\n  useEffect(() => {\n    dispatch(clearItems());\n    // if (checkIsEmpty()) {\n    fetchOrderAllItem();\n    // }\n  }, []);\n\n  const reloadOrder = (item) => {\n    dispatch(clearCurrentOrders(item));\n    fetchOrders({ status: item });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\n      <div className='order-board'>\n        {statuses?.map((item, index) => (\n          <div key={item} className='dnd-column'>\n            <List\n              title={item}\n              onDragEnd={onDragEnd}\n              name={item}\n              isDropDisabled={checkDisable(index)}\n              total={items[item]?.length}\n              loading={orders[item].loading}\n              reloadOrder={() => reloadOrder(item)}\n            >\n              <Scrollbars\n                onScroll={(e) => handleScroll(e, item)}\n                autoHeight\n                autoHeightMin={'75vh'}\n                autoHeightMax={'75vh'}\n                autoHide\n                id={item}\n              >\n                {!Boolean(orders[item].loading && !items[item]?.length)\n                  ? items[item]?.map((data, index) => (\n                      <>\n                        <Draggable\n                          key={data.id}\n                          draggableId={data.id.toString()}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <OrderCardWaiter\n                                data={data}\n                                goToShow={goToShow}\n                              />\n                            </div>\n                          )}\n                        </Draggable>\n                      </>\n                    ))\n                  : mockOrderList[item]?.map(() => (\n                      <OrderCardLoader loading={true} />\n                    ))}\n                {orders[item].loading && item === key && (\n                  <Spin\n                    indicator={\n                      <LoadingOutlined\n                        style={{\n                          fontSize: 24,\n                        }}\n                        spin\n                      />\n                    }\n                  />\n                )}\n              </Scrollbars>\n            </List>\n          </div>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Incorporate;\n","import React, { useState } from 'react';\nimport exportService from '../../../services/export';\nimport download from 'downloadjs';\nimport Loading from '../../../components/loading';\nimport { Button, Card, Col, Modal, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BsClipboardCheck } from 'react-icons/bs';\nimport { AiOutlineFilePdf } from 'react-icons/ai';\nimport { useNavigate } from 'react-router-dom';\nconst Meta = Card.Meta;\n\nconst WaiterDownloadModal = ({ id, handleCancel }) => {\n  const [downloading, setDownloading] = useState(null);\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  function getInvoiceFile(id) {\n    setDownloading(true);\n    exportService\n      .orderExport(id)\n      .then((res) => {\n        download(res, `invoice_${id}.pdf`, 'application/pdf');\n        handleCancel();\n      })\n      .finally(() => setDownloading(false));\n  }\n\n  const generateInvoice = (id) => {\n    navigate(`/waiter/generate-invoice/${id}`);\n  };\n\n  return (\n    <>\n      {downloading ? (\n        <Loading />\n      ) : (\n        <Modal\n          visible={!!id}\n          title={t('selected.download')}\n          closable={false}\n          handleCancel={handleCancel}\n          footer={[\n            <Button type='default' key={'cancelBtn'} onClick={handleCancel}>\n              {t('cancel')}\n            </Button>,\n          ]}\n        >\n          <Row>\n            <Col span={12}>\n              <Card\n                title={t('download.pdf')}\n                onClick={() => getInvoiceFile(id)}\n                className='text-center cursor-pointer'\n              >\n                <Meta\n                  className='d-flex align-items-center justify-content-center'\n                  title={<BsClipboardCheck size={80} />}\n                />\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card\n                title={t('download.check')}\n                onClick={() => generateInvoice(id)}\n                className='text-center cursor-pointer'\n              >\n                <Meta\n                  className='d-flex align-items-center justify-content-center'\n                  title={<AiOutlineFilePdf size={85} />}\n                />\n              </Card>\n            </Col>\n          </Row>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default WaiterDownloadModal;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Button, Space, Card } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { ClearOutlined } from '@ant-design/icons';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  addMenu,\n  disableRefetch,\n  setMenuData,\n} from '../../../redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport useDidUpdate from '../../../helpers/useDidUpdate';\nimport { fetchOrders, handleSearch } from '../../../redux/slices/waiterOrder';\nimport SearchInput from '../../../components/search-input';\nimport userService from '../../../services/seller/user';\nimport { fetchRestOrderStatus } from '../../../redux/slices/orderStatus';\nimport DeleteButton from '../../../components/delete-button';\nimport { Context } from '../../../context/context';\nimport { toast } from 'react-toastify';\nimport orderService from '../../../services/waiter/order';\nimport Incorporate from './dnd/Incorporate';\nimport {\n  clearItems,\n  fetchAcceptedOrders,\n  fetchCanceledOrders,\n  fetchDeliveredOrders,\n  fetchNewOrders,\n  fetchOnAWayOrders,\n  fetchReadyOrders,\n} from '../../../redux/slices/waiterOrder';\nimport { batch } from 'react-redux';\nimport OrderDeliveryman from './orderDeliveryman';\nimport { clearOrder } from '../../../redux/slices/order';\nimport ShowLocationsMap from './show-locations.map';\nimport DownloadModal from './downloadModal';\nimport CustomModal from '../../../components/modal';\n\nexport default function SellerOrdersBoard() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [id, setId] = useState(null);\n  const { setIsModalVisible } = useContext(Context);\n  const [text, setText] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [locationsMap, setLocationsMap] = useState(null);\n  const [dowloadModal, setDowloadModal] = useState(null);\n  const [orderDeliveryDetails, setOrderDeliveryDetails] = useState(null);\n  const [type, setType] = useState(null);\n\n  const goToShow = (row) => {\n    dispatch(\n      addMenu({\n        url: `waiter/order/details/${row.id}`,\n        id: 'order_details',\n        name: t('order.details'),\n      })\n    );\n    navigate(`/waiter/order/details/${row.id}`);\n  };\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const data = activeMenu?.data;\n\n  const paramsData = {\n    search: data?.search,\n    // sort: data?.sort,\n    // column: data?.column,\n    perPage: data?.perPage || 5,\n    page: data?.page || 1,\n    user_id: data?.userId,\n    status: data?.status,\n  };\n\n  const orderDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    orderService\n      .delete(params)\n      .then(() => {\n        dispatch(clearItems());\n        toast.success(t('successfully.deleted'));\n        setIsModalVisible(false);\n        fetchOrderAllItem({ status: type });\n        setText(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useDidUpdate(() => {\n    // dispatch(handleSearch(paramsData));\n    dispatch(clearItems());\n    fetchOrderAllItem();\n  }, [data]);\n\n  useEffect(() => {\n    if (activeMenu?.refetch) {\n      dispatch(fetchOrders(paramsData));\n      dispatch(fetchRestOrderStatus());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu?.refetch]);\n\n  const handleFilter = (item, name) => {\n    dispatch(clearItems());\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, [name]: item },\n      })\n    );\n  };\n\n  async function getUsers(search) {\n    const params = {\n      search,\n      perPage: 10,\n    };\n    return userService.getAll(params).then(({ data }) => {\n      return data.map((item) => ({\n        label: `${item.firstname} ${item.lastname || ''}`,\n        value: item.id,\n      }));\n    });\n  }\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  const fetchOrdersCase = (params) => {\n    const paramsWithType = {\n      ...paramsData,\n      ...params,\n    };\n    switch (params.status) {\n      case 'new':\n        dispatch(fetchNewOrders(paramsWithType));\n        break;\n      case 'accepted':\n        dispatch(fetchAcceptedOrders(paramsWithType));\n        break;\n      case 'ready':\n        dispatch(fetchReadyOrders(paramsWithType));\n        break;\n      case 'on_a_way':\n        dispatch(fetchOnAWayOrders(paramsWithType));\n        break;\n      case 'delivered':\n        dispatch(fetchDeliveredOrders(paramsWithType));\n        break;\n      case 'canceled':\n        dispatch(fetchCanceledOrders(paramsWithType));\n        break;\n      default:\n        console.log(`Sorry, we are out of`);\n    }\n  };\n\n  const fetchOrderAllItem = () => {\n    fetchOrdersCase({ status: 'new' });\n    fetchOrdersCase({ status: 'accepted' });\n    fetchOrdersCase({ status: 'ready' });\n    fetchOrdersCase({ status: 'on_a_way' });\n    fetchOrdersCase({ status: 'delivered' });\n    fetchOrdersCase({ status: 'canceled' });\n  };\n\n  const handleClear = () => {\n    batch(() => {\n      dispatch(clearItems());\n      dispatch(\n        setMenuData({\n          activeMenu,\n          data: null,\n        })\n      );\n    });\n    fetchOrderAllItem();\n  };\n\n  const handleCloseModal = () => {\n    setOrderDeliveryDetails(null);\n    setLocationsMap(null);\n    setDowloadModal(null);\n  };\n\n  const goToAddOrder = () => {\n    dispatch(clearOrder());\n    dispatch(\n      addMenu({\n        id: 'pos.system',\n        url: 'seller/pos-system',\n        name: t('add.order'),\n      })\n    );\n    navigate('/seller/pos-system');\n  };\n\n  return (\n    <>\n      <Card>\n        <Space wrap>\n          <SearchInput\n            placeholder={t('search')}\n            resetSearch={!data?.search}\n            handleChange={(search) => handleFilter(search, 'search')}\n            defaultValue={data?.search}\n          />\n          <Button icon={<ClearOutlined />} onClick={handleClear}>\n            {t('clear')}\n          </Button>\n          {/* <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton> */}\n        </Space>\n      </Card>\n\n      <Incorporate\n        goToShow={goToShow}\n        fetchOrderAllItem={fetchOrderAllItem}\n        fetchOrders={fetchOrdersCase}\n        setLocationsMap={setLocationsMap}\n        setId={setId}\n        setIsModalVisible={setIsModalVisible}\n        setText={setText}\n        setDowloadModal={setDowloadModal}\n        type={type}\n        setType={setType}\n      />\n      <CustomModal\n        click={orderDelete}\n        text={text ? t('delete') : t('all.delete')}\n        loading={loadingBtn}\n        setText={setId}\n        setActive={setId}\n      />\n      {orderDeliveryDetails && (\n        <OrderDeliveryman\n          orderDetails={orderDeliveryDetails}\n          handleCancel={handleCloseModal}\n        />\n      )}\n      {locationsMap && (\n        <ShowLocationsMap id={locationsMap} handleCancel={handleCloseModal} />\n      )}\n      {dowloadModal && (\n        <DownloadModal id={dowloadModal} handleCancel={handleCloseModal} />\n      )}\n    </>\n  );\n}\n","import GoogleMapReact from 'google-map-react';\nimport { Button, Card, Col, Modal, Row, Steps, Tag } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport orderService from '../../../services/waiter/order';\nimport Loading from '../../../components/loading';\nimport { BsCalendar2Day, BsCheckLg } from 'react-icons/bs';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { MAP_API_KEY } from '../../../configs/app-global';\nimport FaUser from '../../../assets/images/user.jpg';\nimport FaStore from '../../../assets/images/shop.png';\nimport getDefaultLocation from '../../../helpers/getDefaultLocation';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { MdRestaurant } from 'react-icons/md';\nimport { IoBicycleSharp, IoCheckmarkDoneSharp } from 'react-icons/io5';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nconst { Step } = Steps;\nconst User = () => <img src={FaUser} width='50' alt='Pin' />;\nconst Store = () => <img src={FaStore} width='50' alt='Pin' />;\n\nconst colors = ['blue', 'red', 'gold', 'volcano', 'cyan', 'lime'];\n\nconst ShowLocationsMap = ({ id, handleCancel }) => {\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(null);\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState(null);\n  const { settings } = useSelector(\n    (state) => state.globalSettings,\n    shallowEqual\n  );\n  const center = getDefaultLocation(settings);\n  const [current, setCurrent] = useState(0);\n  const [shop, setShop] = useState(getDefaultLocation(settings));\n  const [user, setUser] = useState(getDefaultLocation(settings));\n  const [steps, setSteps] = useState([\n    { id: 0, name: 'new', icon: <ShoppingCartOutlined /> },\n    { id: 1, name: 'accepted', icon: <BsCheckLg /> },\n    { id: 2, name: 'ready', icon: <MdRestaurant /> },\n    { id: 3, name: 'on_a_way', icon: <IoBicycleSharp /> },\n    { id: 4, name: 'delivered', icon: <IoCheckmarkDoneSharp /> },\n  ]);\n\n  function fetchOrder() {\n    setLoading(true);\n    orderService\n      .getById(id)\n      .then(({ data }) => {\n        setSteps(\n          data.status === 'canceled'\n            ? [\n                { id: 1, name: 'new', icon: <ShoppingCartOutlined /> },\n                { id: 5, name: 'canceled', icon: <AiOutlineCloseCircle /> },\n              ]\n            : steps\n        );\n        setCurrent(\n          data.status === 'canceled'\n            ? 1\n            : steps.find((item) => item.name === data.status)?.id\n        );\n\n        setStatus(data.status === 'canceled' ? 'error' : 'success');\n        setData(data);\n        setUser({\n          lat: data.location.latitude,\n          lng: data.location.longitude,\n        });\n        setShop({\n          lat: data.shop.location.latitude,\n          lng: data.shop.location.longitude,\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  const { google_map_key } = useSelector(\n    (state) => state.globalSettings.settings,\n    shallowEqual\n  );\n\n  useEffect(() => {\n    fetchOrder();\n  }, []);\n\n  const handleLoadMap = ({ map, maps }) => {\n    const markers = [shop, user].map((item) => ({\n      lat: Number(item.lat || '0'),\n      lng: Number(item.lng || '0'),\n    }));\n\n    let bounds = new maps.LatLngBounds();\n    for (var i = 0; i < markers.length; i++) {\n      bounds.extend(markers[i]);\n    }\n    map.fitBounds(bounds);\n  };\n\n  return (\n    <>\n      <Modal\n        visible={!!id}\n        title={t('show.locations')}\n        closable={true}\n        onCancel={handleCancel}\n        style={{ minWidth: '80vw' }}\n        footer={[\n          <Button type='default' key={'cancelBtn'} onClick={handleCancel}>\n            {t('cancel')}\n          </Button>,\n        ]}\n      >\n        {loading ? (\n          <Loading />\n        ) : (\n          <Card>\n            <Steps current={current} status={status} className='mb-5'>\n              {steps?.map((item, index) => (\n                <Step\n                  title={t(item.name)}\n                  key={item.id + index}\n                  icon={item?.icon}\n                />\n              ))}\n            </Steps>\n            <Row gutter={12}>\n              <Col span={12}>\n                <h3>\n                  {t('order.id')} #{data?.id}\n                </h3>\n                <p>\n                  <BsCalendar2Day /> {data?.created_at}\n                </p>\n                <p>\n                  {t('schedulet.at')} {data?.delivery_date}\n                </p>\n                <span>\n                  <strong>{data?.shop?.translation?.title}</strong>{' '}\n                  {data?.details?.map((details, index) => (\n                    <Tag className='mb-2' color={colors[index]}>\n                      {details?.stock?.product.translation.title}\n                    </Tag>\n                  ))}\n                </span>\n              </Col>\n              <Col span={12}>\n                <p>\n                  {t('status')}{' '}\n                  {data?.status === 'new' ? (\n                    <Tag color='blue'>{t(data?.status)}</Tag>\n                  ) : data?.status === 'canceled' ? (\n                    <Tag color='error'>{t(data?.status)}</Tag>\n                  ) : (\n                    <Tag color='cyan'>{t(data?.status)}</Tag>\n                  )}\n                </p>\n                <p>\n                  {t('payment.method')}{' '}\n                  <strong>{data?.transaction?.payment_system?.tag}</strong>\n                </p>\n                <p>\n                  {t('order.type')} <strong>{data?.delivery_type}</strong>\n                </p>\n                <p>\n                  {t('payment.type')}{' '}\n                  <strong>{data?.transaction?.status}</strong>\n                </p>\n              </Col>\n\n              <Col span={24} className='mt-5'>\n                <h4>{t('map')}</h4>\n                <div\n                  className='map-container'\n                  style={{ height: 400, width: '100%' }}\n                >\n                  <GoogleMapReact\n                    bootstrapURLKeys={{\n                      key: google_map_key || MAP_API_KEY,\n                    }}\n                    defaultZoom={14}\n                    center={center}\n                    options={{\n                      fullscreenControl: false,\n                    }}\n                    onGoogleApiLoaded={handleLoadMap}\n                  >\n                    <Store lat={shop?.lat} lng={shop?.lng} />\n                    <User lat={user?.lat} lng={user?.lng} />\n                  </GoogleMapReact>\n                </div>\n              </Col>\n            </Row>\n          </Card>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default ShowLocationsMap;\n","// This icon file is generated automatically.\nvar ContainerOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-40 824H232V687h97.9c11.6 32.8 32 62.3 59.1 84.7 34.5 28.5 78.2 44.3 123 44.3s88.5-15.7 123-44.3c27.1-22.4 47.5-51.9 59.1-84.7H792v-63H643.6l-5.2 24.7C626.4 708.5 573.2 752 512 752s-114.4-43.5-126.5-103.3l-5.2-24.7H232V136h560v752zM320 341h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm0 160h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"container\", \"theme\": \"outlined\" };\nexport default ContainerOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ContainerOutlinedSvg from \"@ant-design/icons-svg/es/asn/ContainerOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ContainerOutlined = function ContainerOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ContainerOutlinedSvg\n  }));\n};\n\nContainerOutlined.displayName = 'ContainerOutlined';\nexport default /*#__PURE__*/React.forwardRef(ContainerOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","loading","Card","className","children","Skeleton","avatar","active","SearchInput","handleChange","defaultValue","resetSearch","searchTerm","setSearchTerm","useState","debounceSearch","useMemo","debounce","value","useEffect","Input","onChange","event","target","prefix","SearchOutlined","mockOrderList","new","accepted","ready","on_a_way","delivered","canceled","cooking","transactionStatuses","orderPayments","LOCALE_COLORS","ORDER_DETAILS_STATUSES","SHOP_EMAIL_STATUSES","ORDER_TYPES","userGenders","getDefaultLocation","settings","location","lat","lng","split","Number","numberToPrice","_store$getState","_store$getState$curre","number","arguments","length","undefined","symbol","position","defaultCurrency","store","currency","price","toFixed","replace","currencySymbol","currencyPosition","orderExport","id","params","request","responseType","OrderDeliveryman","_data$deliveryman","orderDetails","data","handleCancel","activeMenu","useSelector","state","menu","shallowEqual","deliverymans","deliveryman","form","Form","dispatch","useDispatch","setLoading","Modal","visible","title","onCancel","footer","submit","layout","onFinish","values","orderService","then","setRefetch","finally","initialValues","Row","gutter","Col","span","label","name","rules","required","message","Select","map","item","idx","_jsxs","firstname","lastname","isDropDisabled","total","reloadOrder","_Fragment","Alert","Space","SyncOutlined","style","cursor","spin","Tag","textAlign","fontSize","textTransform","Droppable","droppableId","provided","ref","innerRef","opacity","placeholder","Meta","_item$table","_item$currency","_item$transaction","_item$transaction$pay","_item$user","_item$user2","_item$user3","goToShow","ContainerOutlined","order_details_count","BsTruck","delivery_type","TableOutlined","table","DollarOutlined","total_price","PayCircleOutlined","transaction","payment_system","tag","FieldTimeOutlined","moment","created_at","format","actions","EyeOutlined","Avatar","src","IMG_URL","user","img","UserOutlined","description","List","itemLayout","dataSource","renderItem","key","statuses","goToEdit","fetchOrderAllItem","fetchOrders","setLocationsMap","setId","setIsModalVisible","setText","setDowloadModal","setType","items","waiterOrder","orders","setKey","current","setCurrent","currentCId","setCurrentCId","onDragEnd","result","destination","changeStatus","source","draggableId","status","res","listCopy","sourceList","removedElement","newSourceList","removeFromList","list","index","Array","from","removed","splice","destinationList","addToList","element","setItems","checkDisable","Boolean","clearItems","DragDropContext","onDragStart","task","findIndex","_items$item","_items$item2","_items$item3","_mockOrderList$item","clearCurrentOrders","Scrollbars","onScroll","handleScroll","lastProductLoaded","lastChild","pageOffset","clientHeight","scrollTop","offsetTop","meta","last_page","current_page","page","perPage","autoHeight","autoHeightMin","autoHeightMax","autoHide","OrderCardLoader","Draggable","toString","snapshot","draggableProps","dragHandleProps","OrderCardWaiter","Spin","indicator","LoadingOutlined","downloading","setDownloading","navigate","useNavigate","Loading","closable","exportService","download","getInvoiceFile","BsClipboardCheck","generateInvoice","AiOutlineFilePdf","SellerOrdersBoard","useContext","Context","text","loadingBtn","setLoadingBtn","locationsMap","dowloadModal","orderDeliveryDetails","setOrderDeliveryDetails","paramsData","search","user_id","userId","useDidUpdate","refetch","fetchRestOrderStatus","disableRefetch","fetchOrdersCase","paramsWithType","fetchNewOrders","fetchAcceptedOrders","fetchReadyOrders","fetchOnAWayOrders","fetchDeliveredOrders","fetchCanceledOrders","console","log","handleCloseModal","wrap","handleFilter","setMenuData","ClearOutlined","handleClear","batch","Incorporate","row","addMenu","url","CustomModal","click","orderDelete","Object","assign","setActive","ShowLocationsMap","DownloadModal","Step","Steps","User","FaUser","width","alt","Store","FaStore","colors","_data$shop","_data$shop$translatio","_data$details","_data$transaction","_data$transaction$pay","_data$transaction2","setData","setStatus","globalSettings","center","shop","setShop","setUser","steps","setSteps","ShoppingCartOutlined","BsCheckLg","MdRestaurant","IoBicycleSharp","IoCheckmarkDoneSharp","google_map_key","_ref2","_steps$find","AiOutlineCloseCircle","find","latitude","longitude","minWidth","BsCalendar2Day","delivery_date","translation","details","_details$stock","color","stock","product","height","GoogleMapReact","bootstrapURLKeys","MAP_API_KEY","defaultZoom","options","fullscreenControl","onGoogleApiLoaded","_ref3","maps","markers","bounds","LatLngBounds","i","extend","fitBounds","React","AntdIcon","_objectSpread","ContainerOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}