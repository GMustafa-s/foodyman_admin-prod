{"version":3,"file":"static/js/7700.92e0f37c.chunk.js","mappings":"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","sources":["views/seller-views/reviews/deliveryBoyReviews.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Button, Card, Rate, Space, Table } from 'antd';\nimport { toast } from 'react-toastify';\nimport CustomModal from '../../../components/modal';\nimport { Context } from '../../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  addMenu,\n  disableRefetch,\n  setMenuData,\n} from '../../../redux/slices/menu';\nimport useDidUpdate from '../../../helpers/useDidUpdate';\nimport formatSortType from '../../../helpers/formatSortType';\nimport { useTranslation } from 'react-i18next';\nimport reviewService from '../../../services/seller/review';\nimport OrderReviewShowModal from './orderReviewShow';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteButton from '../../../components/delete-button';\nimport FilterColumns from '../../../components/filter-column';\nimport { sellerfetchDeliveryboyReviews } from '../../../redux/slices/deliveryboyReview';\n\nexport default function SellerDeliveryBoyReviews() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const goToOrder = (id) => {\n    dispatch(\n      addMenu({\n        id: 'order_details',\n        url: `order/details/${id}`,\n        name: t('order.details'),\n      })\n    );\n    navigate(`/order/details/${id}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('order.id'),\n      dataIndex: 'order',\n      key: 'order',\n      render: (order) => (\n        <div className='text-hover' onClick={() => goToOrder(order?.id)}>\n          #{order?.id}\n        </div>\n      ),\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('user'),\n      dataIndex: 'user',\n      key: 'user',\n      is_show: true,\n      render: (user) => (\n        <div className='text-hover'>\n          {user?.firstname} {user?.lastname || ''}\n        </div>\n      ),\n    },\n    {\n      title: t('deliveryman'),\n      dataIndex: 'deliveryman',\n      key: 'deliveryman',\n      is_show: true,\n      render: (user) => (\n        <div className='text-hover'>\n          {user?.firstname} {user?.lastname || ''}\n        </div>\n      ),\n    },\n    {\n      title: t('rating'),\n      dataIndex: 'rating',\n      key: 'rating',\n      is_show: true,\n      render: (rating) => <Rate allowHalf disabled defaultValue={rating} />,\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (createdAt) => moment(createdAt).format('YYYY-MM-DD HH:mm'),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EyeOutlined />}\n              onClick={() => setShow(row.id)}\n            />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [show, setShow] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [text, setText] = useState(null);\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { reviews, meta, loading, params } = useSelector(\n    (state) => state.deliveryboyReview,\n    shallowEqual\n  );\n  const data = activeMenu.data;\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n    assign: 'deliveryman',\n  };\n\n  const reviewDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    reviewService\n      .delete(params)\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(sellerfetchDeliveryboyReviews());\n        setIsModalVisible(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(sellerfetchDeliveryboyReviews(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(sellerfetchDeliveryboyReviews(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filters, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({ activeMenu, data: { perPage, page, column, sort } })\n    );\n  }\n\n  const onSelectChange = (newSelectedRowKeys) => {\n    setId(newSelectedRowKeys);\n  };\n\n  const rowSelection = {\n    id,\n    onChange: onSelectChange,\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  return (\n    <Card\n      title={t('deliveryboy.reviews')}\n      extra={\n        <Space wrap>\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={reviews}\n        pagination={{\n          pageSize: params.perPage,\n          page: params.page,\n          total: meta.total,\n          defaultCurrent: params.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n      <CustomModal\n        click={reviewDelete}\n        text={text ? t('delete') : t('all.delete')}\n        setText={setId}\n        loading={loadingBtn}\n      />\n      {show && (\n        <OrderReviewShowModal id={show} handleCancel={() => setShow(null)} />\n      )}\n    </Card>\n  );\n}\n"],"names":["SellerDeliveryBoyReviews","t","useTranslation","dispatch","useDispatch","navigate","useNavigate","columns","setColumns","useState","title","dataIndex","key","render","order","_jsxs","className","onClick","id","addMenu","url","name","goToOrder","children","sorter","is_show","user","firstname","lastname","rating","_jsx","Rate","allowHalf","disabled","defaultValue","createdAt","moment","format","_","row","Space","Button","type","icon","EyeOutlined","setShow","setIsModalVisible","useContext","Context","setId","show","loadingBtn","setLoadingBtn","text","setText","activeMenu","useSelector","state","menu","shallowEqual","reviews","meta","loading","params","deliveryboyReview","data","paramsData","sort","column","perPage","page","assign","useEffect","refetch","sellerfetchDeliveryboyReviews","disableRefetch","useDidUpdate","rowSelection","onChange","newSelectedRowKeys","Card","extra","wrap","DeleteButton","size","allDelete","length","toast","FilterColumns","Table","scroll","x","filter","item","dataSource","pagination","pageSize","total","defaultCurrent","rowKey","record","filters","current","field","formatSortType","setMenuData","CustomModal","click","reviewDelete","Object","map","index","reviewService","then","finally","OrderReviewShowModal","handleCancel"],"sourceRoot":""}