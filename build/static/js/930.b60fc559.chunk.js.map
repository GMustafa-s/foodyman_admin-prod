{"version":3,"file":"static/js/930.b60fc559.chunk.js","mappings":"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","sources":["components/delete-button.js","components/hideEmail.js","views/email-provider/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","export default function hideEmail(email) {\n  let skipFirstChars = 1;\n  let firstThreeChar = email?.slice(0, skipFirstChars);\n\n  let domainIndexStart = email?.lastIndexOf('@');\n  let maskedEmail = email?.slice(skipFirstChars, domainIndexStart - 1);\n  maskedEmail = maskedEmail?.replace(/./g, '*');\n  let domainPlusPreviousChar = email?.slice(domainIndexStart - 1, email.length);\n\n  return firstThreeChar?.concat(maskedEmail)?.concat(domainPlusPreviousChar);\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Button, Card, Space, Switch, Table } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport CustomModal from '../../components/modal';\nimport { fetchEmailProvider } from '../../redux/slices/emailProvider';\nimport emailService from '../../services/emailSettings';\nimport { toast } from 'react-toastify';\nimport { Context } from '../../context/context';\nimport { addMenu, disableRefetch, setRefetch } from '../../redux/slices/menu';\nimport moment from 'moment';\nimport { EditOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport hideEmail from '../../components/hideEmail';\nimport useDemo from '../../helpers/useDemo';\nimport DeleteButton from '../../components/delete-button';\n\nexport default function EmailProvider() {\n  const { t } = useTranslation();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [id, setId] = useState(null);\n  const [modalType, setModalType] = useState('delete'); // delete | active\n  const { setIsModalVisible } = useContext(Context);\n  const { isDemo } = useDemo();\n  const { emailProvider, loading } = useSelector(\n    (state) => state.emailProvider,\n    shallowEqual,\n  );\n\n  const goToAddEmailProviders = () => {\n    dispatch(\n      addMenu({\n        id: 'add_email_providers',\n        url: `settings/emailProviders/add`,\n        name: t('add_email_providers'),\n      }),\n    );\n    navigate(`/settings/emailProviders/add`);\n  };\n\n  function goToEditEmailProviders(row) {\n    dispatch(\n      addMenu({\n        url: `settings/emailProviders/${row.id}`,\n        id: 'edit_email_providers',\n        name: t('edit.email.providers'),\n      }),\n    );\n    navigate(`/settings/emailProviders/${row.id}`, { state: 'edit' });\n  }\n\n  const columns = [\n    {\n      title: t('from_site'),\n      dataIndex: 'from_site',\n      key: 'from_site',\n    },\n    {\n      title: t('from.to'),\n      dataIndex: 'from_to',\n      key: 'from_to',\n      render: (from_to) => (isDemo ? hideEmail(from_to) : from_to),\n    },\n    {\n      title: t('active'),\n      dataIndex: 'active',\n      render: (active, row) => {\n        return (\n          <Switch\n            onChange={() => {\n              setModalType('active');\n              setIsModalVisible(true);\n              setId(row.id);\n            }}\n            disabled={row.deleted_at}\n            checked={active}\n          />\n        );\n      },\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (created_at) => moment(created_at).format('YYYY-MM-DD'),\n    },\n    {\n      title: t('options'),\n      key: 'id',\n      dataIndex: 'id',\n      is_show: true,\n      render: (id, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => goToEditEmailProviders(row)}\n            />\n            <DeleteButton onClick={() => confirmDelete(id)} />\n          </Space>\n        );\n      },\n    },\n  ];\n\n  const confirmDelete = (id) => {\n    if (!id) {\n      toast.warning(t('no.id'));\n    } else {\n      setModalType('delete');\n      setId([id]);\n      setIsModalVisible(true);\n    }\n  };\n\n  const handleDeleteConditions = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        })),\n      ),\n    };\n    emailService\n      .delete(params)\n      .then(() => {\n        setId(null);\n        setIsModalVisible(false);\n        toast.success(t('successfully.deleted'));\n        dispatch(setRefetch(activeMenu));\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const setDefaultLang = () => {\n    setLoadingBtn(true);\n    emailService\n      .setActive(id)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        setIsModalVisible(false);\n        dispatch(fetchEmailProvider());\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchEmailProvider());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card\n      title={t('email.provider')}\n      extra={\n        <Space>\n          <Button\n            icon={<PlusCircleOutlined />}\n            type='primary'\n            onClick={goToAddEmailProviders}\n          >\n            {t('add.email.provider')}\n          </Button>\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        columns={columns}\n        dataSource={emailProvider}\n        rowKey={(record) => record.id}\n        loading={loading}\n        pagination={false}\n      />\n      <CustomModal\n        click={modalType === 'delete' ? handleDeleteConditions : setDefaultLang}\n        text={\n          modalType === 'delete'\n            ? t('are.you.sure.to.delete')\n            : t('set.active.email.provider')\n        }\n      />\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","hideEmail","email","_maskedEmail","_firstThreeChar$conca","firstThreeChar","slice","domainIndexStart","lastIndexOf","maskedEmail","replace","domainPlusPreviousChar","length","concat","EmailProvider","loadingBtn","setLoadingBtn","useState","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","navigate","useNavigate","id","setId","modalType","setModalType","setIsModalVisible","useContext","Context","emailProvider","loading","columns","title","dataIndex","key","render","from_to","active","row","Switch","onChange","disabled","deleted_at","checked","created_at","moment","format","is_show","_jsxs","Space","children","EditOutlined","addMenu","url","name","goToEditEmailProviders","confirmDelete","useEffect","refetch","fetchEmailProvider","disableRefetch","Card","extra","PlusCircleOutlined","goToAddEmailProviders","Table","scroll","x","dataSource","rowKey","record","pagination","CustomModal","click","handleDeleteConditions","params","Object","assign","map","item","index","emailService","then","setRefetch","finally","setDefaultLang","text","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName"],"sourceRoot":""}