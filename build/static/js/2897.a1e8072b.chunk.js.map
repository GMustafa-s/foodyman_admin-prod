{"version":3,"file":"static/js/2897.a1e8072b.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","components/rive-result.js","views/pages/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useRive } from 'rive-react';\nimport noproductsfound from '../assets/rive/noproductsfound.riv';\nimport noresult from '../assets/rive/noresult.riv';\nimport nosell from '../assets/rive/nosell.riv';\n\nfunction RiveResult({ id = 'noresult', text = '' }) {\n  const { t } = useTranslation();\n  const src = {\n    noproductsfound: noproductsfound,\n    noresult: noresult,\n    nosell: nosell,\n  };\n  const riveParams = {\n    src: src[id],\n    artboard: 'New Artboard',\n    autoplay: true,\n  };\n\n  const { RiveComponent } = useRive(riveParams);\n  return (\n    <div className='animation-canvas'>\n      <div style={{ width: '100%', height: 200 }}>\n        <RiveComponent />\n      </div>\n      <div className='text text-center'>{t(text)}</div>\n    </div>\n  );\n}\n\nexport default RiveResult;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Card, Image, Space, Table } from 'antd';\nimport { IMG_URL } from 'configs/app-global';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomModal from 'components/modal';\nimport { Context } from 'context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { addMenu, disableRefetch } from 'redux/slices/menu';\nimport pagesService from 'services/pages';\nimport { fetchPages } from 'redux/slices/pages';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport DeleteButton from 'components/delete-button';\nimport FilterColumns from 'components/filter-column';\nimport RiveResult from 'components/rive-result';\n\nconst Page = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { setIsModalVisible } = useContext(Context);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { pages, meta, loading } = useSelector(\n    (state) => state.pages,\n    shallowEqual\n  );\n  const [id, setId] = useState(null);\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n    },\n    {\n      title: t('image'),\n      dataIndex: 'img',\n      key: 'img',\n      is_show: true,\n      render: (img, row) => {\n        return (\n          <Image\n            src={!row.deleted_at ? IMG_URL + img : 'https://fakeimg.pl/640x360'}\n            alt='img_gallery'\n            width={100}\n            className='rounded'\n            preview\n            placeholder\n          />\n        );\n      },\n    },\n    {\n      title: t('type'),\n      dataIndex: 'type',\n      key: 'type',\n      is_show: true,\n      render: (type) => type.toUpperCase(),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => (\n        <Space>\n          <Button\n            type='primary'\n            icon={<EditOutlined />}\n            onClick={() => goToEdit(row)}\n            disabled={row.deleted_at}\n          />\n          <DeleteButton\n            disabled={row.deleted_at}\n            icon={<DeleteOutlined />}\n            onClick={() => {\n              setIsModalVisible(true);\n              setId([row.type]);\n            }}\n          />\n        </Space>\n      ),\n    },\n  ]);\n\n  const goToAddBanners = () => {\n    dispatch(\n      addMenu({\n        id: 'page_add',\n        url: 'page/add',\n        name: t('add.page'),\n      })\n    );\n    navigate('/page/add');\n  };\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        id: 'page_edit',\n        url: `page/${row.id}`,\n        name: t('edit.page'),\n      })\n    );\n    navigate(`/page/${row.id}`);\n  };\n\n  const pageDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    pagesService\n      .delete(params)\n      .then(() => {\n        dispatch(fetchPages());\n        toast.success(t('successfully.deleted'));\n        setIsModalVisible(false);\n      })\n      .finally(() => {\n        setLoadingBtn(false);\n      });\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchPages());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  const onChangePagination = (pageNumber) => {\n    const { pageSize, current } = pageNumber;\n    dispatch(fetchPages({ perPage: pageSize, page: current }));\n  };\n\n  return (\n    <Card\n      title={t('pages')}\n      navLInkTo={''}\n      extra={\n        <Space wrap>\n          <Button\n            type='primary'\n            icon={<PlusCircleOutlined />}\n            onClick={goToAddBanners}\n          >\n            {t('add.pages')}\n          </Button>\n\n          <FilterColumns setColumns={setColumns} columns={columns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={pages}\n        loading={loading}\n        pagination={{\n          pageSize: meta.per_page,\n          page: meta.current_page,\n          total: meta.total,\n        }}\n        rowKey={(record) => record.id}\n        locale={{\n          emptyText: <RiveResult />,\n        }}\n        onChange={onChangePagination}\n      />\n      <CustomModal\n        click={pageDelete}\n        text={t('delete')}\n        loading={loadingBtn}\n        setText={setId}\n      />\n    </Card>\n  );\n};\n\nexport default Page;\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","id","text","riveParams","src","noproductsfound","noresult","nosell","artboard","autoplay","RiveComponent","useRive","width","height","Page","dispatch","useDispatch","navigate","useNavigate","setIsModalVisible","useContext","Context","loadingBtn","setLoadingBtn","activeMenu","useSelector","state","shallowEqual","pages","meta","loading","setId","render","img","row","Image","deleted_at","IMG_URL","alt","preview","placeholder","toUpperCase","_","EditOutlined","goToEdit","addMenu","url","name","useEffect","refetch","fetchPages","disableRefetch","Card","navLInkTo","extra","wrap","PlusCircleOutlined","goToAddBanners","FilterColumns","Table","scroll","x","filter","dataSource","pagination","pageSize","per_page","page","current_page","total","rowKey","record","locale","emptyText","RiveResult","pageNumber","current","perPage","CustomModal","click","pageDelete","params","Object","assign","index","pagesService","then","finally","setText","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}