{"version":3,"file":"static/js/686.89e8e47d.chunk.js","mappings":"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","sources":["views/parcel-order/parcel-order-add.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Form, Steps } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { steps } from './steps';\nimport ParcelSender from './parcel-sender';\nimport ParcelReceiver from './parcel-receiver';\nimport ParcelDetails from './parcel-details';\nimport { useQueryParams } from 'helpers/useQueryParams';\nimport { useDispatch } from 'react-redux';\nimport { removeFromMenu, setMenuData } from 'redux/slices/menu';\nimport getDefaultLocation from 'helpers/getDefaultLocation';\nimport moment from 'moment';\nimport parcelOrderService from 'services/parcelOrder';\nimport { fetchParcelOrders } from 'redux/slices/parcelOrders';\nimport { toast } from 'react-toastify';\n\nconst { Step } = Steps;\n\nexport default function ParcelOrderAdd() {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const queryParams = useQueryParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { settings } = useSelector(\n    (state) => state.globalSettings,\n    shallowEqual\n  );\n  const { defaultCurrency } = useSelector(\n    (state) => state.currency,\n    shallowEqual\n  );\n  const current = Number(queryParams.values?.step || 0);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [image, setImage] = useState(activeMenu?.data?.images || []);\n  const [locationFrom, setLocationFrom] = useState(\n    activeMenu?.data?.location_from\n      ? {\n          lat: parseFloat(activeMenu?.data?.location_from?.latitude),\n          lng: parseFloat(activeMenu?.data?.location_from?.longitude),\n        }\n      : getDefaultLocation(settings)\n  );\n  const [locationTo, setLocationTo] = useState(\n    activeMenu?.data?.location_to\n      ? {\n          lat: parseFloat(activeMenu?.data?.location_to?.latitude),\n          lng: parseFloat(activeMenu?.data?.location_to?.longitude),\n        }\n      : getDefaultLocation(settings)\n  );\n\n  useEffect(() => {\n    return () => {\n      const values = form.getFieldsValue(true);\n      const date = JSON.stringify(values.delivery_date);\n      const time = JSON.stringify(values.delivery_time);\n      const data = { ...values, date, time };\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n  }, []);\n\n  const next = () => {\n    const step = current + 1;\n    queryParams.set('step', step);\n  };\n  const prev = () => {\n    const step = current - 1;\n    queryParams.set('step', step);\n  };\n\n  const onChange = (step) => {\n    queryParams.set('step', step);\n  };\n\n  const onFinish = (values) => {\n    console.log('values => ', values);\n    setLoadingBtn(true);\n    const payload = {\n      user_id: values.user_from?.value,\n      currency_id: defaultCurrency?.id,\n      type_id: values.type?.value,\n      rate: defaultCurrency?.rate,\n      phone_from: values.phone_from.toString(),\n      username_from: values.username_from,\n      address_from: {\n        longitude: locationFrom?.lng,\n        latitude: locationFrom?.lat,\n        address: values.address_from,\n        house: values.house_from,\n        stage: values.stage_from,\n        room: values.room_from,\n      },\n      phone_to: values.phone_to.toString(),\n      username_to: values.username_to,\n      address_to: {\n        longitude: locationTo?.lng,\n        latitude: locationTo?.lat,\n        address: values.address_to,\n        house: values.house_to,\n        stage: values.stage_to,\n        room: values.room_to,\n      },\n      delivery_date: moment(values.delivery_date).format('YYYY-MM-DD'),\n      delivery_time: moment(values.delivery_time, 'HH:mm').format('HH:mm'),\n      note: values.note,\n      images: image.map((item) => item.name),\n    };\n    const payment = {\n      payment_sys_id: values.payment_type.value,\n    };\n    parcelOrderService\n      .create(payload)\n      .then((res) => createTransaction(res.data.id, payment))\n      .catch(() => setLoadingBtn(false));\n  };\n\n  function createTransaction(id, data) {\n    const nextUrl = 'parcel-orders';\n    parcelOrderService\n      .transaction(id, data)\n      .then(() => {\n        dispatch(fetchParcelOrders());\n        toast.success(t('successfully.created'));\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        navigate(`/${nextUrl}`);\n      })\n      .finally(() => setLoadingBtn(false));\n  }\n\n  const onFinishFailed = (event) => {\n    const steps = ['', '', ''];\n    const fields = event.errorFields.map((item) => item.name[0]);\n    fields.forEach((el) => {\n      if (el.includes('_from')) {\n        steps[0] = 'sender.details.invalid';\n        return;\n      }\n      if (el.includes('_to')) {\n        steps[1] = 'receiver.details.invalid';\n        return;\n      }\n      steps[2] = 'parcel.details.invalid';\n    });\n    steps.forEach((item) => {\n      if (item) toast.error(t(item));\n    });\n  };\n\n  return (\n    <Card title={t('add.parcel.order')}>\n      <Steps current={current} onChange={onChange}>\n        {steps.map((item) => (\n          <Step title={t(item.title)} key={item.title} />\n        ))}\n      </Steps>\n\n      <div className='steps-content'>\n        <Form\n          form={form}\n          name='parcel-create'\n          layout='vertical'\n          onFinish={onFinish}\n          initialValues={{\n            ...activeMenu.data,\n          }}\n          onFinishFailed={onFinishFailed}\n        >\n          <div\n            className={\n              steps[current].content === 'First-content' ? '' : 'd-none'\n            }\n          >\n            <ParcelSender\n              form={form}\n              next={next}\n              location={locationFrom}\n              setLocation={setLocationFrom}\n            />\n          </div>\n          <div\n            className={\n              steps[current].content === 'Second-content' ? '' : 'd-none'\n            }\n          >\n            <ParcelReceiver\n              form={form}\n              next={next}\n              prev={prev}\n              location={locationTo}\n              setLocation={setLocationTo}\n            />\n          </div>\n          <div\n            className={\n              steps[current].content === 'Third-content' ? '' : 'd-none'\n            }\n          >\n            <ParcelDetails\n              form={form}\n              loading={loadingBtn}\n              prev={prev}\n              locationFrom={locationFrom}\n              locationTo={locationTo}\n              image={image}\n              setImage={setImage}\n            />\n          </div>\n        </Form>\n      </div>\n    </Card>\n  );\n}\n"],"names":["Step","Steps","ParcelOrderAdd","_queryParams$values","_activeMenu$data","_activeMenu$data2","_activeMenu$data3","_activeMenu$data3$loc","_activeMenu$data4","_activeMenu$data4$loc","_activeMenu$data5","_activeMenu$data6","_activeMenu$data6$loc","_activeMenu$data7","_activeMenu$data7$loc","t","useTranslation","form","Form","queryParams","useQueryParams","dispatch","useDispatch","navigate","useNavigate","activeMenu","useSelector","state","menu","shallowEqual","settings","globalSettings","defaultCurrency","currency","current","Number","values","step","loadingBtn","setLoadingBtn","useState","image","setImage","data","images","locationFrom","setLocationFrom","location_from","lat","parseFloat","latitude","lng","longitude","getDefaultLocation","locationTo","setLocationTo","location_to","useEffect","getFieldsValue","date","JSON","stringify","delivery_date","time","delivery_time","setMenuData","next","set","prev","_jsxs","Card","title","children","_jsx","onChange","steps","item","className","name","layout","onFinish","_values$user_from","_values$type","console","log","payload","user_id","user_from","value","currency_id","id","type_id","type","rate","phone_from","toString","username_from","address_from","address","house","house_from","stage","stage_from","room","room_from","phone_to","username_to","address_to","house_to","stage_to","room_to","moment","format","note","map","payment","payment_sys_id","payment_type","parcelOrderService","then","res","nextUrl","fetchParcelOrders","toast","removeFromMenu","finally","createTransaction","catch","initialValues","onFinishFailed","event","errorFields","forEach","el","includes","content","ParcelSender","location","setLocation","ParcelReceiver","ParcelDetails","loading"],"sourceRoot":""}