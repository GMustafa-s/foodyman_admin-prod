{"version":3,"file":"static/js/6408.e5167a4e.chunk.js","mappings":"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","sources":["views/recipe-categories/category-clone.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Form, Spin } from 'antd';\nimport { toast } from 'react-toastify';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport LanguageList from 'components/language-list';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, removeFromMenu, setMenuData } from 'redux/slices/menu';\nimport categoryService from 'services/category';\nimport { useTranslation } from 'react-i18next';\nimport { fetchRecipeCategories } from 'redux/slices/recipe-category';\nimport getTranslationFields from 'helpers/getTranslationFields';\nimport RecipeCategoryForm from './category-form';\n\nconst RecipeCategoryClone = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const [error, setError] = useState(null);\n  const { uuid } = useParams();\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const createImage = (name) => {\n    return {\n      name,\n      url: name,\n    };\n  };\n\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.description,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  const getCategory = (alias) => {\n    setLoading(true);\n    categoryService\n      .getById(alias)\n      .then((res) => {\n        let category = res.data;\n\n        const body = {\n          ...category,\n          ...getLanguageFields(category),\n          image: category?.img?.length ? [createImage(category?.img)] : [],\n          keywords: category.keywords.split(','),\n          input: category.input ? category?.input : 0,\n        };\n        dispatch(setMenuData({ activeMenu, data: body }));\n        form.setFieldsValue(body);\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const handleSubmit = (values, image) => {\n    const body = {\n      type: 'receipt',\n      title: getTranslationFields(languages, values),\n      description: getTranslationFields(languages, values, 'description'),\n      keywords: values?.keywords?.join(','),\n      input: values?.input ?? 0,\n      images: image?.map((item) => item?.name),\n      active: values?.active ? 1 : 0,\n      parent_id: undefined,\n    };\n    const nextUrl = 'catalog/recipe-categories';\n\n    categoryService\n      .create(body)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        batch(() => {\n          dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n          dispatch(fetchRecipeCategories({}));\n        });\n        navigate(`/${nextUrl}`);\n      })\n      .catch((err) => setError(err.response.data.params));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      getCategory(uuid);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('recipe.category.clone')} extra={<LanguageList />}>\n      {!loading ? (\n        <RecipeCategoryForm\n          form={form}\n          handleSubmit={handleSubmit}\n          error={error}\n        />\n      ) : (\n        <div className='d-flex justify-content-center align-items-center py-5'>\n          <Spin size='large' className='mt-5 pt-5' />\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default RecipeCategoryClone;\n"],"names":["RecipeCategoryClone","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","activeMenu","useSelector","state","menu","shallowEqual","loading","setLoading","useState","form","Form","error","setError","uuid","useParams","languages","formLang","useEffect","data","getFieldsValue","setMenuData","getLanguageFields","translations","result","map","item","_translations$find","_translations$find2","locale","find","el","title","description","Object","assign","alias","refetch","categoryService","then","res","_category$img","category","body","image","img","length","name","url","keywords","split","input","setFieldsValue","finally","disableRefetch","_jsx","Card","extra","LanguageList","children","className","Spin","size","RecipeCategoryForm","handleSubmit","values","_values$keywords","_values$input","type","getTranslationFields","join","images","active","parent_id","undefined","nextUrl","toast","batch","removeFromMenu","fetchRecipeCategories","catch","err","response","params"],"sourceRoot":""}