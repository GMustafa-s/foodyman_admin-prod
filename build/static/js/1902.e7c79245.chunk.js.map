{"version":3,"file":"static/js/1902.e7c79245.chunk.js","mappings":"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","sources":["components/delete-button.js","components/filter-column.js","helpers/formatSortType.js","views/parcel-types/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport useDemo from '../helpers/useDemo';\n\nexport default function DeleteButton({\n  size = '',\n  onClick,\n  type = 'default',\n  ...props\n}) {\n  const { t } = useTranslation();\n  const { isDemo } = useDemo();\n\n  const handleClick = (e) => {\n    if (isDemo) {\n      toast.warning(t('cannot.work.demo'));\n      return;\n    }\n    onClick(e);\n  };\n\n  return (\n    <Button\n      size={size}\n      icon={<DeleteOutlined />}\n      onClick={handleClick}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Card, Space, Table } from 'antd';\nimport { shallowEqual, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { addMenu, disableRefetch, setMenuData } from 'redux/slices/menu';\nimport { fetchParcelTypes } from 'redux/slices/parcelTypes';\nimport DeleteButton from 'components/delete-button';\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport FilterColumns from 'components/filter-column';\nimport CustomModal from 'components/modal';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport { Context } from 'context/context';\nimport parcelTypeService from 'services/parcelType';\nimport { toast } from 'react-toastify';\nimport formatSortType from 'helpers/formatSortType';\n\nexport default function ParcelTypes() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [id, setId] = useState(null);\n  const [text, setText] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const { setIsModalVisible } = useContext(Context);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const data = activeMenu?.data;\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    pageSize: data?.per_page,\n    page: data?.page || 1,\n  };\n\n  const {\n    data: types,\n    loading,\n    meta,\n  } = useSelector((state) => state.parcelTypes, shallowEqual);\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      is_show: true,\n    },\n    {\n      title: t('title'),\n      dataIndex: 'type',\n      key: 'type',\n      is_show: true,\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EditOutlined />}\n              onClick={() => goToEdit(row)}\n            />\n            <DeleteButton\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setId([row.id]);\n                setIsModalVisible(true);\n                setText(true);\n              }}\n            />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const goToEdit = (row) => {\n    dispatch(\n      addMenu({\n        url: `parcel-types/${row.id}`,\n        id: 'edit-parcel-type',\n        name: t('edit.parcel.type'),\n      })\n    );\n    navigate(`/parcel-types/${row.id}`);\n  };\n\n  const goToAdd = () => {\n    dispatch(\n      addMenu({\n        id: 'add-parcel-type',\n        url: `parcel-types/add`,\n        name: t(`add.parcel.type`),\n      })\n    );\n    navigate(`/parcel-types/add`);\n  };\n\n  const deliveryDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n\n    parcelTypeService\n      .delete(params)\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchParcelTypes(paramsData));\n        setIsModalVisible(false);\n        setText(null);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu?.refetch) {\n      dispatch(fetchParcelTypes(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu?.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchParcelTypes(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filters, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...data, perPage, page, column, sort },\n      })\n    );\n  }\n\n  const rowSelection = {\n    selectedRowKeys: id,\n    onChange: (key) => {\n      setId(key);\n    },\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  return (\n    <Card\n      title={t('parcel.types')}\n      extra={\n        <Space>\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n          <Button\n            type='primary'\n            icon={<PlusCircleOutlined />}\n            onClick={goToAdd}\n          >\n            {t('add.parcel.type')}\n          </Button>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={types}\n        pagination={{\n          pageSize: meta.per_page,\n          page: data?.page || 1,\n          total: meta.total,\n          defaultCurrent: data?.page,\n          current: activeMenu.data?.page,\n        }}\n        rowKey={(res) => res.id}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n      <CustomModal\n        click={deliveryDelete}\n        text={text ? t('delete') : t('all.delete')}\n        setText={setId}\n        loading={loadingBtn}\n      />\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["DeleteButton","_ref","size","onClick","type","props","t","useTranslation","isDemo","useDemo","_jsx","Button","icon","DeleteOutlined","e","toast","Text","Typography","columns","setColumns","style","iconOnly","open","setOpen","useState","menu","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","TableOutlined","formatSortType","ParcelTypes","_activeMenu$data","navigate","useNavigate","dispatch","useDispatch","id","setId","text","setText","loadingBtn","setLoadingBtn","setIsModalVisible","useContext","Context","activeMenu","useSelector","state","shallowEqual","data","paramsData","sort","column","pageSize","per_page","page","types","loading","meta","parcelTypes","render","_","row","EditOutlined","goToEdit","addMenu","url","name","useEffect","refetch","fetchParcelTypes","disableRefetch","useDidUpdate","rowSelection","selectedRowKeys","Card","extra","allDelete","length","PlusCircleOutlined","goToAdd","FilterColumns","Table","scroll","x","filter","dataSource","pagination","total","defaultCurrent","current","rowKey","res","filters","sorter","perPage","field","order","setMenuData","CustomModal","click","deliveryDelete","params","Object","assign","index","parcelTypeService","then","finally","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName","TableOutlinedSvg"],"sourceRoot":""}