{"version":3,"file":"static/js/4876.43d48901.chunk.js","mappings":"0SAYe,SAASA,IACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACR,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,KACpD,UAAEC,IAAcJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMI,UAAUF,EAAAA,IACvDG,GAAWC,EAAAA,EAAAA,OACVC,GAAQC,EAAAA,EAAAA,UACTC,GAAWC,EAAAA,EAAAA,MAWjB,SAASC,EAAqBC,GAA0B,IAAlBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAC5C,MAAMG,EAAOd,EAAUe,KAAKC,IAAI,CAC9B,CAACA,EAAKC,QAASR,EAAO,GAAGC,KAASM,EAAKC,eAEzC,OAAOC,OAAOC,OAAO,MAAOL,IAb9BM,EAAAA,EAAAA,YAAU,IACD,KACL,MAAMC,EAAOjB,EAAKkB,gBAAe,GAEjCpB,GAASqB,EAAAA,EAAAA,IAAY,CAAE5B,WAAAA,EAAY0B,KAAAA,OAGpC,IA4BH,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAOjC,EAAE,oBAAqBkC,OAAOH,EAAAA,EAAAA,KAACI,EAAAA,EAAY,IAAIC,UAC1DL,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,CAAC1B,KAAMA,EAAM2B,aArBZtB,IACpB,MAAMuB,EAAO,CACXC,KAAM,eACNP,MAAOlB,EAAqBC,GAC5ByB,YAAa1B,EAAqBC,EAAQ,eAC1C0B,WAAY3B,EAAqBC,EAAQ,eAErC2B,EAAU,gBAEhB,OAAOC,EAAAA,EAAAA,OAAmBL,GAAMM,MAAK,KACnCC,EAAAA,GAAAA,QAAc9C,EAAE,0BAChB+C,EAAAA,EAAAA,KAAM,KACJtC,GAASuC,EAAAA,EAAAA,IAAe,IAAK9C,EAAYyC,QAAAA,KACzClC,GAASwC,EAAAA,EAAAA,GAAmB,QAE9BpC,EAAS,IAAI8B","sources":["views/notification/notification-add.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from '../../redux/slices/menu';\nimport { fetchNotifications } from '../../redux/slices/notification';\nimport blogService from '../../services/blog';\nimport LanguageList from '../../components/language-list';\nimport { useTranslation } from 'react-i18next';\nimport NotificationForm from './notification-form';\n\nexport default function NotificationAdd() {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getTranslationFields(values, field = 'title') {\n    const list = languages.map((item) => ({\n      [item.locale]: values[`${field}[${item.locale}]`],\n    }));\n    return Object.assign({}, ...list);\n  }\n\n  const handleSubmit = (values) => {\n    const body = {\n      type: 'notification',\n      title: getTranslationFields(values),\n      description: getTranslationFields(values, 'description'),\n      short_desc: getTranslationFields(values, 'short_desc'),\n    };\n    const nextUrl = 'notifications';\n\n    return blogService.create(body).then(() => {\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchNotifications({}));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.notification')} extra={<LanguageList />}>\n      <NotificationForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n}\n"],"names":["NotificationAdd","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","languages","formLang","dispatch","useDispatch","form","Form","navigate","useNavigate","getTranslationFields","values","field","arguments","length","undefined","list","map","item","locale","Object","assign","useEffect","data","getFieldsValue","setMenuData","_jsx","Card","title","extra","LanguageList","children","NotificationForm","handleSubmit","body","type","description","short_desc","nextUrl","blogService","then","toast","batch","removeFromMenu","fetchNotifications"],"sourceRoot":""}