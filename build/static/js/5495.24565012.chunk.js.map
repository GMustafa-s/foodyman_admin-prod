{"version":3,"file":"static/js/5495.24565012.chunk.js","mappings":"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","sources":["components/global-container.js","views/order-status/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Card } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { addMenu } from '../redux/slices/menu';\nimport { PlusCircleOutlined } from '@ant-design/icons';\n\nconst GlobalContainer = ({\n  children,\n  containerName,\n  headerTitle,\n  subtitle,\n  navLInkTo,\n  buttonTitle,\n  state,\n}) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const addMenuItem = () => {\n    let url = '';\n    const linkArr = navLInkTo.split('');\n    if (linkArr[0] === '/') {\n      linkArr.shift();\n    }\n    url = linkArr.join('');\n    const data = { id: url, url, name: buttonTitle };\n    dispatch(addMenu(data));\n    navigate(navLInkTo);\n  };\n\n  return (\n    <div className={containerName}>\n      <Card\n        title={headerTitle}\n        extra={\n          buttonTitle ? (\n            <Button\n              type='primary'\n              icon={<PlusCircleOutlined />}\n              onClick={addMenuItem}\n            >\n              {buttonTitle}\n            </Button>\n          ) : null\n        }\n      >\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default GlobalContainer;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Switch, Table } from 'antd';\nimport GlobalContainer from '../../components/global-container';\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch } from '../../redux/slices/menu';\nimport OrderStatusService from '../../services/orderStatus';\nimport { fetchOrderStatus } from '../../redux/slices/orderStatus';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\n\nconst OrderStatus = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: t('name'),\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: t('active'),\n      dataIndex: 'active',\n      key: 'active',\n      render: (active, row) => {\n    \n        return (\n          <Switch\n            key={row.id + active}\n            onChange={() => {\n              setIsModalVisible(true);\n              setActiveId(row.id);\n            }}\n            checked={active}\n          />\n        );\n      },\n    },\n  ];\n\n  const { setIsModalVisible } = useContext(Context);\n  const [activeId, setActiveId] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { statusList, loading } = useSelector(\n    (state) => state.orderStatus,\n    shallowEqual\n  );\n\n  const handleActive = () => {\n    setLoadingBtn(true);\n    OrderStatusService.status(activeId)\n      .then(() => {\n        setIsModalVisible(false);\n        dispatch(fetchOrderStatus());\n        toast.success(t('successfully.updated'));\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchOrderStatus());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n\n  return (\n    <GlobalContainer headerTitle={t('order.status')}>\n      <Table\n        scroll={{ x: true }}\n        columns={columns}\n        dataSource={statusList}\n        rowKey={(record) => record.id}\n        loading={loading}\n      />\n      <CustomModal\n        click={handleActive}\n        text={t('set.active.order.status')}\n        loading={loadingBtn}\n      />\n    </GlobalContainer>\n  );\n};\n\nexport default OrderStatus;\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);"],"names":["_ref","children","containerName","headerTitle","subtitle","navLInkTo","buttonTitle","state","dispatch","useDispatch","navigate","useNavigate","_jsx","className","Card","title","extra","Button","type","icon","PlusCircleOutlined","onClick","addMenuItem","url","linkArr","split","shift","join","data","id","name","addMenu","OrderStatus","t","useTranslation","columns","dataIndex","key","render","active","row","Switch","onChange","setIsModalVisible","setActiveId","checked","useContext","Context","activeId","useState","loadingBtn","setLoadingBtn","activeMenu","useSelector","menu","shallowEqual","statusList","loading","orderStatus","useEffect","refetch","fetchOrderStatus","disableRefetch","_jsxs","GlobalContainer","Table","scroll","x","dataSource","rowKey","record","CustomModal","click","handleActive","OrderStatusService","then","toast","finally","text","props","ref","React","AntdIcon","_objectSpread","PlusCircleOutlinedSvg","displayName"],"sourceRoot":""}