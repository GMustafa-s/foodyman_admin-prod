{"version":3,"file":"static/js/8645.d17cdb26.chunk.js","mappings":"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","sources":["components/forms/product/stock/set-all.js","components/forms/product/stock/list.js","components/forms/product/stock/filter.js","components/forms/product/stock/index.js","helpers/product-stock.js","components/rive-result.js","helpers/generateShortUUID.js"],"sourcesContent":["import { Button, Col, Form, Input, InputNumber, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { DebounceSelect } from 'components/search';\nimport React from 'react';\nimport generateRandomNumbers from 'helpers/generateRandomNumbers';\n\nconst randomNumbersLength = 6;\n\nconst assignObject = (obj, key, value) =>\n  obj.map((item = {}) => ({ ...item, [key]: value }));\n\nconst StockSetAll = ({ form, fetchAddonOptions }) => {\n  const { t } = useTranslation();\n  const { defaultCurrency } = useSelector(\n    (state) => state.currency,\n    shallowEqual,\n  );\n\n  const handleSetAllSku = (generateRandom, value) => {\n    const skuValue = generateRandom\n      ? generateRandomNumbers(randomNumbersLength)\n      : value;\n    const { stocks } = form.getFieldsValue();\n    form.setFieldsValue({\n      all_sku: skuValue,\n      stocks: assignObject(stocks, 'sku', skuValue),\n    });\n  };\n\n  const handleSetAllQuantity = (value) => {\n    const { stocks } = form.getFieldsValue();\n    form.setFieldsValue({ stocks: assignObject(stocks, 'quantity', value) });\n  };\n\n  const handleSetAllPrice = (value) => {\n    const { stocks } = form.getFieldsValue();\n    form.setFieldsValue({ stocks: assignObject(stocks, 'price', value) });\n  };\n\n  const handleSetAllAddons = (value) => {\n    const { stocks } = form.getFieldsValue();\n    form.setFieldsValue({\n      stocks: assignObject(stocks, 'addons', value),\n    });\n  };\n\n  return (\n    <Row gutter={12}>\n      <Col style={{ width: 200 }}>\n        <Form.Item label={t('set.all.skus')} name='all_sku'>\n          <Input onChange={(e) => handleSetAllSku(false, e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col>\n        <Form.Item label=' '>\n          <Button onClick={handleSetAllSku}>{t('generate.sku')}</Button>\n        </Form.Item>\n      </Col>\n      <Col style={{ width: 200 }}>\n        <Form.Item label={t('set.all.quantities')} name='all_quantity'>\n          <InputNumber onChange={handleSetAllQuantity} className='w-100' />\n        </Form.Item>\n      </Col>\n      <Col style={{ width: 200 }}>\n        <Form.Item\n          label={`${t('set.all.prices')} (${defaultCurrency?.symbol})`}\n          name='all_price'\n        >\n          <InputNumber onChange={handleSetAllPrice} className='w-100' />\n        </Form.Item>\n      </Col>\n      <Col style={{ width: 200 }}>\n        <Form.Item label={t('set.all.addons')} name='all_addon'>\n          <DebounceSelect\n            mode='multiple'\n            style={{ minWidth: '300px' }}\n            fetchOptions={fetchAddonOptions}\n            allowClear={true}\n            onChange={handleSetAllAddons}\n          />\n        </Form.Item>\n      </Col>\n    </Row>\n  );\n};\n\nexport default StockSetAll;\n","import { Button, Col, Form, Input, InputNumber, Row, Select } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { DebounceSelect } from 'components/search';\nimport { deleteStockFromStocks } from 'redux/slices/product';\n\nconst ProductStockList = ({ fetchAddonOptions, form }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { defaultCurrency } = useSelector(\n    (state) => state.currency,\n    shallowEqual,\n  );\n\n  const handleDeleteStock = ({ remove, field }) => {\n    const deletedStockValue = form.getFieldsValue()?.stocks?.[field?.name];\n    dispatch(deleteStockFromStocks(deletedStockValue));\n    remove(field.name);\n  };\n\n  return (\n    <Form.List name='stocks'>\n      {(fields, { remove }) => {\n        return (\n          <div>\n            {fields.map((field, index) => {\n              return (\n                <Row\n                  key={field.key}\n                  gutter={12}\n                  align='middle'\n                  style={{ flexWrap: 'nowrap', overflowX: 'auto' }}\n                  hidden={!activeMenu.data?.extras?.length && field.key}\n                >\n                  {activeMenu.data?.extras?.map((item, idx) => (\n                    <Col key={'extra' + item.value}>\n                      <Form.Item\n                        label={item?.label}\n                        name={[index, `extras[${idx}]`]}\n                        rules={[{ required: true, message: t('required') }]}\n                      >\n                        <Select\n                          disabled\n                          className='w-100'\n                          style={{ minWidth: 200 }}\n                        />\n                      </Form.Item>\n                    </Col>\n                  ))}\n                  <Col>\n                    <Form.Item\n                      label={t('addons')}\n                      name={[index, 'addons']}\n                      rules={[{ required: false, message: t('required') }]}\n                    >\n                      <DebounceSelect\n                        mode='multiple'\n                        style={{ minWidth: '300px', maxWidth: '300px' }}\n                        fetchOptions={fetchAddonOptions}\n                        allowClear={true}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <Form.Item label={t('sku')} name={[index, 'sku']}>\n                      <Input className='w-100' style={{ minWidth: 200 }} />\n                    </Form.Item>\n                  </Col>\n\n                  <Col>\n                    <Form.Item\n                      label={t('quantity')}\n                      name={[index, 'quantity']}\n                      rules={[{ required: true, message: t('required') }]}\n                    >\n                      <InputNumber\n                        min={0}\n                        className='w-100'\n                        style={{ minWidth: 200 }}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <Form.Item\n                      label={`${t('price')} (${defaultCurrency?.symbol})`}\n                      name={[index, 'price']}\n                      rules={[{ required: true, message: t('requried') }]}\n                    >\n                      <InputNumber\n                        min={0}\n                        className='w-100'\n                        style={{ minWidth: 200 }}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      hidden\n                      label={t('id')}\n                      name={[index, 'stock_id']}\n                    >\n                      <InputNumber />\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <Form.Item label={t('tax')} name={[index, 'tax']}>\n                      <InputNumber\n                        className='w-100'\n                        disabled\n                        style={{ minWidth: 200 }}\n                        addonAfter='%'\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <Form.Item\n                      noStyle\n                      shouldUpdate={(prevValues, nextValues) =>\n                        prevValues?.stocks?.[field.name]?.price !==\n                        nextValues?.stocks?.[field.name]?.price\n                      }\n                    >\n                      {({ getFieldValue }) => {\n                        const tax =\n                          getFieldValue(['stocks', field.name, 'tax']) || 0;\n\n                        const price = getFieldValue([\n                          'stocks',\n                          field.name,\n                          'price',\n                        ]);\n                        const totalPrice =\n                          tax === 0 ? price : (price * tax) / 100 + price;\n                        return (\n                          <Form.Item\n                            label={`${t('total.price')} (${\n                              defaultCurrency?.symbol\n                            })`}\n                          >\n                            <InputNumber\n                              min={1}\n                              disabled\n                              value={totalPrice}\n                              className='w-100'\n                              style={{ minWidth: 200 }}\n                            />\n                          </Form.Item>\n                        );\n                      }}\n                    </Form.Item>\n                  </Col>\n                  {!!activeMenu.data?.extras?.length && (\n                    <Col>\n                      <Button\n                        type='primary'\n                        className='mt-2'\n                        danger\n                        icon={<DeleteOutlined />}\n                        onClick={() => handleDeleteStock({ remove, field })}\n                      />\n                    </Col>\n                  )}\n                </Row>\n              );\n            })}\n          </div>\n        );\n      }}\n    </Form.List>\n  );\n};\n\nexport default ProductStockList;\n","import { Button, Card, Col, Form, Row, Select } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  setFilters,\n  setFilteredStocks,\n  resetFilters,\n  resetFilteredStocks,\n  deleteFilter,\n  updateFormStocks,\n} from 'redux/slices/product';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport { useTranslation } from 'react-i18next';\n\nconst ProductStockFilter = ({ form, extras }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { filters, stocks, filteredStocks } = useSelector(\n    (state) => state.product.form,\n    shallowEqual,\n  );\n  // handles reset set all form fields\n  const handleClearSetAll = () => {\n    form.setFieldsValue({\n      all_sku: null,\n      all_quantity: null,\n      all_price: null,\n      all_addon: [],\n    });\n  };\n  // handle filter changes\n  const handleChange = (extra, value) => {\n    // updating form changes to stocks state\n    const fieldValues = form.getFieldsValue()?.stocks;\n    if (fieldValues?.length) {\n      dispatch(updateFormStocks(fieldValues));\n    }\n    // filtering\n    if (!value) {\n      if (Object.values(filters)?.length === 1) {\n        handleClearFilter(false);\n        return;\n      }\n      dispatch(deleteFilter(extra?.value));\n      return;\n    }\n    const selectedExtraValue = extra?.values?.find(\n      (item) => item?.value === value?.value,\n    );\n    batch(() => {\n      dispatch(setFilters({ [extra?.value]: selectedExtraValue }));\n    });\n    handleClearSetAll();\n  };\n  // reset filters to initial state\n  const handleClearFilter = (withUpdateStocks = true) => {\n    const fieldValues = form.getFieldsValue()?.stocks;\n    batch(() => {\n      if (fieldValues?.length && withUpdateStocks) {\n        dispatch(updateFormStocks(fieldValues));\n      }\n      dispatch(resetFilters());\n      dispatch(resetFilteredStocks());\n    });\n    // reset set all form fields\n    handleClearSetAll();\n  };\n  // updating filtered stocks\n  useDidUpdate(() => {\n    if (!Object.values(filters)?.length) {\n      return;\n    }\n    const localeFilteredStocks = stocks?.filter((stock) =>\n      Object.values(filters)?.every((filter) =>\n        stock?.extras?.find((extra) => extra?.value === filter?.value),\n      ),\n    );\n    dispatch(setFilteredStocks(localeFilteredStocks));\n  }, [filters, stocks]);\n\n  // setting filtered stocks data to form to show user\n  useDidUpdate(() => {\n    form.setFieldsValue({\n      stocks: Object.values(filters)?.length ? filteredStocks : stocks,\n    });\n  }, [filteredStocks]);\n\n  return (\n    <Card>\n      <Row gutter={12}>\n        {extras?.map((extra) => (\n          <Col style={{ width: 250 }} key={extra?.value}>\n            <Form.Item label={extra?.label}>\n              <Select\n                allowClear\n                labelInValue\n                options={extra?.values}\n                onChange={(value) => handleChange(extra, value)}\n                value={filters?.[extra?.value]?.value}\n              />\n            </Form.Item>\n          </Col>\n        ))}\n        <Col>\n          <Form.Item label=' '>\n            <Button onClick={handleClearFilter}>{t('clear.filter')}</Button>\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n\nexport default ProductStockFilter;\n","import { Button, Card, Collapse, Form, Space } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport productService from 'services/product';\nimport sellerProductService from 'services/seller/product';\nimport cartesian from 'helpers/cartesian';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setActiveMenu, setMenuData } from 'redux/slices/menu';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport {\n  resetDeletedIds,\n  resetFilteredStocks,\n  resetFilters,\n  resetFormStocks,\n  setFormStocks,\n} from 'redux/slices/product';\nimport { useTranslation } from 'react-i18next';\nimport RiveResult from 'components/rive-result';\nimport { getUpdatedStocks } from 'helpers/product-stock';\nimport { toast } from 'react-toastify';\nimport SetAll from './set-all';\nimport ProductStockList from './list';\nimport ProductStockFilter from './filter';\n\nconst localProductService = (userRole) => {\n  switch (userRole) {\n    case 'seller':\n      return sellerProductService;\n    default:\n      return productService;\n  }\n};\n\nconst StockForm = ({ next, prev, isRequest, userRole = 'admin' }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { uuid } = useParams();\n  const [form] = Form.useForm();\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { stocks, filteredStocks, filters, deletedIds } = useSelector(\n    (state) => state.product.form,\n    shallowEqual,\n  );\n\n  const [loading, setLoading] = useState(false);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  const fetchProduct = () => {\n    setLoading(true);\n    localProductService(userRole)\n      .getById(uuid)\n      .then((res) => {\n        const additionalStocks = cartesian(\n          activeMenu?.data.extras?.map((extra) => extra.values || []),\n        );\n\n        const parsedAdditionalStocks = additionalStocks.map(\n          (additionalStock, i) => {\n            if (\n              additionalStock.every(\n                (itemValue) => typeof itemValue.stock_id !== 'undefined',\n              )\n            ) {\n              const selectedStock = res.data.stocks.find((stock) => {\n                return stock.extras.every((extra) => {\n                  return additionalStock.some(\n                    (addStock) => addStock.value === extra.id,\n                  );\n                });\n              });\n              const selectedAddons = [];\n              selectedStock?.addons?.forEach((item) => {\n                if (item.product) {\n                  selectedAddons.push({\n                    label: item?.product?.translation?.title || item?.label,\n                    value: item?.product?.id || item?.value,\n                  });\n                }\n              });\n              return {\n                price: selectedStock?.price || 0,\n                quantity: selectedStock?.quantity || 0,\n                sku: selectedStock?.sku,\n                stock_id: selectedStock?.id,\n                tax: activeMenu?.data.tax || 0,\n                extras: additionalStock,\n                addons: selectedAddons,\n                fieldKey: i,\n                ...Object.assign(\n                  {},\n                  ...additionalStock.map((extra, idx) => ({\n                    [`extras[${idx}]`]: {\n                      label: extra.label,\n                      value: extra.value,\n                    },\n                  })),\n                ),\n              };\n            }\n\n            return {\n              price: 0,\n              quantity: 0,\n              sku: activeMenu?.data?.sku,\n              tax: activeMenu.data?.tax || 0,\n              extras: additionalStock,\n              fieldKey: i,\n              addons: [],\n              ...Object.assign(\n                {},\n                ...additionalStock.map((extra, idx) => ({\n                  [`extras[${idx}]`]: {\n                    label: extra.label,\n                    value: extra.value,\n                  },\n                })),\n              ),\n            };\n          },\n        );\n        let defaultStock = [];\n        if (additionalStocks.length === 0 && res.data.stocks?.length !== 0) {\n          const stockWithoutExtras = res.data.stocks?.at(0);\n          const selectedAddons = [];\n          stockWithoutExtras?.addons?.forEach((item) => {\n            if (item.product) {\n              selectedAddons.push({\n                label: item?.product?.translation?.title || item?.label,\n                value: item?.product?.id || item?.value,\n              });\n            }\n          });\n          defaultStock = [\n            {\n              price: stockWithoutExtras?.price || 0,\n              quantity: stockWithoutExtras?.quantity || 0,\n              sku: stockWithoutExtras?.sku,\n              tax: activeMenu.data?.tax || 0,\n              addons: stockWithoutExtras ? selectedAddons : [],\n            },\n          ];\n        }\n        if (additionalStocks.length === 0 && res.data.stocks?.length === 0) {\n          defaultStock = [\n            {\n              price: undefined,\n              quantity: 0,\n              sku: activeMenu?.data?.sku,\n              tax: activeMenu.data?.tax || 0,\n              addons: [],\n            },\n          ];\n        }\n        const stocks = defaultStock.concat(parsedAdditionalStocks);\n        batch(() => {\n          dispatch(setFormStocks(stocks));\n          dispatch(resetDeletedIds());\n          dispatch(resetFilters());\n          dispatch(resetFilteredStocks());\n        });\n        form.setFieldsValue({\n          stocks,\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const onFinish = (values) => {\n    const { stocks: formStocks } = values;\n    const actualStock = stocks?.some((stock) => !!stock?.extras?.length)\n      ? getUpdatedStocks(formStocks, stocks, deletedIds)\n      : formStocks;\n\n    let extras;\n    if (activeMenu.data?.extras?.length) {\n      extras = actualStock.map((item) => ({\n        price: item?.price,\n        quantity: item?.quantity,\n        sku: item?.sku,\n        ids: isRequest\n          ? activeMenu.data?.extras.map((_, idx) => item[`extras[${idx}]`])\n          : activeMenu.data?.extras.map(\n              (_, idx) => item?.[`extras[${idx}]`]?.value,\n            ),\n        addons: item?.addons\n          ? isRequest\n            ? item?.addons?.map((i) => i)\n            : item?.addons?.map((i) => i?.value)\n          : [],\n        stock_id: item?.stock_id,\n      }));\n    } else {\n      extras = [\n        {\n          price: actualStock?.[0]?.price,\n          quantity: actualStock?.[0]?.quantity,\n          addons: actualStock?.[0]?.addons\n            ? isRequest\n              ? actualStock?.[0]?.addons.map((i) => i)\n              : actualStock?.[0]?.addons.map((i) => i?.value)\n            : [],\n          stock_id: actualStock?.[0]?.stock_id,\n          sku: actualStock?.[0]?.sku,\n          ids: [],\n        },\n      ];\n    }\n    if (isRequest) {\n      dispatch(\n        setMenuData({\n          activeMenu,\n          data: { ...activeMenu.data, stocks: extras, delete_ids: deletedIds },\n        }),\n      );\n      next();\n      return;\n    }\n    setLoadingBtn(true);\n    localProductService(userRole)\n      .stocks(uuid, { extras, delete_ids: deletedIds })\n      .then((res) => {\n        batch(() => {\n          const localStocks = res?.data?.stocks;\n          const newExtras = localStocks?.flatMap((item) => item.extras);\n          const extraValues = newExtras.map((item) => ({\n            ...item?.value,\n            stock_id: item?.stock_id,\n            group_type: item?.group?.type,\n          }));\n          const extraGroup = newExtras?.find(\n            (item) => item.group.type === 'color',\n          );\n          dispatch(\n            setActiveMenu({\n              ...activeMenu,\n              data: {\n                ...activeMenu.data,\n                newExtras: [{ group: extraGroup?.group, values: extraValues }],\n                stocks: extras,\n                delete_ids: deletedIds,\n              },\n              refetch: true,\n            }),\n          );\n          dispatch(resetFilters());\n          dispatch(resetFilteredStocks());\n          dispatch(resetFormStocks());\n          dispatch(resetDeletedIds());\n        });\n        toast.success(t('successfully.updated'));\n        next();\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const fetchAddonOptions = async (search) => {\n    const params = {\n      search,\n      addon: 1,\n      shop_id: activeMenu?.data?.shop_id,\n      'statuses[0]': 'published',\n      'statuses[1]': 'pending',\n      active: 1,\n    };\n    const addons =\n      (await localProductService(userRole)\n        .getAll(params)\n        .then((res) =>\n          res.data.map((item) => ({\n            label: item?.translation?.title,\n            value: item?.id,\n          })),\n        )) || [];\n\n    return addons?.length\n      ? [{ label: t('all.addons'), value: 'all', key: 'all' }, ...addons]\n      : [];\n  };\n\n  useEffect(() => {\n    fetchProduct();\n    dispatch(disableRefetch(activeMenu));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uuid]);\n\n  useDidUpdate(() => {\n    if (activeMenu.refetch) {\n      fetchProduct();\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  return (\n    <Form onFinish={onFinish} form={form} layout='vertical'>\n      {!!activeMenu.data?.extras?.length && (\n        <Card>\n          <SetAll form={form} fetchAddonOptions={fetchAddonOptions} />\n        </Card>\n      )}\n      {!!activeMenu.data?.extras?.length && (\n        <ProductStockFilter extras={activeMenu.data?.extras} form={form} />\n      )}\n      <Card loading={loading}>\n        <Collapse defaultActiveKey={['stocks']}>\n          <Collapse.Panel key='stocks' header={t('stocks')}>\n            {!Object.values(filters)?.length || !!filteredStocks?.length ? (\n              <ProductStockList\n                fetchAddonOptions={fetchAddonOptions}\n                form={form}\n              />\n            ) : (\n              <RiveResult />\n            )}\n          </Collapse.Panel>\n        </Collapse>\n      </Card>\n      <Card>\n        <Space>\n          <Button onClick={prev}>{t('prev')}</Button>\n          <Button type='primary' htmlType='submit' loading={loadingBtn}>\n            {t('next')}\n          </Button>\n        </Space>\n      </Card>\n    </Form>\n  );\n};\n\nexport default StockForm;\n","export const getUpdatedStocks = (formStocks, stocks, deletedIds) => {\n  return stocks\n    ?.map((stock) => {\n      const formStock = formStocks?.find((formStock) =>\n        stock?.extras?.every((stockExtra) =>\n          formStock?.extras?.find(\n            (formExtra) => formExtra?.value === stockExtra?.value,\n          ),\n        ),\n      );\n\n      return formStock || stock;\n    })\n    ?.filter((stock) => !deletedIds?.includes(stock?.stock_id));\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useRive } from 'rive-react';\nimport noproductsfound from '../assets/rive/noproductsfound.riv';\nimport noresult from '../assets/rive/noresult.riv';\nimport nosell from '../assets/rive/nosell.riv';\n\nfunction RiveResult({ id = 'noresult', text = '' }) {\n  const { t } = useTranslation();\n  const src = {\n    noproductsfound: noproductsfound,\n    noresult: noresult,\n    nosell: nosell,\n  };\n  const riveParams = {\n    src: src[id],\n    artboard: 'New Artboard',\n    autoplay: true,\n  };\n\n  const { RiveComponent } = useRive(riveParams);\n  return (\n    <div className='animation-canvas'>\n      <div style={{ width: '100%', height: 200 }}>\n        <RiveComponent />\n      </div>\n      <div className='text text-center'>{t(text)}</div>\n    </div>\n  );\n}\n\nexport default RiveResult;\n","export const generateShortUUID = (length = 8) => {\n  const chars =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * chars.length);\n    result += chars[randomIndex];\n  }\n\n  return result;\n};\n"],"names":["assignObject","obj","key","value","map","item","arguments","length","undefined","_ref","form","fetchAddonOptions","t","useTranslation","defaultCurrency","useSelector","state","currency","shallowEqual","handleSetAllSku","generateRandom","skuValue","generateRandomNumbers","stocks","getFieldsValue","setFieldsValue","all_sku","_jsxs","Row","gutter","children","_jsx","Col","style","width","Form","label","name","Input","onChange","e","target","Button","onClick","InputNumber","className","symbol","DebounceSelect","mode","minWidth","fetchOptions","allowClear","dispatch","useDispatch","activeMenu","menu","fields","_ref3","remove","field","index","_activeMenu$data","_activeMenu$data$extr","_activeMenu$data2","_activeMenu$data2$ext","_activeMenu$data3","_activeMenu$data3$ext","align","flexWrap","overflowX","hidden","data","extras","idx","rules","required","message","Select","disabled","maxWidth","min","addonAfter","noStyle","shouldUpdate","prevValues","nextValues","_prevValues$stocks","_prevValues$stocks$fi","_nextValues$stocks","_nextValues$stocks$fi","price","_ref4","getFieldValue","tax","totalPrice","type","danger","icon","DeleteOutlined","_ref2","_form$getFieldsValue","_form$getFieldsValue$","deletedStockValue","deleteStockFromStocks","handleDeleteStock","filters","filteredStocks","product","handleClearSetAll","all_quantity","all_price","all_addon","handleClearFilter","_form$getFieldsValue2","withUpdateStocks","fieldValues","batch","updateFormStocks","resetFilters","resetFilteredStocks","useDidUpdate","_Object$values2","Object","values","localeFilteredStocks","filter","stock","_Object$values3","every","_stock$extras","find","extra","setFilteredStocks","_Object$values4","Card","_filters$extra$value","labelInValue","options","handleChange","_extra$values","_Object$values","deleteFilter","selectedExtraValue","setFilters","localProductService","userRole","sellerProductService","productService","_activeMenu$data10","_activeMenu$data10$ex","_activeMenu$data11","_activeMenu$data11$ex","_activeMenu$data12","next","prev","isRequest","uuid","useParams","deletedIds","loading","setLoading","useState","loadingBtn","setLoadingBtn","fetchProduct","getById","then","res","_res$data$stocks","_res$data$stocks3","additionalStocks","cartesian","parsedAdditionalStocks","additionalStock","i","itemValue","stock_id","_selectedStock$addons","selectedStock","some","addStock","id","selectedAddons","addons","forEach","_item$product","_item$product$transla","_item$product2","push","translation","title","quantity","sku","fieldKey","assign","defaultStock","_res$data$stocks2","_stockWithoutExtras$a","stockWithoutExtras","at","_item$product3","_item$product3$transl","_item$product4","_activeMenu$data4","_activeMenu$data5","concat","setFormStocks","resetDeletedIds","finally","async","_activeMenu$data9","params","search","addon","shop_id","active","getAll","_item$translation","useEffect","disableRefetch","refetch","onFinish","_activeMenu$data6","_activeMenu$data6$ext","formStocks","actualStock","getUpdatedStocks","_stocks$map","formStock","stockExtra","_formStock$extras","formExtra","includes","_actualStock$","_actualStock$2","_actualStock$3","_actualStock$4","_actualStock$5","_actualStock$6","_actualStock$7","_activeMenu$data7","_activeMenu$data8","_item$addons","_item$addons2","ids","_","_item","setMenuData","delete_ids","_res$data","localStocks","newExtras","flatMap","extraValues","_item$group","group_type","group","extraGroup","setActiveMenu","resetFormStocks","toast","layout","SetAll","ProductStockFilter","Collapse","defaultActiveKey","header","ProductStockList","RiveResult","Space","htmlType","text","riveParams","src","noproductsfound","noresult","nosell","artboard","autoplay","RiveComponent","useRive","height","generateShortUUID","chars","result","Math","floor","random"],"sourceRoot":""}