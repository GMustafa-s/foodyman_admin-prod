{"version":3,"file":"static/js/8489.72c4ada5.chunk.js","mappings":"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","sources":["views/reviews/deliveryBoyReviews.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Button, Card, Rate, Space, Table } from 'antd';\nimport { toast } from 'react-toastify';\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { addMenu, disableRefetch, setMenuData } from '../../redux/slices/menu';\nimport useDidUpdate from '../../helpers/useDidUpdate';\nimport formatSortType from '../../helpers/formatSortType';\nimport { useTranslation } from 'react-i18next';\nimport reviewService from '../../services/review';\nimport OrderReviewShowModal from './orderReviewShow';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteButton from '../../components/delete-button';\nimport FilterColumns from '../../components/filter-column';\nimport { fetchDeliveryboyReviews } from '../../redux/slices/deliveryboyReview';\n\nexport default function DeliveryBoyReviews() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const goToDetail = (row) => {\n    dispatch(\n      addMenu({\n        url: `/users/user/${row.uuid}`,\n        id: 'user_info',\n        name: t('user.info'),\n      })\n    );\n    navigate(`/users/user/${row.uuid}`, { state: { user_id: row.id } });\n  };\n\n  const goToOrder = (id) => {\n    dispatch(\n      addMenu({\n        id: 'order_details',\n        url: `order/details/${id}`,\n        name: t('order.details'),\n      })\n    );\n    navigate(`/order/details/${id}`);\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('user'),\n      dataIndex: 'assign_user',\n      key: 'assign_user',\n      is_show: true,\n      render: (assign_user) => (\n        <div className='text-hover' onClick={() => goToDetail(assign_user)}>\n          {assign_user?.firstname} {assign_user?.lastname || ''}\n        </div>\n      ),\n    },\n    {\n      title: t('deliveryman'),\n      dataIndex: 'user',\n      key: 'user',\n      is_show: true,\n      render: (user) => (\n        <div className='text-hover' onClick={() => goToDetail(user)}>\n          {user?.firstname} {user?.lastname || ''}\n        </div>\n      ),\n    },\n    {\n      title: t('rating'),\n      dataIndex: 'rating',\n      key: 'rating',\n      is_show: true,\n      render: (rating) => <Rate allowHalf disabled defaultValue={rating} />,\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n      render: (createdAt) => moment(createdAt).format('YYYY-MM-DD HH:mm'),\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (_, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              icon={<EyeOutlined />}\n              onClick={() => setShow(row.id)}\n            />\n            <DeleteButton\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setId([row.id]);\n                setIsModalVisible(true);\n                setText(true);\n              }}\n            />\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [show, setShow] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [text, setText] = useState(null);\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { reviews, meta, loading, params } = useSelector(\n    (state) => state.deliveryboyReview,\n    shallowEqual\n  );\n  const data = activeMenu.data;\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n    assign: 'deliveryman',\n  };\n\n  const reviewDelete = () => {\n    setLoadingBtn(true);\n    const params = {\n      ...Object.assign(\n        {},\n        ...id.map((item, index) => ({\n          [`ids[${index}]`]: item,\n        }))\n      ),\n    };\n    reviewService\n      .delete(params)\n      .then(() => {\n        toast.success(t('successfully.deleted'));\n        dispatch(fetchDeliveryboyReviews());\n        setIsModalVisible(false);\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchDeliveryboyReviews(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchDeliveryboyReviews(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filters, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({ activeMenu, data: { perPage, page, column, sort } })\n    );\n  }\n\n  const onSelectChange = (newSelectedRowKeys) => {\n    setId(newSelectedRowKeys);\n  };\n\n  const rowSelection = {\n    id,\n    onChange: onSelectChange,\n  };\n\n  const allDelete = () => {\n    if (id === null || id.length === 0) {\n      toast.warning(t('select.the.product'));\n    } else {\n      setIsModalVisible(true);\n      setText(false);\n    }\n  };\n\n  return (\n    <Card\n      title={t('deliveryboy.reviews')}\n      extra={\n        <Space wrap>\n          <DeleteButton size='' onClick={allDelete}>\n            {t('delete.selected')}\n          </DeleteButton>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        rowSelection={rowSelection}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={reviews}\n        pagination={{\n          pageSize: params.perPage,\n          page: params.page,\n          total: meta.total,\n          defaultCurrent: params.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n      <CustomModal\n        click={reviewDelete}\n        text={text ? t('delete') : t('all.delete')}\n        setText={setId}\n        loading={loadingBtn}\n      />\n      {show && (\n        <OrderReviewShowModal id={show} handleCancel={() => setShow(null)} />\n      )}\n    </Card>\n  );\n}\n"],"names":["DeliveryBoyReviews","t","useTranslation","dispatch","useDispatch","navigate","useNavigate","goToDetail","row","addMenu","url","uuid","id","name","state","user_id","columns","setColumns","useState","title","dataIndex","key","sorter","is_show","render","assign_user","_jsxs","className","onClick","children","firstname","lastname","user","rating","_jsx","Rate","allowHalf","disabled","defaultValue","createdAt","moment","format","_","Space","Button","type","icon","EyeOutlined","setShow","DeleteButton","DeleteOutlined","setId","setIsModalVisible","setText","useContext","Context","show","loadingBtn","setLoadingBtn","text","activeMenu","useSelector","menu","shallowEqual","reviews","meta","loading","params","deliveryboyReview","data","paramsData","sort","column","perPage","page","assign","useEffect","refetch","fetchDeliveryboyReviews","disableRefetch","useDidUpdate","rowSelection","onChange","newSelectedRowKeys","Card","extra","wrap","size","allDelete","length","toast","FilterColumns","Table","scroll","x","filter","item","dataSource","pagination","pageSize","total","defaultCurrent","rowKey","record","filters","current","field","order","formatSortType","setMenuData","CustomModal","click","reviewDelete","Object","map","index","reviewService","then","finally","OrderReviewShowModal","handleCancel"],"sourceRoot":""}