{"version":3,"file":"static/js/2590.151d19fc.chunk.js","mappings":"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","sources":["views/banners/banner-edit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form, Spin } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  disableRefetch,\n  removeFromMenu,\n  setMenuData,\n} from '../../redux/slices/menu';\nimport { fetchBanners } from '../../redux/slices/banner';\nimport bannerService from '../../services/banner';\nimport { useTranslation } from 'react-i18next';\nimport LanguageList from '../../components/language-list';\nimport getTranslationFields from '../../helpers/getTranslationFields';\nimport BannerForm from './banner-form';\n\nconst BannerEdit = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n\n  const createImages = (items) =>\n    items.map((item) => ({\n      uid: item.id,\n      name: item.path,\n      url: item.path,\n    }));\n\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.title,\n      [`description[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.description,\n      [`button_text[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale,\n      )?.button_text,\n    }));\n    return Object.assign({}, ...result);\n  }\n\n  const getBanner = (alias) => {\n    setLoading(true);\n    bannerService\n      .getById(alias)\n      .then((res) => {\n        let banner = res.data;\n\n        const data = {\n          ...banner,\n          img: createImages(banner.galleries),\n          shops: banner?.shops?.map((item) => ({\n            label: item.translation?.title,\n            value: item.id,\n          })),\n          ...getLanguageFields(banner),\n        };\n        form.setFieldsValue(data);\n        dispatch(setMenuData({ activeMenu, data }));\n      })\n      .finally(() => {\n        dispatch(disableRefetch(activeMenu));\n        setLoading(false);\n      });\n  };\n\n  const handleSubmit = (values, image) => {\n    const nextUrl = 'banners';\n    const paramsData = {\n      status: 'published',\n    };\n    const body = {\n      url: values.url,\n      shops: values?.shops?.map((i) => i.value),\n      images: image?.map((image) => image.name),\n      clickable: values.clickable,\n      title: getTranslationFields(languages, values, 'title'),\n      description: getTranslationFields(languages, values, 'description'),\n      button_text: getTranslationFields(languages, values, 'button_text'),\n    };\n\n    return bannerService.update(id, body).then(() => {\n      toast.success(t('successfully.updated'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchBanners(paramsData));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  useEffect(() => {\n    if (activeMenu?.refetch) {\n      getBanner(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu?.refetch]);\n\n  return (\n    <Card title={t('edit.banner')} className='h-100' extra={<LanguageList />}>\n      {!loading ? (\n        <BannerForm form={form} handleSubmit={handleSubmit} />\n      ) : (\n        <div className='d-flex justify-content-center align-items-center'>\n          <Spin size='large' className='py-5' />\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default BannerEdit;\n"],"names":["BannerEdit","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","dispatch","useDispatch","form","Form","navigate","useNavigate","id","useParams","loading","setLoading","useState","languages","formLang","getLanguageFields","data","translations","result","map","item","_translations$find","_translations$find2","_translations$find3","locale","find","el","title","description","button_text","Object","assign","useEffect","alias","refetch","bannerService","then","res","_banner$shops","banner","img","items","galleries","uid","name","path","url","shops","_item$translation","label","translation","value","setFieldsValue","setMenuData","finally","disableRefetch","_jsx","Card","className","extra","LanguageList","children","Spin","size","BannerForm","handleSubmit","values","image","_values$shops","nextUrl","paramsData","status","body","i","images","clickable","getTranslationFields","toast","batch","removeFromMenu","fetchBanners"],"sourceRoot":""}