{"version":3,"file":"static/js/2906.9451575b.chunk.js","mappings":"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","sources":["views/brands/brand-form.js","views/brands/brands-add.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Col, Form, Input, Row, Switch } from 'antd';\nimport MediaUpload from '../../components/upload';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nexport default function BrandForm({ form, handleSubmit }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  // states\n  const [image, setImage] = useState(\n    activeMenu.data?.image ? activeMenu.data?.image : [],\n  );\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  // submit form\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    handleSubmit(values, image).finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Form\n      name='basic'\n      layout='vertical'\n      onFinish={onFinish}\n      form={form}\n      initialValues={{ active: true, ...activeMenu.data }}\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <Form.Item\n            label={t('title')}\n            name={'title'}\n            rules={[\n              {\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.reject(new Error(t('required')));\n                  } else if (value && value?.trim() === '') {\n                    return Promise.reject(new Error(t('no.empty.space')));\n                  } else if (value && value?.trim().length < 2) {\n                    return Promise.reject(new Error(t('must.be.at.least.2')));\n                  }\n                  return Promise.resolve();\n                },\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <Form.Item\n            label={t('image')}\n            name='images'\n            rules={[\n              {\n                validator() {\n                  if (image?.length === 0) {\n                    return Promise.reject(new Error(t('required')));\n                  }\n                  return Promise.resolve();\n                },\n              },\n            ]}\n          >\n            <MediaUpload\n              type='brands'\n              imageList={image}\n              setImageList={setImage}\n              form={form}\n              multiple={false}\n            />\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <div className='col-md-12 col-sm-6'>\n            <Form.Item\n              label={t('active')}\n              name='active'\n              valuePropName='checked'\n            >\n              <Switch />\n            </Form.Item>\n          </div>\n        </Col>\n      </Row>\n      <Button type='primary' htmlType='submit' loading={loadingBtn}>\n        {t('submit')}\n      </Button>\n    </Form>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from '../../redux/slices/menu';\nimport brandService from '../../services/brand';\nimport { fetchBrands } from '../../redux/slices/brand';\nimport { useTranslation } from 'react-i18next';\nimport BrandForm from './brand-form';\n\nconst BrandsAdd = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (values, image) => {\n    const nextUrl = 'catalog/brands';\n    const paramsData = {\n      status: 'published',\n    };\n    const body = {\n      ...values,\n      active: values.active ? 1 : 0,\n      'images[0]': image[0]?.name,\n    };\n\n    return brandService.create(body).then(() => {\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchBrands(paramsData));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.brand')}>\n      <BrandForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n};\n\nexport default BrandsAdd;\n"],"names":["BrandForm","_ref","_activeMenu$data","_activeMenu$data2","form","handleSubmit","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","image","setImage","useState","data","loadingBtn","setLoadingBtn","_jsxs","Form","name","layout","onFinish","values","finally","initialValues","active","children","Row","gutter","_jsx","Col","span","label","rules","validator","_","value","trim","Promise","reject","Error","length","resolve","Input","MediaUpload","type","imageList","setImageList","multiple","className","valuePropName","Switch","Button","htmlType","loading","BrandsAdd","dispatch","useDispatch","navigate","useNavigate","useEffect","getFieldsValue","setMenuData","Card","title","_image$","nextUrl","paramsData","status","body","brandService","then","toast","batch","removeFromMenu","fetchBrands"],"sourceRoot":""}