{"version":3,"file":"static/js/5721.81249c71.chunk.js","mappings":"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","sources":["components/filter-column.js","helpers/formatSortType.js","views/seller-views/invites/invite-modal.js","views/seller-views/invites/index.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  Menu,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { TableOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\nconst FilterColumns = ({\n  columns = [],\n  setColumns,\n  style,\n  size = '',\n  iconOnly,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const menu = (\n    <Menu>\n      {columns?.map((item, key) => (\n        <Menu.Item key={item + key}>\n          <Space className='d-flex justify-content-between'>\n            <Text>{item.title}</Text>\n            <Switch\n              defaultChecked\n              onClick={() => onChange(item)}\n              disabled={\n                // item.title === 'Title' ||\n                // item.title === 'Name' ||\n                // item.title === 'Client'\n                key === 1\n              }\n            />\n          </Space>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleVisibleChange = (flag) => {\n    setOpen(flag);\n  };\n  function onChange(checked) {\n    const newArray = columns?.map((item) => {\n      if (item.dataIndex === checked.dataIndex) {\n        item.is_show = !item?.is_show;\n      }\n      return item;\n    });\n    setColumns(newArray);\n  }\n\n  return (\n    <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      onVisibleChange={handleVisibleChange}\n      visible={open}\n    >\n      <Tooltip title={t('change.columns')}>\n        <Button style={{ ...style }} size={size} icon={<TableOutlined />}>\n          {iconOnly ? null : t('Columns')}\n        </Button>\n      </Tooltip>\n    </Dropdown>\n  );\n};\n\nexport default FilterColumns;\n","export default function formatSortType(type) {\n  switch (type) {\n    case 'ascend':\n      return 'asc';\n\n    case 'descend':\n      return 'desc';\n\n    default:\n      break;\n  }\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Modal, Radio } from 'antd';\nimport inviteService from '../../../services/seller/invites';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { fetchInvites } from '../../../redux/slices/invite';\n\nexport default function InviteModal({ inviteId: data, handleCancel }) {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  const onFinish = (values) => {\n    const params = {\n      role: values.role,\n    };\n    setLoadingBtn(true);\n    inviteService\n      .statusUpdate(data.id, params)\n      .then(() => {\n        handleCancel();\n        dispatch(fetchInvites());\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Modal\n      title={t('accept.invite')}\n      visible={!!data}\n      onCancel={handleCancel}\n      footer={[\n        <Button\n          type='primary'\n          onClick={() => form.submit()}\n          loading={loadingBtn}\n          key='save-btn'\n        >\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel} key='cancel-btn'>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form form={form} layout='vertical' onFinish={onFinish}>\n        <Form.Item label={t('user')}>\n          <Input\n            value={data.user.firstname + ' ' + data.user.lastname}\n            disabled\n          />\n        </Form.Item>\n        <Form.Item\n          label={t('select.role')}\n          name='role'\n          rules={[{ required: true, message: t('required') }]}\n        >\n          <Radio.Group optionType='button'>\n            <Radio value={'moderator'}>{t('moderator')}</Radio>\n            <Radio value={'deliveryman'}>{t('deliveryman')}</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Card, Space, Table, Tag } from 'antd';\nimport inviteService from '../../../services/seller/invites';\nimport InviteModal from './invite-modal';\nimport { Context } from '../../../context/context';\nimport CustomModal from '../../../components/modal';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { fetchInvites } from '../../../redux/slices/invite';\nimport { disableRefetch, setMenuData } from '../../../redux/slices/menu';\nimport formatSortType from '../../../helpers/formatSortType';\nimport useDidUpdate from '../../../helpers/useDidUpdate';\nimport { useTranslation } from 'react-i18next';\nimport FilterColumns from '../../../components/filter-column';\n\nexport default function Invites() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { loading, invites, params, meta } = useSelector(\n    (state) => state.invite,\n    shallowEqual\n  );\n  const [inviteId, setInviteId] = useState(null);\n  const { setIsModalVisible } = useContext(Context);\n  const [id, setId] = useState(null);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('fullname'),\n      dataIndex: 'user',\n      key: 'user',\n      is_show: true,\n      render: (user) => (\n        <>\n          {user?.firstname} {user?.lastname || ''}\n        </>\n      ),\n    },\n    {\n      title: t('role'),\n      dataIndex: 'role',\n      key: 'role',\n      is_show: true,\n    },\n    {\n      title: t('status'),\n      dataIndex: 'status',\n      key: 'status',\n      is_show: true,\n      render: (status) => (\n        <Tag\n          color={\n            status === 'rejected' ? 'red' : status === 'new' ? 'blue' : 'cyan'\n          }\n        >\n          {t(status)}\n        </Tag>\n      ),\n    },\n    {\n      title: t('created.at'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      is_show: true,\n    },\n    {\n      title: t('options'),\n      key: 'options',\n      dataIndex: 'options',\n      is_show: true,\n      render: (data, row) => {\n        return (\n          <Space>\n            <Button\n              type='primary'\n              onClick={() => setInviteId(row)}\n              disabled={row.status === 'excepted'}\n            >\n              {t('accept')}\n            </Button>\n            <Button\n              type='primary'\n              danger\n              onClick={() => {\n                setIsModalVisible(true);\n                setId(row.id);\n              }}\n              disabled={row.status === 'rejected'}\n            >\n              {t('reject')}\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ]);\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      dispatch(fetchInvites());\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  function onChangePagination(pagination, filters, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({ activeMenu, data: { perPage, page, column, sort } })\n    );\n  }\n\n  useDidUpdate(() => {\n    const data = activeMenu.data;\n    const paramsData = {\n      sort: data?.sort,\n      column: data?.column,\n      perPage: data?.perPage,\n      page: data?.page,\n    };\n    dispatch(fetchInvites(paramsData));\n  }, [activeMenu.data]);\n\n  function rejectInvite() {\n    setLoadingBtn(true);\n    inviteService\n      .statusUpdate(id)\n      .then(() => {\n        setIsModalVisible(false);\n        setId(null);\n        dispatch(fetchInvites());\n      })\n      .finally(() => setLoadingBtn(false));\n  }\n\n  return (\n    <Card\n      title={t('invites')}\n      extra={\n        <Space>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={invites}\n        pagination={{\n          pageSize: params.perPage,\n          page: params.page,\n          total: meta.total,\n          defaultCurrent: params.page,\n        }}\n        rowKey={(record) => record.id}\n        onChange={onChangePagination}\n        loading={loading}\n      />\n\n      {!!inviteId && (\n        <InviteModal\n          inviteId={inviteId}\n          handleCancel={() => setInviteId(null)}\n        />\n      )}\n\n      <CustomModal\n        click={rejectInvite}\n        text={t('reject.invite')}\n        loading={loadingBtn}\n      />\n    </Card>\n  );\n}\n","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\n\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["Text","Typography","_ref","columns","setColumns","style","size","iconOnly","t","useTranslation","open","setOpen","useState","menu","_jsx","Menu","children","map","item","key","_jsxs","Space","className","title","Switch","defaultChecked","onClick","checked","newArray","dataIndex","is_show","onChange","disabled","Dropdown","overlay","trigger","onVisibleChange","flag","visible","Tooltip","Button","icon","TableOutlined","formatSortType","type","InviteModal","inviteId","data","handleCancel","form","Form","dispatch","useDispatch","loadingBtn","setLoadingBtn","Modal","onCancel","footer","submit","loading","layout","onFinish","values","params","role","inviteService","id","then","fetchInvites","finally","label","Input","value","user","firstname","lastname","name","rules","required","message","Radio","optionType","Invites","activeMenu","useSelector","state","shallowEqual","invites","meta","invite","setInviteId","setIsModalVisible","useContext","Context","setId","sorter","render","_Fragment","status","Tag","color","row","danger","useEffect","refetch","disableRefetch","useDidUpdate","paramsData","sort","column","perPage","page","Card","extra","FilterColumns","Table","scroll","x","filter","dataSource","pagination","pageSize","total","defaultCurrent","rowKey","record","filters","current","field","order","setMenuData","CustomModal","click","text","props","ref","React","AntdIcon","_objectSpread","TableOutlinedSvg","displayName"],"sourceRoot":""}