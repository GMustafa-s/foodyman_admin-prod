{"version":3,"file":"static/js/3810.728d040f.chunk.js","mappings":"ySAYe,SAASA,IACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACR,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,EAAAA,KACpD,UAAEC,IAAcJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMI,UAAUF,EAAAA,IACvDG,GAAWC,EAAAA,EAAAA,OACVC,GAAQC,EAAAA,EAAAA,UACTC,GAAWC,EAAAA,EAAAA,MAUjB,SAASC,EAAqBC,GAA0B,IAAlBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAC5C,MAAMG,EAAOd,EAAUe,KAAKC,IAAI,CAC9B,CAACA,EAAKC,QAASR,EAAO,GAAGC,KAASM,EAAKC,eAEzC,OAAOC,OAAOC,OAAO,MAAOL,IAZ9BM,EAAAA,EAAAA,YAAU,IACD,KACL,MAAMC,EAAOjB,EAAKkB,gBAAe,GACjCpB,GAASqB,EAAAA,EAAAA,IAAY,CAAE5B,WAAAA,EAAY0B,KAAAA,OAGpC,IA+BH,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAOjC,EAAE,YAAakC,OAAOH,EAAAA,EAAAA,KAACI,EAAAA,EAAY,IAAIC,UAClDL,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAAC1B,KAAMA,EAAM2B,aAxBLA,CAACtB,EAAQuB,KAC5B,MAAMC,EAAU,QACVC,EAAa,CAAEC,OAAQ,YAAaC,KAAM,QAC1CC,EAAO,CACXD,KAAM,OACNE,OAAQ7B,EAAO6B,OAAS,EAAI,EAC5BC,OAAQP,EAAMpB,OAASoB,EAAMjB,KAAKC,GAASA,EAAKwB,YAAQ3B,EACxDa,MAAOlB,EAAqBC,GAC5BgC,YAAajC,EAAqBC,EAAQ,eAC1CiC,WAAYlC,EAAqBC,EAAQ,eAG3C,OAAOkC,EAAAA,EAAAA,OAAmBN,GAAMO,MAAK,KACnCC,EAAAA,GAAAA,QAAcpD,EAAE,0BAChBqD,EAAAA,EAAAA,KAAM,KACJ5C,GAAS6C,EAAAA,EAAAA,IAAe,IAAKpD,EAAYsC,QAAAA,KACzC/B,GAAS8C,EAAAA,EAAAA,GAAWd,OAEtB5B,EAAS","sources":["views/blog/blog-add.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Card, Form } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeFromMenu, setMenuData } from '../../redux/slices/menu';\nimport { fetchBlogs } from '../../redux/slices/blog';\nimport blogService from '../../services/blog';\nimport LanguageList from '../../components/language-list';\nimport { useTranslation } from 'react-i18next';\nimport BlogForm from './blog-form';\n\nexport default function BlogAdd() {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getTranslationFields(values, field = 'title') {\n    const list = languages.map((item) => ({\n      [item.locale]: values[`${field}[${item.locale}]`],\n    }));\n    return Object.assign({}, ...list);\n  }\n\n  const handleSubmit = (values, image) => {\n    const nextUrl = 'blogs';\n    const paramsData = { status: 'published', type: 'blog' };\n    const body = {\n      type: 'blog',\n      active: values.active ? 1 : 0,\n      images: image.length ? image.map((item) => item.name) : undefined,\n      title: getTranslationFields(values),\n      description: getTranslationFields(values, 'description'),\n      short_desc: getTranslationFields(values, 'short_desc'),\n    };\n\n    return blogService.create(body).then(() => {\n      toast.success(t('successfully.created'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(fetchBlogs(paramsData));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  return (\n    <Card title={t('add.blog')} extra={<LanguageList />}>\n      <BlogForm form={form} handleSubmit={handleSubmit} />\n    </Card>\n  );\n}\n"],"names":["BlogAdd","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","languages","formLang","dispatch","useDispatch","form","Form","navigate","useNavigate","getTranslationFields","values","field","arguments","length","undefined","list","map","item","locale","Object","assign","useEffect","data","getFieldsValue","setMenuData","_jsx","Card","title","extra","LanguageList","children","BlogForm","handleSubmit","image","nextUrl","paramsData","status","type","body","active","images","name","description","short_desc","blogService","then","toast","batch","removeFromMenu","fetchBlogs"],"sourceRoot":""}