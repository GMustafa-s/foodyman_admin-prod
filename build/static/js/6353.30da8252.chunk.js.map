{"version":3,"file":"static/js/6353.30da8252.chunk.js","mappings":"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","sources":["views/seller-views/brands/brand-edit.js","views/seller-views/brands/brand-form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Form, Spin } from 'antd';\nimport { toast } from 'react-toastify';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  disableRefetch,\n  removeFromMenu,\n  setMenuData,\n} from '../../../redux/slices/menu';\nimport { IMG_URL } from '../../../configs/app-global';\nimport { useTranslation } from 'react-i18next';\nimport brandService from '../../../services/seller/brands';\nimport { sellerfetchBrands } from '../../../redux/slices/brand';\nimport BrandForm from './brand-form';\n\nconst SellerBrandEdit = () => {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { params } = useSelector((state) => state.brand, shallowEqual);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      dispatch(setMenuData({ activeMenu, data }));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const createImage = (name) => {\n    return {\n      name,\n      url: IMG_URL + name,\n    };\n  };\n\n  const fetchBrand = (id) => {\n    setLoading(true);\n    brandService\n      .getById(id)\n      .then((res) => {\n        let brand = res.data;\n        const data = {\n          ...brand,\n          image: [createImage(brand.img)],\n        };\n        form.setFieldsValue(data);\n        dispatch(setMenuData({ activeMenu, data }));\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const handleSubmit = (values, image) => {\n    const body = {\n      ...values,\n      active: values.active ? 1 : 0,\n      'images[0]': image[0]?.name,\n    };\n    const paramsData = {\n      ...params,\n    };\n    const nextUrl = 'seller/brands';\n    return brandService.update(id, body).then(() => {\n      toast.success(t('successfully.updated'));\n      batch(() => {\n        dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n        dispatch(sellerfetchBrands(paramsData));\n      });\n      navigate(`/${nextUrl}`);\n    });\n  };\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      fetchBrand(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeMenu.refetch]);\n\n  return (\n    <Card title={t('edit.brand')}>\n      {!loading ? (\n        <BrandForm form={form} handleSubmit={handleSubmit} />\n      ) : (\n        <div className='d-flex justify-content-center align-items-center'>\n          <Spin size='large' className='py-5' />\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default SellerBrandEdit;\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Input, Row, Switch } from 'antd';\nimport MediaUpload from '../../../components/upload';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nexport default function BrandForm({ form, handleSubmit }) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  // states\n  const [image, setImage] = useState(\n    activeMenu.data?.image ? activeMenu.data?.image : [],\n  );\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  // submit form\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    handleSubmit(values, image).finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Form\n      name='basic'\n      layout='vertical'\n      onFinish={onFinish}\n      form={form}\n      initialValues={{ active: true, ...activeMenu.data }}\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <Form.Item\n            label={t('title')}\n            name={'title'}\n            rules={[\n              {\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.reject(new Error(t('required')));\n                  } else if (value && value?.trim() === '') {\n                    return Promise.reject(new Error(t('no.empty.space')));\n                  } else if (value && value?.trim().length < 2) {\n                    return Promise.reject(new Error(t('must.be.at.least.2')));\n                  }\n                  return Promise.resolve();\n                },\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <Form.Item\n            label={t('image')}\n            name='images'\n            rules={[\n              {\n                validator() {\n                  if (image?.length === 0) {\n                    return Promise.reject(new Error(t('required')));\n                  }\n                  return Promise.resolve();\n                },\n              },\n            ]}\n          >\n            <MediaUpload\n              type='brands'\n              imageList={image}\n              setImageList={setImage}\n              form={form}\n              multiple={false}\n            />\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <div className='col-md-12 col-sm-6'>\n            <Form.Item\n              label={t('active')}\n              name='active'\n              valuePropName='checked'\n            >\n              <Switch />\n            </Form.Item>\n          </div>\n        </Col>\n      </Row>\n      <Button type='primary' htmlType='submit' loading={loadingBtn}>\n        {t('submit')}\n      </Button>\n    </Form>\n  );\n}\n"],"names":["SellerBrandEdit","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","id","useParams","dispatch","useDispatch","params","brand","form","Form","navigate","useNavigate","loading","setLoading","useState","useEffect","data","getFieldsValue","setMenuData","refetch","brandService","then","res","image","name","img","url","IMG_URL","setFieldsValue","finally","disableRefetch","fetchBrand","_jsx","Card","title","children","className","Spin","size","BrandForm","handleSubmit","values","_image$","body","active","paramsData","nextUrl","toast","batch","removeFromMenu","sellerfetchBrands","_ref","_activeMenu$data","_activeMenu$data2","setImage","loadingBtn","setLoadingBtn","_jsxs","layout","onFinish","initialValues","Row","gutter","Col","span","label","rules","validator","_","value","trim","Promise","reject","Error","length","resolve","Input","MediaUpload","type","imageList","setImageList","multiple","valuePropName","Switch","Button","htmlType"],"sourceRoot":""}