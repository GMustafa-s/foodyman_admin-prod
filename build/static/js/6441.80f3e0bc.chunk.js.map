{"version":3,"file":"static/js/6441.80f3e0bc.chunk.js","mappings":"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","sources":["components/language-list.js","components/refetch-search.js","components/search.js","helpers/getLanguageFields.js","helpers/getTranslationFields.js","views/categories/category-edit.js","views/categories/category-form.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Radio } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { setDefaultLanguage, setLangugages } from 'redux/slices/formLang';\nimport languagesService from 'services/languages';\n\nconst LanguageList = () => {\n  const dispatch = useDispatch();\n  const { languages, defaultLang } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n\n  const fetchLanguages = () => {\n    languagesService.getAllActive().then(({ data }) => {\n      dispatch(setLangugages(data));\n      dispatch(setDefaultLanguage(data.find((item) => !!item?.default).locale));\n    });\n  };\n\n  useEffect(() => {\n    fetchLanguages();\n  }, []);\n\n  const onChangeLanguage = ({ target: { value } }) => {\n    dispatch(setDefaultLanguage(value));\n  };\n\n  return (\n    <>\n      <Radio.Group\n        value={defaultLang}\n        onChange={onChangeLanguage}\n        className='float-right'\n        buttonStyle='solid'\n      >\n        {languages?.map((item) => {\n          return (\n            <Radio.Button value={item.locale} key={item.id}>\n              {item.title}\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </>\n  );\n};\n\nexport default LanguageList;\n","import React, { useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Select, Spin } from 'antd';\n\nexport const RefetchSearch = ({\n  fetchOptions,\n  debounceTimeout = 400,\n  refetch = false,\n  ...props\n}) => {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  const fetchOnFocus = () => {\n      debounceFetcher('');\n  };\n\n  return (\n    <Select\n      showSearch\n      allowClear\n      labelInValue={true}\n      onClear={() => debounceFetcher('')}\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size='small' /> : 'no results'}\n      {...props}\n      options={options}\n      onFocus={fetchOnFocus}\n    />\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Select, Spin } from 'antd';\n\nexport const DebounceSelect = ({\n  fetchOptions,\n  debounceTimeout = 400,\n  onClear,\n  ...props\n}) => {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  const fetchOnFocus = () => {\n      debounceFetcher('');\n  };\n\n  return (\n    <Select\n      showSearch\n      allowClear\n      labelInValue={true}\n      filterOption={false}\n      onSearch={debounceFetcher}\n      onClear={() => {\n        debounceFetcher('');\n        !!onClear && onClear();\n      }}\n      notFoundContent={fetching ? <Spin size='small' /> : 'no results'}\n      {...props}\n      options={options}\n      onFocus={fetchOnFocus}\n    />\n  );\n};\n","export default function getLanguageFields(languages, data, fields = ['title']) {\n  if (!data?.translations) {\n    return {};\n  }\n  const { translations } = data;\n  const getTranslations = (item, field) => {\n    const findItem = translations?.find((el) => el?.locale === item?.locale);\n    if (findItem) {\n      return findItem;\n    } else {\n      return {\n        [field]: '',\n      };\n    }\n  };\n  const result = languages.flatMap((item) =>\n    fields.flatMap((field) => ({\n      [`${field}[${item?.locale}]`]: getTranslations(item, field)[field],\n    })),\n  );\n\n  return Object.assign({}, ...result);\n}\n","export default function getTranslationFields(\n  languages,\n  values,\n  field = 'title',\n) {\n  const list = languages?.map((item) => ({\n    [item?.locale]: !values[`${field}[${item?.locale}]`]\n      ? undefined\n      : values[`${field}[${item?.locale}]`],\n  }));\n  return Object.assign({}, ...list);\n}\n","import React, { useState, useEffect } from 'react';\nimport { Card, Form, Spin } from 'antd';\nimport { useLocation, useParams } from 'react-router-dom';\nimport LanguageList from 'components/language-list';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from 'redux/slices/menu';\nimport categoryService from 'services/category';\nimport { useTranslation } from 'react-i18next';\nimport { fetchCategories } from 'redux/slices/category';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport getLanguageFields from 'helpers/getLanguageFields';\nimport createImage from 'helpers/createImage';\nimport CategoryList from './category-list';\nimport CategoryForm from './category-form';\n\nconst CategoryEdit = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const { state } = useLocation();\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { languages } = useSelector((state) => state.formLang, shallowEqual);\n  const { params } = useSelector((state) => state.category, shallowEqual);\n\n  const [categoryId, setCategoryId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { uuid } = useParams();\n\n  const paramsData = {\n    ...params,\n    type: state?.parentId ? 'sub_main' : 'main',\n    parent_id: state?.parentId,\n  };\n\n  useEffect(() => {\n    return () => {\n      const data = form.getFieldsValue(true);\n      batch(() => {\n        dispatch(setMenuData({ activeMenu, data }));\n        dispatch(fetchCategories(paramsData));\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useDidUpdate(() => {\n    if (activeMenu.refetch) {\n      getCategory(uuid);\n      dispatch(disableRefetch(activeMenu));\n    }\n  }, [activeMenu.refetch]);\n\n  useEffect(() => {\n    getCategory(uuid);\n    dispatch(disableRefetch(activeMenu));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uuid, state?.parentId]);\n\n  const getCategory = (alias) => {\n    if (!alias) return;\n    setLoading(true);\n    categoryService\n      .getById(alias)\n      .then((res) => {\n        let category = res?.data;\n        console.log('category', category);\n\n        const body = {\n          ...category,\n          ...getLanguageFields(languages, category, ['title', 'description']),\n          image: [createImage(category.img)],\n          keywords: category?.keywords?.split(','),\n          parent_id: {\n            label: category.parent?.translation?.title,\n            value: category.parent_id,\n            key: category.parent_id,\n          },\n        };\n        setCategoryId(category.id);\n        form.setFieldsValue(body);\n        dispatch(setMenuData({ activeMenu, data: body }));\n      })\n      .finally(() => {\n        setLoading(false);\n        dispatch(disableRefetch(activeMenu));\n      });\n  };\n\n  const handleSubmit = (body) => {\n    return categoryService.update(uuid, body);\n  };\n\n  return (\n    <>\n      <Card\n        title={state?.parentId ? t('edit.sub.category') : t('edit.category')}\n        extra={<LanguageList />}\n      >\n        {!loading ? (\n          <CategoryForm form={form} handleSubmit={handleSubmit} />\n        ) : (\n          <div className='d-flex justify-content-center align-items-center py-5'>\n            <Spin size='large' className='mt-5 pt-5' />\n          </div>\n        )}\n      </Card>\n      {!!categoryId && !state?.parentId && (\n        <CategoryList type='sub_main' parentId={categoryId} />\n      )}\n    </>\n  );\n};\nexport default CategoryEdit;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Switch,\n  InputNumber,\n} from 'antd';\nimport TextArea from 'antd/es/input/TextArea';\nimport { RefetchSearch } from 'components/refetch-search';\nimport MediaUpload from 'components/upload';\nimport { useTranslation } from 'react-i18next';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport categoryService from 'services/category';\nimport { DebounceSelect } from 'components/search';\nimport { toast } from 'react-toastify';\nimport { removeFromMenu } from 'redux/slices/menu';\nimport { fetchCategories } from 'redux/slices/category';\nimport getTranslationFields from 'helpers/getTranslationFields';\n\nexport default function CategoryForm({ form, handleSubmit, error }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { defaultLang, languages } = useSelector(\n    (state) => state.formLang,\n    shallowEqual,\n  );\n  const { params } = useSelector((state) => state.category, shallowEqual);\n\n  //states\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [image, setImage] = useState(\n    activeMenu.data?.image ? activeMenu.data?.image : [],\n  );\n\n  const paramsData = {\n    ...params,\n    type: state?.parentId ? 'sub_main' : 'main',\n    parent_id: state?.parentId,\n  };\n\n  //request functions\n  const fetchUserCategoryList = (search = '') => {\n    const params = {\n      perPage: 100,\n      type: state?.parentId ? 'main' : 'sub_shop',\n      active: 1,\n      search: search?.length ? search : undefined,\n    };\n    return categoryService.selectPaginate(params).then((res) =>\n      res.data.map((item) => ({\n        label: item?.translation?.title,\n        value: item?.id,\n        key: item?.id,\n      })),\n    );\n  };\n\n  // submit form\n  const onFinish = (values) => {\n    const body = {\n      ...values,\n      title: getTranslationFields(languages, values),\n      description: getTranslationFields(languages, values, 'description'),\n      type: state?.parentId ? 'sub_main' : 'main',\n      active: Number(values?.active),\n      keywords: values?.keywords?.join(','),\n      parent_id: state?.parentId || values?.parent_id?.value,\n      images: image?.map((item) => item?.name),\n    };\n    setLoadingBtn(true);\n    handleSubmit(body)\n      .then(() => {\n        const nextUrl = state?.parentId\n          ? `category/${state?.parentUuid}`\n          : 'catalog/categories';\n        toast.success(t('successfully.updated'));\n        batch(() => {\n          dispatch(removeFromMenu({ ...activeMenu, nextUrl }));\n          dispatch(fetchCategories(paramsData));\n        });\n\n        navigate(`/${nextUrl}`);\n      })\n      .finally(() => {\n        setLoadingBtn(false);\n      });\n  };\n\n  return (\n    <Form\n      name='basic'\n      layout='vertical'\n      onFinish={onFinish}\n      initialValues={{\n        active: true,\n        ...activeMenu.data,\n      }}\n      form={form}\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          {languages.map((item) => (\n            <Form.Item\n              label={t('name')}\n              name={`title[${item?.locale || 'en'}]`}\n              key={item?.locale}\n              hidden={item?.locale !== defaultLang}\n              rules={[\n                {\n                  required: item?.locale === defaultLang,\n                  message: t('required'),\n                },\n                {\n                  type: 'string',\n                  min: 2,\n                  max: 200,\n                  message: t('min.2.max.200.chars'),\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ))}\n        </Col>\n\n        <Col span={12}>\n          {languages.map((item) => (\n            <Form.Item\n              label={t('description')}\n              name={`description[${item?.locale || 'en'}]`}\n              key={item?.locale}\n              hidden={item?.locale !== defaultLang}\n              rules={[\n                {\n                  required: item?.locale === defaultLang,\n                  message: t('required'),\n                },\n                {\n                  type: 'string',\n                  min: 2,\n                  max: 200,\n                  message: t('min.2.max.200.chars'),\n                },\n              ]}\n            >\n              <TextArea rows={2} />\n            </Form.Item>\n          ))}\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('keywords')}\n            name='keywords'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Select mode='tags' style={{ width: '100%' }}></Select>\n          </Form.Item>\n        </Col>\n        {!state?.parentId && (\n          <Col span={12}>\n            <Form.Item\n              label={t('parent.category')}\n              name='parent_id'\n              rules={[{ required: true, message: t('required') }]}\n            >\n              <RefetchSearch refetch fetchOptions={fetchUserCategoryList} />\n            </Form.Item>\n          </Col>\n        )}\n        <Col span={12}>\n          <Form.Item\n            name='input'\n            label={t('position')}\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <InputNumber\n              min={0}\n              parser={(value) => parseInt(value, 10)}\n              max={32767}\n              className='w-100'\n            />\n          </Form.Item>\n        </Col>\n        <Col span={4}>\n          <Form.Item\n            label={t('image')}\n            name='images'\n            rules={[\n              {\n                required: !image?.length,\n                message: t('required'),\n              },\n            ]}\n          >\n            <MediaUpload\n              type='categories'\n              imageList={image}\n              setImageList={setImage}\n              form={form}\n              multiple={false}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={2}>\n          <Form.Item label={t('active')} name='active' valuePropName='checked'>\n            <Switch />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Button type='primary' htmlType='submit' loading={loadingBtn}>\n        {t('submit')}\n      </Button>\n    </Form>\n  );\n}\n"],"names":["LanguageList","dispatch","useDispatch","languages","defaultLang","useSelector","state","formLang","shallowEqual","useEffect","languagesService","then","_ref","data","setLangugages","setDefaultLanguage","find","item","default","locale","_jsx","_Fragment","children","Radio","value","onChange","_ref2","target","className","buttonStyle","map","title","id","RefetchSearch","fetchOptions","debounceTimeout","refetch","props","fetching","setFetching","useState","options","setOptions","debounceFetcher","useMemo","debounce","newOptions","Select","showSearch","allowClear","labelInValue","onClear","filterOption","onSearch","notFoundContent","Spin","size","onFocus","fetchOnFocus","DebounceSelect","getLanguageFields","fields","arguments","length","undefined","translations","getTranslations","field","findItem","el","result","flatMap","Object","assign","getTranslationFields","values","list","CategoryEdit","t","useTranslation","form","Form","useLocation","activeMenu","menu","params","category","categoryId","setCategoryId","loading","setLoading","uuid","useParams","paramsData","type","parentId","parent_id","getFieldsValue","batch","setMenuData","fetchCategories","useDidUpdate","getCategory","disableRefetch","alias","categoryService","res","_category$keywords","_category$parent","_category$parent$tran","console","log","body","image","createImage","img","keywords","split","label","parent","translation","key","setFieldsValue","finally","_jsxs","Card","extra","CategoryForm","handleSubmit","CategoryList","_activeMenu$data","_activeMenu$data2","error","navigate","useNavigate","loadingBtn","setLoadingBtn","setImage","name","layout","onFinish","_values$keywords","_values$parent_id","description","active","Number","join","images","nextUrl","parentUuid","toast","removeFromMenu","initialValues","Row","gutter","Col","span","hidden","rules","required","message","min","max","Input","TextArea","rows","mode","style","width","search","perPage","_item$translation","InputNumber","parser","parseInt","MediaUpload","imageList","setImageList","multiple","valuePropName","Switch","Button","htmlType"],"sourceRoot":""}