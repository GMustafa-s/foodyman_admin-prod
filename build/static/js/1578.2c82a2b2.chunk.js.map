{"version":3,"file":"static/js/1578.2c82a2b2.chunk.js","mappings":"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","sources":["views/currencies/currency-form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  Form,\n  Input,\n  InputNumber,\n  Row,\n  Select,\n  Switch,\n} from 'antd';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport currency from '../../helpers/currnecy.json';\n\nexport default function CurrencyForm({\n  form,\n  handleSubmit,\n  isDefault = false,\n}) {\n  const { t } = useTranslation();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  // states\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  // constants\n  const options = currency.map((item) => ({\n    label: `${item?.name?.toUpperCase()} ( ${item?.symbol_native} )`,\n    value: item?.code,\n    symbol: item?.symbol_native,\n  }));\n\n  // submit form\n  const onFinish = (values) => {\n    setLoadingBtn(true);\n    handleSubmit(values).finally(() => setLoadingBtn(false));\n  };\n\n  return (\n    <Form\n      name='currency-form'\n      onFinish={onFinish}\n      form={form}\n      layout='vertical'\n      initialValues={{\n        ...activeMenu.data,\n        active: true,\n        position: 'before',\n      }}\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <Form.Item\n            label={t('title')}\n            name='title'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Select\n              onChange={(e, i) => form.setFieldsValue({ symbol: i.symbol })}\n              filterOption={(input, option) =>\n                (option?.label ?? '')\n                  .toLowerCase()\n                  .includes(input.toLowerCase())\n              }\n              filterSort={(optionA, optionB) =>\n                (optionA?.label ?? '')\n                  .toLowerCase()\n                  .localeCompare((optionB?.label ?? '').toLowerCase())\n              }\n              showSearch\n              allowClear\n              options={options}\n            />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('symbol')}\n            name='symbol'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Input disabled />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('rate')}\n            name='rate'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n              {\n                type: 'number',\n                min: 0,\n                message: t('must.be.positive'),\n              },\n            ]}\n          >\n            <InputNumber className='w-100' />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('symbol_position')}\n            name='position'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Select\n              onChange={(value) => form.setFieldsValue({ position: value })}\n              options={[\n                { label: t('after'), value: 'after' },\n                { label: t('before'), value: 'before' },\n              ]}\n              defaultValue='before'\n            />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label={t('active')} name='active' valuePropName='checked'>\n            <Switch disabled={isDefault} />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Button type='primary' htmlType='submit' loading={loadingBtn}>\n        {t('submit')}\n      </Button>\n    </Form>\n  );\n}\n"],"names":["CurrencyForm","_ref","form","handleSubmit","isDefault","t","useTranslation","activeMenu","useSelector","state","menu","shallowEqual","loadingBtn","setLoadingBtn","useState","options","currency","item","_item$name","label","name","toUpperCase","symbol_native","value","code","symbol","_jsxs","Form","onFinish","values","finally","layout","initialValues","data","active","position","children","Row","gutter","_jsx","Col","span","rules","required","message","Select","onChange","e","i","setFieldsValue","filterOption","input","option","_option$label","toLowerCase","includes","filterSort","optionA","optionB","_optionA$label","_optionB$label","localeCompare","showSearch","allowClear","Input","disabled","type","min","InputNumber","className","defaultValue","valuePropName","Switch","Button","htmlType","loading"],"sourceRoot":""}