{"version":3,"file":"static/js/192.a8d20b01.chunk.js","mappings":"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","sources":["services/subscriptions.js","views/subscriptions/subscriptions-edit.js","views/subscriptions/subscriptions-form.js"],"sourcesContent":["import request from './request';\n\nconst subscriptionService = {\n  getAll: (params) => request.get('dashboard/admin/subscriptions', { params }),\n  getById: (id, params) =>\n    request.get(`dashboard/admin/subscriptions/${id}`, { params }),\n  update: (id, data) =>\n    request.put(`dashboard/admin/subscriptions/${id}`, data),\n  create: (data) => request.post(`dashboard/admin/subscriptions`, data),\n};\n\nexport default subscriptionService;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Form, Modal } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport subscriptionService from '../../services/subscriptions';\nimport Loading from '../../components/loading';\nimport SubscriptionForm from './subscriptions-form';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { setMenuData } from '../../redux/slices/menu';\n\nexport default function SubscriptionEditModal({\n  modal,\n  handleCancel,\n  refetch,\n}) {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const onFinish = (values) => {\n    const payload = {\n      ...values,\n      active: Number(values.active),\n      with_report: Number(values.with_report),\n      type: 'shop',\n    };\n    setLoadingBtn(true);\n\n    subscriptionService\n      .update(modal.id, payload)\n      .then(() => {\n        handleCancel();\n        refetch();\n      })\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const fetchSubscriptionList = () => {\n    setLoading(true);\n    subscriptionService\n      .getById(modal.id)\n      .then((res) => {\n        const data = {\n          ...res.data,\n          with_report: !!res?.data?.with_report,\n          active: !!res?.data?.active,\n        };\n        form.setFieldsValue({\n          ...data,\n        });\n        dispatch(setMenuData({ activeMenu, data }));\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    fetchSubscriptionList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [modal]);\n\n  return (\n    <React.Fragment>\n      <Modal\n        visible={!!modal}\n        title={t('edit.subscription')}\n        onCancel={handleCancel}\n        style={{ minWidth: 800 }}\n        footer={[\n          <Button\n            type='primary'\n            onClick={() => form.submit()}\n            loading={loadingBtn}\n            key='save-btn'\n          >\n            {t('save')}\n          </Button>,\n          <Button type='default' onClick={handleCancel} key='cancel-btn'>\n            {t('cancel')}\n          </Button>,\n        ]}\n      >\n        {loading ? (\n          <Loading />\n        ) : (\n          <SubscriptionForm form={form} onFinish={onFinish} />\n        )}\n      </Modal>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Col, Form, Input, InputNumber, Row, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nexport default function SubscriptionForm({ form, onFinish }) {\n  const { t } = useTranslation();\n\n  return (\n    <Form form={form} layout='vertical' onFinish={onFinish}>\n      <Row gutter={12}>\n        <Col span={12}>\n          <Form.Item\n            label={t('title')}\n            name='title'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('period')}\n            name='month'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <InputNumber min={0} max={12} className='w-100' />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('product_limit')}\n            name='product_limit'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <InputNumber min={0} className='w-100' />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('order_limit')}\n            name='order_limit'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <InputNumber min={0} className='w-100' />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            label={t('price')}\n            name='price'\n            rules={[\n              {\n                required: true,\n                message: t('required'),\n              },\n            ]}\n          >\n            <InputNumber min={0} className='w-100' />\n          </Form.Item>\n        </Col>\n        <Col span={12} />\n\n        <Col span={12}>\n          <Form.Item\n            label={t('with_report')}\n            name='with_report'\n            valuePropName='checked'\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label={t('active')} name='active' valuePropName='checked'>\n            <Switch />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n"],"names":["getAll","params","request","getById","id","update","data","create","SubscriptionEditModal","_ref","modal","handleCancel","refetch","dispatch","useDispatch","form","Form","t","useTranslation","loadingBtn","setLoadingBtn","useState","loading","setLoading","activeMenu","useSelector","state","menu","shallowEqual","useEffect","subscriptionService","then","res","_res$data","_res$data2","with_report","active","setFieldsValue","setMenuData","finally","_jsx","React","children","Modal","visible","title","onCancel","style","minWidth","footer","Button","type","onClick","submit","Loading","SubscriptionForm","onFinish","values","payload","Number","layout","_jsxs","Row","gutter","Col","span","label","name","rules","required","message","Input","InputNumber","min","max","className","valuePropName","Switch"],"sourceRoot":""}